<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cfetimeugparadigm" kind="page">
    <compoundname>cfetimeugparadigm</compoundname>
    <title>Time Services Paradigm(s)</title>
    <detaileddescription>
<para>In order for the cFE Time Services to work for a particular mission, the methods of obtaining time, distributing time and translating time must follow some standard paradigms used in previous missions. The following describes this expected context:</para><para>Mission dependent hardware provides the Tone. When this Tone message is received, TIME latches the local time based on the local clock. Note that in lab environments, a simulated Tone capability exists which uses an SB message. Mission dependent hardware also provides the &quot;time at the tone&quot; message based on the hardware latched time and the reference times stored by TIME Server. The TIME Client then updates its local reference time based on the local hardware latched time at the Tone and the provided Time-at-Tone message packet when certain checks (such as the Validity bit being set) pass.</para><para>When used in an environment that includes multiple processors, each running a separate instantiation of cFE software, the presumption is that TIME will be distributed in a client/server relationship. In this model, one processor will have TIME configured as the server and the other processors as clients. The TIME server will maintain the various time components and publish a &quot;time at the tone&quot; message to provide synchronized time to the TIME clients. Environments that have only a single instance of TIME must be configured as a TIME server.</para><para>In all configurations, the final step in calculating the time &quot;right now&quot; for any instantiation of TIME is to use a local processor clock to measure the &quot;time since the tone&quot;.</para><para>The specific MET hardware properties will determine whether the MET value can be modified. However, the cFE design is such that there should never be a need to purposefully change or reset the MET.</para><para>Regardless of the physical hardware implementation for the MET (elapsed seconds, elapsed ticks, etc.), cFE TIME will convert the hardware MET value into a System Time Format structure for time calculations and will report the converted value in telemetry. cFE TIME will also maintain and report the STCF in a System Time Format structure.</para><para>cFE TIME has no knowledge of the current epoch; it is up to the user to keep time on the spacecraft correlated to an epoch. An exception might appear to be the epoch definition required in the cFE mission configuration definition file. However, this definition is for use only by the API functions that convert spacecraft time and file system time, and the API function that prints spacecraft time as a date and time text string. The cFE &quot;get time&quot; functions are independent of the ground epoch.</para><para>The mission configuration parameters, <ref refid="cfe__mission__cfg_8h_1a9407c65fd64a9918ae07287b82adf320" kindref="member">CFE_TIME_CFG_DEFAULT_TAI</ref> and <ref refid="cfe__mission__cfg_8h_1a5f97e271186900711dda18e60e17cd15" kindref="member">CFE_TIME_CFG_DEFAULT_UTC</ref> specify the default time format. Applications are encouraged to use the <ref refid="cfe__time_8h_1abf540f01ef8e0b2c7f2ec755148b6ac6" kindref="member">CFE_TIME_GetTime</ref> API, which returns time in the format specified by this configuration parameter.</para><para>Next: <ref refid="cfetimeugflywheeling" kindref="compound">Flywheeling</ref> <linebreak/>
 Prev: <ref refid="cfetimeugcomponents" kindref="compound">Time Components</ref> <linebreak/>
 Up To: <ref refid="cfetimeovr" kindref="compound">cFE Time Services Overview</ref> </para>    </detaileddescription>
  </compounddef>
</doxygen>
