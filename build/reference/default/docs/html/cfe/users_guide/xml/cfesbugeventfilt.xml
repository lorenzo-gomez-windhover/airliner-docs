<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cfesbugeventfilt" kind="page">
    <compoundname>cfesbugeventfilt</compoundname>
    <title>SB Event Filtering</title>
    <detaileddescription>
<para>Most filtering for SB events is performed by the cFE Event Services (EVS). Filtering for SB events may be specified in the cFE platform configuration file or may be commanded after the system initializes. There is no SB event log that limits the number of events based on the capacity of the log, as in the heritage software bus.</para><para>There is one case in which events are filtered by the software bus instead of event services. This occurs when the software bus needs to suppress events so that a fatal recursive event condition does not transpire. Because the <ref refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d" kindref="member">CFE_SB_SendMsg</ref> API is a library function that calls <ref refid="cfe__evs_8h_1a811a2fa1e9ac02cee9f39cb4a6c08075" kindref="member">CFE_EVS_SendEvent</ref>, and <ref refid="cfe__evs_8h_1a811a2fa1e9ac02cee9f39cb4a6c08075" kindref="member">CFE_EVS_SendEvent</ref> is a library function that calls <ref refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d" kindref="member">CFE_SB_SendMsg</ref>, a calling sequence could cause a stack overflow if the recursion is not properly terminated. The cFE software bus detects this condition and properly terminates the recursion. This is done by using a set of flags (one flag per event in the Send API) which determine whether an API has relinquished its stack. If the <ref refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d" kindref="member">CFE_SB_SendMsg</ref> needs to send an event that may cause recursion, the flag is set and the event is sent. <ref refid="cfe__evs_8h_1a811a2fa1e9ac02cee9f39cb4a6c08075" kindref="member">CFE_EVS_SendEvent</ref> then calls <ref refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d" kindref="member">CFE_SB_SendMsg</ref> in the same thread. If the second call to <ref refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d" kindref="member">CFE_SB_SendMsg</ref> needs to send that same event again, it finds that the flag is set and the <ref refid="cfe__evs_8h_1a811a2fa1e9ac02cee9f39cb4a6c08075" kindref="member">CFE_EVS_SendEvent</ref> call is bypassed, terminating the recursion. The result is that the user will see only one event instead of the many events that would normally occur without the protection. The heritage software bus did not have this condition because it stored events in the software bus event log and another thread would read them out at a later time.</para><para>Next: <ref refid="cfesbugdiagdata" kindref="compound">Diagnostic Data</ref> <linebreak/>
 Prev: <ref refid="cfesbugovererr" kindref="compound">Pipe Overflow Error</ref> <linebreak/>
 Up To: <ref refid="cfesbugops" kindref="compound">Operation of the SB Software</ref> </para>    </detaileddescription>
  </compounddef>
</doxygen>
