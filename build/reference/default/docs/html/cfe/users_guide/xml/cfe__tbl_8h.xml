<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cfe__tbl_8h" kind="file" language="C++">
    <compoundname>cfe_tbl.h</compoundname>
    <includes refid="common__types_8h" local="yes">common_types.h</includes>
    <includes refid="cfe__time_8h" local="yes">cfe_time.h</includes>
    <includes local="yes">osconfig.h</includes>
    <includedby refid="cfe_8h" local="yes">inc/cfe.h</includedby>
    <incdepgraph>
      <node id="522">
        <label>common_types.h</label>
        <link refid="common__types_8h"/>
      </node>
      <node id="523">
        <label>cfe_time.h</label>
        <link refid="cfe__time_8h"/>
        <childnode refid="522" relation="include">
        </childnode>
      </node>
      <node id="524">
        <label>osconfig.h</label>
      </node>
      <node id="521">
        <label>inc/cfe_tbl.h</label>
        <link refid="cfe_tbl.h"/>
        <childnode refid="522" relation="include">
        </childnode>
        <childnode refid="523" relation="include">
        </childnode>
        <childnode refid="524" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="529">
        <label>inc/cfe_tbl_filedef.h</label>
        <link refid="cfe__tbl__filedef_8h"/>
      </node>
      <node id="530">
        <label>inc/cfe_tbl_msg.h</label>
        <link refid="cfe__tbl__msg_8h"/>
      </node>
      <node id="537">
        <label>es/cfe_es_log.h</label>
        <link refid="cfe__es__log_8h"/>
      </node>
      <node id="533">
        <label>es/cfe_es_cds_mempool.h</label>
        <link refid="cfe__es__cds__mempool_8h"/>
        <childnode refid="534" relation="include">
        </childnode>
      </node>
      <node id="536">
        <label>sb/cfe_sb_priv.h</label>
        <link refid="cfe__sb__priv_8h"/>
      </node>
      <node id="528">
        <label>es/cfe_es_perf.h</label>
        <link refid="cfe__es__perf_8h"/>
      </node>
      <node id="535">
        <label>evs/cfe_evs_task.h</label>
        <link refid="cfe__evs__task_8h"/>
      </node>
      <node id="534">
        <label>es/cfe_es_cds.h</label>
        <link refid="cfe__es__cds_8h"/>
      </node>
      <node id="526">
        <label>inc/cfe.h</label>
        <link refid="cfe_8h"/>
        <childnode refid="527" relation="include">
        </childnode>
        <childnode refid="529" relation="include">
        </childnode>
        <childnode refid="530" relation="include">
        </childnode>
        <childnode refid="531" relation="include">
        </childnode>
        <childnode refid="532" relation="include">
        </childnode>
        <childnode refid="537" relation="include">
        </childnode>
      </node>
      <node id="532">
        <label>inc/private/cfe_private.h</label>
        <link refid="cfe__private_8h"/>
        <childnode refid="533" relation="include">
        </childnode>
        <childnode refid="535" relation="include">
        </childnode>
        <childnode refid="536" relation="include">
        </childnode>
      </node>
      <node id="525">
        <label>inc/cfe_tbl.h</label>
        <link refid="cfe_tbl.h"/>
        <childnode refid="526" relation="include">
        </childnode>
      </node>
      <node id="531">
        <label>inc/cfe_time_msg.h</label>
        <link refid="cfe__time__msg_8h"/>
      </node>
      <node id="527">
        <label>inc/cfe_es_msg.h</label>
        <link refid="cfe__es__msg_8h"/>
        <childnode refid="528" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_c_f_e___t_b_l___info__t" prot="public">CFE_TBL_Info_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cfe__tbl_8h_1a327c8033134d11c668ba7a49af0807f7" prot="public" static="no">
        <name>CFE_TBL_OPT_BUFFER_MSK</name>
        <initializer>(0x0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="70" column="9" bodyfile="inc/cfe_tbl.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" prot="public" static="no">
        <name>CFE_TBL_OPT_SNGL_BUFFER</name>
        <initializer>(0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="71" column="9" bodyfile="inc/cfe_tbl.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a348e5a36d0fdd005b03a72953018399b" prot="public" static="no">
        <name>CFE_TBL_OPT_DBL_BUFFER</name>
        <initializer>(0x0001)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="72" column="9" bodyfile="inc/cfe_tbl.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a60b453b213d33328c81f200c74f7ca1c" prot="public" static="no">
        <name>CFE_TBL_OPT_LD_DMP_MSK</name>
        <initializer>(0x0002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="74" column="9" bodyfile="inc/cfe_tbl.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a6f3780029f5da6705e8a63572c7092d8" prot="public" static="no">
        <name>CFE_TBL_OPT_LOAD_DUMP</name>
        <initializer>(0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="75" column="9" bodyfile="inc/cfe_tbl.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" prot="public" static="no">
        <name>CFE_TBL_OPT_DUMP_ONLY</name>
        <initializer>(0x0002)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="76" column="9" bodyfile="inc/cfe_tbl.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a02d55b01e3816454ae663f791a5f9d27" prot="public" static="no">
        <name>CFE_TBL_OPT_USR_DEF_MSK</name>
        <initializer>(0x0004)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="78" column="9" bodyfile="inc/cfe_tbl.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1ade650c959a821bacbf66e830a708ea0e" prot="public" static="no">
        <name>CFE_TBL_OPT_NOT_USR_DEF</name>
        <initializer>(0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="79" column="9" bodyfile="inc/cfe_tbl.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" prot="public" static="no">
        <name>CFE_TBL_OPT_USR_DEF_ADDR</name>
        <initializer>(0x0006)</initializer>
        <briefdescription>
<para>NOTE: Automatically includes <ref refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" kindref="member">CFE_TBL_OPT_DUMP_ONLY</ref> option. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="80" column="9" bodyfile="inc/cfe_tbl.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a6954f2be6654c83746c77374e27f708b" prot="public" static="no">
        <name>CFE_TBL_OPT_CRITICAL_MSK</name>
        <initializer>(0x0008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="82" column="9" bodyfile="inc/cfe_tbl.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a8b7fc396ff0f6d2c6f4d6557be080dd6" prot="public" static="no">
        <name>CFE_TBL_OPT_NOT_CRITICAL</name>
        <initializer>(0x0000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="83" column="9" bodyfile="inc/cfe_tbl.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1ad65bbf63062d62687a27e613158c94e0" prot="public" static="no">
        <name>CFE_TBL_OPT_CRITICAL</name>
        <initializer>(0x0008)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="84" column="9" bodyfile="inc/cfe_tbl.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462" prot="public" static="no">
        <name>CFE_TBL_OPT_DEFAULT</name>
        <initializer>(<ref refid="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" kindref="member">CFE_TBL_OPT_SNGL_BUFFER</ref> | <ref refid="cfe__tbl_8h_1a6f3780029f5da6705e8a63572c7092d8" kindref="member">CFE_TBL_OPT_LOAD_DUMP</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="86" column="9" bodyfile="inc/cfe_tbl.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a6ba253c60a3ee06e2938b240947cc308" prot="public" static="no">
        <name>CFE_TBL_MAX_FULL_NAME_LEN_COMP</name>
        <initializer>(<ref refid="cfe__mission__cfg_8h_1a57b941daf6cdf4df9790ead1d1aa842d" kindref="member">CFE_TBL_MAX_NAME_LENGTH</ref> + OS_MAX_API_NAME + 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computation for maximum length allowed for a table name. <linebreak/>
 NOTE: &quot;+2&quot; is for NULL Character and &quot;.&quot; (i.e. - &quot;AppName.TblName&quot;) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="90" column="9" bodyfile="inc/cfe_tbl.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1a67d8222130c2a5c608374b7ad9b6d54d" prot="public" static="no">
        <name>CFE_TBL_MAX_FULL_NAME_LEN</name>
        <initializer>(((<ref refid="cfe__tbl_8h_1a6ba253c60a3ee06e2938b240947cc308" kindref="member">CFE_TBL_MAX_FULL_NAME_LEN_COMP</ref> + 3)/4)*4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="92" column="9" bodyfile="inc/cfe_tbl.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cfe__tbl_8h_1aeb661bd0351ec225ba7f75b2cf3afb52" prot="public" static="no">
        <name>CFE_TBL_BAD_TABLE_HANDLE</name>
        <initializer>(<ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref>) 0xFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="94" column="9" bodyfile="inc/cfe_tbl.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927" prot="public" static="no">
        <name>CFE_TBL_SrcEnum_t</name>
        <enumvalue id="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be" prot="public">
          <name>CFE_TBL_SRC_FILE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>When this option is selected, the <computeroutput>SrcDataPtr</computeroutput> will be interpreted as a pointer to a null terminated character string. The string should specify the full path and filename of the file containing the initial data contents of the table. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927a46977ad2a21a435ebff3277d833b22de" prot="public">
          <name>CFE_TBL_SRC_ADDRESS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>When this option is selected, the <computeroutput>SrcDataPtr</computeroutput> will be interpreted as a pointer to a memory location that is the beginning of the initialization data for loading the table OR, in the case of a &quot;user defined&quot; dump only table, the address of the active table itself. The block of memory is assumed to be of the same size specified in the <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> function Size parameter. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="103" column="1" bodyfile="inc/cfe_tbl.h" bodystart="102" bodyend="116"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cfe__tbl_8h_1a8cdb7faa0695dbe54607f3836b3ac75e" prot="public" static="no">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref>(*</type>
        <definition>typedef int32(* CFE_TBL_CallbackFuncPtr_t) (void *TblPtr)</definition>
        <argsstring>)(void *TblPtr)</argsstring>
        <name>CFE_TBL_CallbackFuncPtr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="98" column="1" bodyfile="inc/cfe_tbl.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" prot="public" static="no">
        <type><ref refid="common__types_8h_1adf957e9fa8c95c188ffacb8197aa8725" kindref="member">int16</ref></type>
        <definition>typedef int16 CFE_TBL_Handle_t</definition>
        <argsstring></argsstring>
        <name>CFE_TBL_Handle_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="100" column="1" bodyfile="inc/cfe_tbl.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Register</definition>
        <argsstring>(CFE_TBL_Handle_t *TblHandlePtr, const char *Name, uint32 Size, uint16 TblOptionFlags, CFE_TBL_CallbackFuncPtr_t TblValidationFuncPtr)</argsstring>
        <name>CFE_TBL_Register</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref> *</type>
          <declname>TblHandlePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Size</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref></type>
          <declname>TblOptionFlags</declname>
        </param>
        <param>
          <type><ref refid="cfe__tbl_8h_1a8cdb7faa0695dbe54607f3836b3ac75e" kindref="member">CFE_TBL_CallbackFuncPtr_t</ref></type>
          <declname>TblValidationFuncPtr</declname>
        </param>
        <briefdescription>
<para>Register a table with cFE to obtain Table Management Services. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>When an application is created and initialized, it is responsible for creating its table images via the TBL API. The application must inform the Table Service of the table name, table size and selection of optional table features.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>Note: This function call can block. Therefore, interrupt service routines should NOT create their own tables. An application should create any table(s) and provide the handle(s) to the interrupt service routine.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a <ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref> type variable that will be assigned the table&apos;s handle. The table handle is required for other API calls when accessing the data contained in the table.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Name</parametername>
</parameternamelist>
<parameterdescription>
<para>The application-specific name. This name will be combined with the name of the application to produce a processor specific name of the form &quot;ApplicationName.TableName&quot;. The processor specific name will be used in commands for modifying or viewing the contents of the table.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size, in bytes, of the table to be created. This is the size that will be allocated as a shared memory resource between the Table Management Service and the calling application.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblOptionFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag bits indicating selected options for table. A bitwise OR of the following option flags: <itemizedlist>
<listitem><para><ref refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462" kindref="member">CFE_TBL_OPT_DEFAULT</ref> - The default setting for table options is a combination of <ref refid="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" kindref="member">CFE_TBL_OPT_SNGL_BUFFER</ref> and <ref refid="cfe__tbl_8h_1a6f3780029f5da6705e8a63572c7092d8" kindref="member">CFE_TBL_OPT_LOAD_DUMP</ref>. See below for a description of these two options. This option is mutually exclusive with the <ref refid="cfe__tbl_8h_1a348e5a36d0fdd005b03a72953018399b" kindref="member">CFE_TBL_OPT_DBL_BUFFER</ref>, <ref refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" kindref="member">CFE_TBL_OPT_DUMP_ONLY</ref> and <ref refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" kindref="member">CFE_TBL_OPT_USR_DEF_ADDR</ref> options. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" kindref="member">CFE_TBL_OPT_SNGL_BUFFER</ref> - When this option is selected, the table will use a shared session table for performing table modifications and a memory copy from the session table to the &quot;active&quot; table buffer will occur when the table is updated. This is the preferred option since it will minimize memory usage. This option is mutually exclusive with the <ref refid="cfe__tbl_8h_1a348e5a36d0fdd005b03a72953018399b" kindref="member">CFE_TBL_OPT_DBL_BUFFER</ref> option </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1a348e5a36d0fdd005b03a72953018399b" kindref="member">CFE_TBL_OPT_DBL_BUFFER</ref> - When this option is selected, two instances of the table are created. One is considered the &quot;active&quot; table and the other the &quot;inactive&quot; table. Whenever table modifications occur, they do not require the use of a common session table. Modifications occur in the &quot;inactive&quot; buffer. Then, when it is time to update the table, the pointer to the &quot;active&quot; table is changed to point to the &quot;inactive&quot; buffer thus making it the new &quot;active&quot; buffer. This feature is most useful for time critical applications (ie - interrupt service routines, etc). This option is mutually exclusive with the <ref refid="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" kindref="member">CFE_TBL_OPT_SNGL_BUFFER</ref> and <ref refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462" kindref="member">CFE_TBL_OPT_DEFAULT</ref> option. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1a6f3780029f5da6705e8a63572c7092d8" kindref="member">CFE_TBL_OPT_LOAD_DUMP</ref> - When this option is selected, the Table Service is allowed to perform all operations on the specified table. This option is mutually exclusive with the <ref refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" kindref="member">CFE_TBL_OPT_DUMP_ONLY</ref> option. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" kindref="member">CFE_TBL_OPT_DUMP_ONLY</ref> - When this option is selected, the Table Service will not perform table loads to this table. This does not prevent, however, a task from writing to the table via an address obtained with the <ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref> API function. This option is mutually exclusive with the <ref refid="cfe__tbl_8h_1a6f3780029f5da6705e8a63572c7092d8" kindref="member">CFE_TBL_OPT_LOAD_DUMP</ref> and <ref refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462" kindref="member">CFE_TBL_OPT_DEFAULT</ref> options. If the Application wishes to specify their own block of memory as the Dump Only table, they need to also include the <ref refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" kindref="member">CFE_TBL_OPT_USR_DEF_ADDR</ref> option explained below. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1ade650c959a821bacbf66e830a708ea0e" kindref="member">CFE_TBL_OPT_NOT_USR_DEF</ref> - When this option is selected, Table Services allocates memory for the table and, in the case of a double buffered table, it allocates the same amount of memory again for the second buffer. This option is mutually exclusive with the <ref refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" kindref="member">CFE_TBL_OPT_USR_DEF_ADDR</ref> option. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" kindref="member">CFE_TBL_OPT_USR_DEF_ADDR</ref>- When this option is selected, the Table Service will not allocate memory for the table. Table Services will require the Application to identify the location of the active table buffer via the <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> function. This option implies the <ref refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" kindref="member">CFE_TBL_OPT_DUMP_ONLY</ref> and the <ref refid="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" kindref="member">CFE_TBL_OPT_SNGL_BUFFER</ref> options and is mutually exclusive of the <ref refid="cfe__tbl_8h_1a348e5a36d0fdd005b03a72953018399b" kindref="member">CFE_TBL_OPT_DBL_BUFFER</ref> option. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1ad65bbf63062d62687a27e613158c94e0" kindref="member">CFE_TBL_OPT_CRITICAL</ref>- When this option is selected, the Table Service will automatically allocate space in the Critical Data Store (CDS) for the table and insure that the contents in the CDS are the same as the contents of the currently active buffer for the table. This option is mutually exclusive of the <ref refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" kindref="member">CFE_TBL_OPT_USR_DEF_ADDR</ref> and <ref refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" kindref="member">CFE_TBL_OPT_DUMP_ONLY</ref> options. It should also be noted that the use of this option with double buffered tables will prevent the update of the double buffered table from being quick and it could be blocked. Therefore, critical tables should not be updated by Interrupt Service Routines.</para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblValidationFuncPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>is a pointer to a function that will be executed in the context of the Table Management Service when the contents of a table need to be validated. If set to NULL, then the Table Management Service will assume any data is valid. If the value is not NULL, it must be a pointer to a function with the following prototype: <linebreak/>
 <bold> int32 CallbackFunc(void *TblPtr);</bold> <linebreak/>
 where <linebreak/>
 <bold>TblPtr </bold> will be a pointer to the table data that is to be verified. When the function returns <ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref>, the data is considered valid and ready for a commit. When the function returns a negative value, the data is considered invalid and an Event Message will be issued containing the returned value. If the function should return a positive number, the table is considered invalid and the return code is considered invalid. Validation functions <bold>must</bold> return either <ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> or a negative number (whose value is at the developer&apos;s discretion). The validation function will be executed in the Application&apos;s context so that Event Messages describing the validation failure are possible from within the function.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*TblHandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle used to identify table to cFE when performing Table operations. This value is returned at the address specified by TblHandlePtr.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="12" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a6e0d87c11dc5a59db9f696436e3625ad" kindref="member">CFE_TBL_INFO_RECOVERED_TBL</ref> </para></entry><entry thead="no"><para>The calling Application registered a critical table whose previous contents were discovered in the Critical Data Store. The discovered contents were copied back into the newly registered table as the table&apos;s initial contents.<linebreak/>
 <bold>NOTE:</bold> In this situation, the contents of the table are <bold>NOT</bold> validated using the table&apos;s validation function.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a532245fa8a3dbf2ae165920f4909efba" kindref="member">CFE_TBL_ERR_DUPLICATE_DIFF_SIZE</ref> </para></entry><entry thead="no"><para>An application attempted to register a table with the same name as a table that is already in the registry. The size of the new table is different from the size already in the registry.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab95fb0bb8aa58eae7e2e23d0ff3cd387" kindref="member">CFE_TBL_ERR_DUPLICATE_NOT_OWNED</ref> </para></entry><entry thead="no"><para>An application attempted to register a table with the same name as a table that is already in the registry. The previously registered table is owned by a different application.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a6943869fef0edc68c21918d8c32f0787" kindref="member">CFE_TBL_ERR_REGISTRY_FULL</ref> </para></entry><entry thead="no"><para>An application attempted to create a table and the Table registry already contained #CFE_TBL_MAX_NUM_TABLES in it.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8bd8de285af771481c55618b246ae979" kindref="member">CFE_TBL_ERR_HANDLES_FULL</ref> </para></entry><entry thead="no"><para>An application attempted to create a table and the Table Handle Array already used all CFE_TBL_MAX_NUM_HANDLES in it.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a01dc66898b51cc9ac86b8a469d7cb3e4" kindref="member">CFE_TBL_ERR_INVALID_SIZE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to register a table: a) that was a double buffered table with size greater than #CFE_TBL_MAX_DBL_TABLE_SIZE b) that was a single buffered table with size greater than #CFE_TBL_MAX_SNGL_TABLE_SIZE c) that had a size of zero  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ae635c53dae2d5299c86bd6a9d9935237" kindref="member">CFE_TBL_ERR_INVALID_NAME</ref> </para></entry><entry thead="no"><para>The calling Application attempted to register a table whose name length exceeded the platform configuration value of <ref refid="cfe__mission__cfg_8h_1a57b941daf6cdf4df9790ead1d1aa842d" kindref="member">CFE_TBL_MAX_NAME_LENGTH</ref> or was zero characters long.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1aaf440695f09ae0621c8d9419fefc4bf3" kindref="member">CFE_TBL_Unregister</ref>, <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Share</definition>
        <argsstring>(CFE_TBL_Handle_t *TblHandlePtr, const char *TblName)</argsstring>
        <name>CFE_TBL_Share</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref> *</type>
          <declname>TblHandlePtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>TblName</declname>
        </param>
        <briefdescription>
<para>Obtain handle of table registered by another application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>After a table has been created, other applications can gain access to that table via the table handle. In order for two or more applications to share a table, the applications that do not create the table must obtain the handle using this function.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref> type variable that will be assigned the table&apos;s handle. The table handle is required for other API calls when accessing the data contained in the table.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblName</parametername>
</parameternamelist>
<parameterdescription>
<para>The processor specific name of the table. It is important to note that the processor specific table name is different from the table name specified in the <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> API call. The processor specific table name includes the name of the application that created the table. The name would be of the form &quot;ApplicationName.TableName&quot;. An example of this would be &quot;ACS.TamParams&quot; for a table called &quot;TamParams&quot; that was registered by the application called &quot;ACS&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*TblHandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle used to identify table to cFE when performing Table operations. This value is returned at the address specified by TblHandlePtr.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8bd8de285af771481c55618b246ae979" kindref="member">CFE_TBL_ERR_HANDLES_FULL</ref> </para></entry><entry thead="no"><para>An application attempted to create a table and the Table Handle Array already used all CFE_TBL_MAX_NUM_HANDLES in it.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ae635c53dae2d5299c86bd6a9d9935237" kindref="member">CFE_TBL_ERR_INVALID_NAME</ref> </para></entry><entry thead="no"><para>The calling Application attempted to register a table whose name length exceeded the platform configuration value of <ref refid="cfe__mission__cfg_8h_1a57b941daf6cdf4df9790ead1d1aa842d" kindref="member">CFE_TBL_MAX_NAME_LENGTH</ref> or was zero characters long.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1aaf440695f09ae0621c8d9419fefc4bf3" kindref="member">CFE_TBL_Unregister</ref>, <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1aaf440695f09ae0621c8d9419fefc4bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Unregister</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_Unregister</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Unregister a previously registered table and free associated resources. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>When an application is being removed from the system, it should unregister those tables that it created. The application should call this function as a part of its cleanup process. The table will be removed from memory once all table addresses referencing it have been released.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table to be unregistered.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Load</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle, CFE_TBL_SrcEnum_t SrcType, const void *SrcDataPtr)</argsstring>
        <name>CFE_TBL_Load</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <param>
          <type><ref refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927" kindref="member">CFE_TBL_SrcEnum_t</ref></type>
          <declname>SrcType</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>SrcDataPtr</declname>
        </param>
        <briefdescription>
<para>Load a specified table with data from specified source. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Once an application has created a table (<ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>), it must provide the values that initialize the contents of that table. The application accomplishes this with one of two different TBL API calls. This function call initializes the table with values that are held in a data structure.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>This function call can block. Therefore, interrupt service routines should NOT initialize their own tables. An application should initialize any table(s) prior to providing the handle(s) to the interrupt service routine.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table to be loaded.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">SrcType</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating the nature of the given <computeroutput>SrcDataPtr</computeroutput> below. This value can be any one of the following: <itemizedlist>
<listitem><para><ref refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be" kindref="member">CFE_TBL_SRC_FILE</ref> - When this option is selected, the <computeroutput>SrcDataPtr</computeroutput> will be interpreted as a pointer to a null terminated character string. The string should specify the full path and filename of the file containing the initial data contents of the table. </para></listitem>
<listitem><para><ref refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927a46977ad2a21a435ebff3277d833b22de" kindref="member">CFE_TBL_SRC_ADDRESS</ref> - When this option is selected, the <computeroutput>SrcDataPtr</computeroutput> will be interpreted as a pointer to a memory location that is the beginning of the initialization data for loading the table OR, in the case of a &quot;user defined&quot; dump only table, the address of the active table itself. The block of memory is assumed to be of the same size specified in the <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> function Size parameter.</para></listitem>
</itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">SrcDataPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to either a character string specifying a filename or a memory address of a block of binary data to be loaded into a table or, if the table was registered with the <ref refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" kindref="member">CFE_TBL_OPT_USR_DEF_ADDR</ref> option, the address of the active table buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="17" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1abe0eec43644c9642b35f9707b3e856c6" kindref="member">CFE_TBL_WARN_SHORT_FILE</ref> </para></entry><entry thead="no"><para>The calling Application called <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> with a filename that specified a file that started with the first byte of the table but contained less data than the size of the table. It should be noted that <ref refid="cfe__error_8h_1ae148cbc1249f9f06b06e197733465d42" kindref="member">CFE_TBL_WARN_PARTIAL_LOAD</ref> also indicates a partial load (one that starts at a non-zero offset).  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ae148cbc1249f9f06b06e197733465d42" kindref="member">CFE_TBL_WARN_PARTIAL_LOAD</ref> </para></entry><entry thead="no"><para>The calling Application tried to load a table file whose header claimed the load did not start with the first byteIt should be noted that <ref refid="cfe__error_8h_1abe0eec43644c9642b35f9707b3e856c6" kindref="member">CFE_TBL_WARN_SHORT_FILE</ref> also indicates a partial load.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49cf60ab5576162ef475f8c9abd2b011" kindref="member">CFE_TBL_ERR_DUMP_ONLY</ref> </para></entry><entry thead="no"><para>The calling Application has attempted to perform a load on a table that was created with &quot;Dump Only&quot; attributes.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a3515aea44edf6e4f668b9af76827b3af" kindref="member">CFE_TBL_ERR_ILLEGAL_SRC_TYPE</ref> </para></entry><entry thead="no"><para>The calling Application called <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> with an illegal value for the second parameter.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aaee9dfd948511307fbc9cda937459aea" kindref="member">CFE_TBL_ERR_LOAD_IN_PROGRESS</ref> </para></entry><entry thead="no"><para>The calling Application called <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> when another Application was trying to load the table.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a5a05bf6143a28afaa0b04972f039aeb9" kindref="member">CFE_TBL_ERR_NO_BUFFER_AVAIL</ref> </para></entry><entry thead="no"><para>The calling Application has tried to allocate a working buffer but none were available.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a7d41980d84bb9b3134793500c3dc965e" kindref="member">CFE_TBL_ERR_FILE_NOT_FOUND</ref> </para></entry><entry thead="no"><para>The calling Application called <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> with a bad filename.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a62f55ef45028a65996fa82ba7bfb8bf8" kindref="member">CFE_TBL_ERR_FILE_TOO_LARGE</ref> </para></entry><entry thead="no"><para>The calling Application called <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> with a filename that specified a file that contained more data than the size of the table OR which contained more data than specified in the table header.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a46926a5c47dcd5669a825f50eb09435c" kindref="member">CFE_TBL_ERR_BAD_CONTENT_ID</ref> </para></entry><entry thead="no"><para>The calling Application called <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> with a filename that specified a file whose content ID was not that of a table image.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ad651e8526265785b8944270029a994f2" kindref="member">CFE_TBL_ERR_PARTIAL_LOAD</ref> </para></entry><entry thead="no"><para>The calling Application tried to load a table file whose header claimed the load did not start with the first byte and the table image had NEVER been loaded before. Partial loads are not allowed on uninitialized tables. It should be noted that <ref refid="cfe__error_8h_1abe0eec43644c9642b35f9707b3e856c6" kindref="member">CFE_TBL_WARN_SHORT_FILE</ref> also indicates a partial load.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref>, <ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref>, <ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Update</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_Update</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Update contents of a specified table, if an update is pending. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>An application is <bold>required</bold> to perform a periodic check for an update for all the tables that it creates. Typically, the application that created the table would call this function at the start or conclusion of any routine processing cycle or at regular intervals. To determine whether an update is pending prior to making this call, the Application can use the <ref refid="cfe__tbl_8h_1a610383068765ec892a97c972ec8a9849" kindref="member">CFE_TBL_GetStatus</ref> API first. If a table update is pending, it will take place during this function call.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table to be updated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="8" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ae536f0207f2571fb92ed4d049e3421a7" kindref="member">CFE_TBL_INFO_NO_UPDATE_PENDING</ref> </para></entry><entry thead="no"><para>The calling Application has attempted to update a table without a pending load.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref>, <ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref>, <ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_GetAddress</definition>
        <argsstring>(void **TblPtr, CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_GetAddress</name>
        <param>
          <type>void **</type>
          <declname>TblPtr</declname>
        </param>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Obtain the current address of the contents of the specified table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>When a table has been created and initialized, it is available to any application that can identify it with its unique handle. In order to view the data contained in the table, an application must call this function or <ref refid="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" kindref="member">CFE_TBL_GetAddresses</ref>.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>This call can be a blocking call when the table is not double buffered and is shared with another application of lower priority that just happens to be in the middle of a table update of the specific table. If this occurs, the application performing the table update will automatically have its priority elevated in order to release the resource as soon as possible.</para></listitem><listitem><para>An application must always release the returned table address using the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> or <ref refid="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" kindref="member">CFE_TBL_ReleaseAddresses</ref> function prior to either a <ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref> call or any blocking call (e.g. - pending on software bus message, etc). Table updates cannot occur while table addresses have not been released.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of a pointer that will be loaded with the address of the first byte of the table. This pointer can then be typecast by the calling application to the appropriate table data structure.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table whose address is to be returned.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*TblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the first byte of data associated with the specified table.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="10" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5" kindref="member">CFE_TBL_INFO_UPDATED</ref> </para></entry><entry thead="no"><para>The calling Application has identified a table that has been updated.<linebreak/>
 <bold>NOTE:</bold> This is a nominal return code informing the calling application that the table identified in the call has had its contents updated since the last time the application obtained its address or status.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a2eef55c19e583cd8489453497377469e" kindref="member">CFE_TBL_ERR_UNREGISTERED</ref> </para></entry><entry thead="no"><para>The calling application is trying to access a table that has been unregistered.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a02e2823caf0091a863515664ef26a89c" kindref="member">CFE_TBL_ERR_NEVER_LOADED</ref> </para></entry><entry thead="no"><para>This is an error indicating that the table has never been loaded from either a file or a copy from a block of memory so the contents that the returned pointer is pointing to are zeros. <bold> NOTE: Unlike other most other errors, this error condition still returns a valid table pointer. This pointer must be released with the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> API before the table can be loaded with data. </bold>  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref>, <ref refid="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" kindref="member">CFE_TBL_GetAddresses</ref>, <ref refid="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" kindref="member">CFE_TBL_ReleaseAddresses</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_ReleaseAddress</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_ReleaseAddress</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Release previously obtained pointer to the contents of the specified table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Each application is <bold>required</bold> to release a table address obtained through the <ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref> function.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>An application must always release the returned table address using the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> function prior to either a <ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref> call or any blocking call (e.g. - pending on software bus message, etc). Table updates cannot occur while table addresses have not been released.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table whose address is to be released.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="9" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5" kindref="member">CFE_TBL_INFO_UPDATED</ref> </para></entry><entry thead="no"><para>The calling Application has identified a table that has been updated.<linebreak/>
 <bold>NOTE:</bold> This is a nominal return code informing the calling application that the table identified in the call has had its contents updated since the last time the application obtained its address or status.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a02e2823caf0091a863515664ef26a89c" kindref="member">CFE_TBL_ERR_NEVER_LOADED</ref> </para></entry><entry thead="no"><para>This is an error indicating that the table has never been loaded from either a file or a copy from a block of memory so the contents that the returned pointer is pointing to are zeros. <bold> NOTE: Unlike other most other errors, this error condition still returns a valid table pointer. This pointer must be released with the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> API before the table can be loaded with data. </bold>  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref>, <ref refid="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" kindref="member">CFE_TBL_GetAddresses</ref>, <ref refid="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" kindref="member">CFE_TBL_ReleaseAddresses</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_GetAddresses</definition>
        <argsstring>(void **TblPtrs[], uint16 NumTables, const CFE_TBL_Handle_t TblHandles[])</argsstring>
        <name>CFE_TBL_GetAddresses</name>
        <param>
          <type>void **</type>
          <declname>TblPtrs</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref></type>
          <declname>NumTables</declname>
        </param>
        <param>
          <type>const <ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandles</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Obtain the current addresses of an array of specified tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>When a table has been created and initialized, it is available to any application that can identify it with its unique handle. In order to view the data contained in the table, an application must call this function or <ref refid="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" kindref="member">CFE_TBL_GetAddresses</ref>.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>This call can be a blocking call when the table is not double buffered and is shared with another application of lower priority that just happens to be in the middle of a table update of the specific table. If this occurs, the application performing the table update will automatically have its priority elevated in order to release the resource as soon as possible.</para></listitem><listitem><para>An application must always release the returned table address using the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> or <ref refid="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" kindref="member">CFE_TBL_ReleaseAddresses</ref> function prior to either a <ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref> call or any blocking call (e.g. - pending on software bus message, etc). Table updates cannot occur while table addresses have not been released.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblPtrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of Pointers to variables that calling Application wishes to hold the start addresses of the Tables.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NumTables</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of TblPtrs and TblHandles arrays.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblHandles</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of Table Handles, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, of those tables whose start addresses are to be obtained.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*TblPtrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of addresses of the first byte of data associated with the specified tables.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="10" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5" kindref="member">CFE_TBL_INFO_UPDATED</ref> </para></entry><entry thead="no"><para>The calling Application has identified a table that has been updated.<linebreak/>
 <bold>NOTE:</bold> This is a nominal return code informing the calling application that the table identified in the call has had its contents updated since the last time the application obtained its address or status.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a2eef55c19e583cd8489453497377469e" kindref="member">CFE_TBL_ERR_UNREGISTERED</ref> </para></entry><entry thead="no"><para>The calling application is trying to access a table that has been unregistered.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a02e2823caf0091a863515664ef26a89c" kindref="member">CFE_TBL_ERR_NEVER_LOADED</ref> </para></entry><entry thead="no"><para>This is an error indicating that the table has never been loaded from either a file or a copy from a block of memory so the contents that the returned pointer is pointing to are zeros. <bold> NOTE: Unlike other most other errors, this error condition still returns a valid table pointer. This pointer must be released with the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> API before the table can be loaded with data. </bold>  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref>, <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref>, <ref refid="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" kindref="member">CFE_TBL_ReleaseAddresses</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_ReleaseAddresses</definition>
        <argsstring>(uint16 NumTables, const CFE_TBL_Handle_t TblHandles[])</argsstring>
        <name>CFE_TBL_ReleaseAddresses</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref></type>
          <declname>NumTables</declname>
        </param>
        <param>
          <type>const <ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandles</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Release the addresses of an array of specified tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Each application is <bold>required</bold> to release a table address obtained through the <ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref> function.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>An application must always release the returned table address using the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> function prior to either a <ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref> call or any blocking call (e.g. - pending on software bus message, etc). Table updates cannot occur while table addresses have not been released.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">NumTables</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of TblHandles array.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblHandles</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of Table Handles, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, of those tables whose start addresses are to be released.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="9" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5" kindref="member">CFE_TBL_INFO_UPDATED</ref> </para></entry><entry thead="no"><para>The calling Application has identified a table that has been updated.<linebreak/>
 <bold>NOTE:</bold> This is a nominal return code informing the calling application that the table identified in the call has had its contents updated since the last time the application obtained its address or status.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a02e2823caf0091a863515664ef26a89c" kindref="member">CFE_TBL_ERR_NEVER_LOADED</ref> </para></entry><entry thead="no"><para>This is an error indicating that the table has never been loaded from either a file or a copy from a block of memory so the contents that the returned pointer is pointing to are zeros. <bold> NOTE: Unlike other most other errors, this error condition still returns a valid table pointer. This pointer must be released with the <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref> API before the table can be loaded with data. </bold>  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref>, <ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref>, <ref refid="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" kindref="member">CFE_TBL_GetAddresses</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="612" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Validate</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_Validate</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Perform steps to validate the contents of a table image. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>An application is <bold>required</bold> to perform a periodic check for an update or a validation request for all the tables that it creates. Typically, the application that created the table would call this function at the start or conclusion of any routine processing cycle. To determine whether a validation request is pending prior to making this call, the Application can use the <ref refid="cfe__tbl_8h_1a610383068765ec892a97c972ec8a9849" kindref="member">CFE_TBL_GetStatus</ref> API first. If a table validation is pending, the Application would call this function to perform the necessary actions.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table to be managed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="8" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a6154f047c111a987ebbb1987b4f04be0" kindref="member">CFE_TBL_INFO_NO_VALIDATION_PENDING</ref> </para></entry><entry thead="no"><para>The calling Application tried to validate a table that did not have a validation request pending.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref>, <ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref>, <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Manage</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_Manage</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Perform standard operations to maintain a table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>An application is <bold>required</bold> to perform a periodic check for an update or a validation request for all the tables that it creates. Typically, the application that created the table would call this function at the start or conclusion of any routine processing cycle. If a table update or validation request is pending, this function would perform either or both before returning.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table to be managed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="8" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5" kindref="member">CFE_TBL_INFO_UPDATED</ref> </para></entry><entry thead="no"><para>The calling Application has identified a table that has been updated.<linebreak/>
 <bold>NOTE:</bold> This is a nominal return code informing the calling application that the table identified in the call has had its contents updated since the last time the application obtained its address or status.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref>, <ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref>, <ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref>, <ref refid="cfe__tbl_8h_1a9c4cde7965236d557f5199025ae544f5" kindref="member">CFE_TBL_DumpToBuffer</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="682" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a610383068765ec892a97c972ec8a9849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_GetStatus</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_GetStatus</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Obtain current status of pending actions for a table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>An application is <bold>required</bold> to perform a periodic check for an update or a validation request for all the tables that it creates. Typically, the application that created the table would call this function at the start or conclusion of any routine processing cycle. If a table update or validation request is pending, the Application should follow up with a call to <ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref> or <ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref> respectively.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle, previously obtained from <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> or <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>, that identifies the Table to be managed.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="10" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa1f1b3d285fd0767eed9b1ebae358f0c" kindref="member">CFE_TBL_INFO_UPDATE_PENDING</ref> </para></entry><entry thead="no"><para>The calling Application has identified a table that has a load pending.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a63d7766310fe1e1bcccdca67dd1185d7" kindref="member">CFE_TBL_INFO_VALIDATION_PENDING</ref> </para></entry><entry thead="no"><para>The calling Application should call <ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref> for the specified table.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a56eced4ab822f81f91f09a257774dd69" kindref="member">CFE_TBL_INFO_DUMP_PENDING</ref> </para></entry><entry thead="no"><para>The calling Application should call <ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> for the specified table. The ground has requested a dump of the Dump-Only table and needs to synchronize with the owning application.  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref>, <ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref>, <ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref>, <ref refid="cfe__tbl_8h_1af763c9b01ba8c7318a3fd646b0336e4d" kindref="member">CFE_TBL_GetInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1af763c9b01ba8c7318a3fd646b0336e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_GetInfo</definition>
        <argsstring>(CFE_TBL_Info_t *TblInfoPtr, const char *TblName)</argsstring>
        <name>CFE_TBL_GetInfo</name>
        <param>
          <type><ref refid="struct_c_f_e___t_b_l___info__t" kindref="compound">CFE_TBL_Info_t</ref> *</type>
          <declname>TblInfoPtr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>TblName</declname>
        </param>
        <briefdescription>
<para>Obtain characteristics/information of/about a specified table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This API provides the registry information associated with the specified table. The function fills the given data structure with the data found in the Table Registry.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblInfoPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_c_f_e___t_b_l___info__t" kindref="compound">CFE_TBL_Info_t</ref> data structure that is to be populated with table characteristics and information.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">TblName</parametername>
</parameternamelist>
<parameterdescription>
<para>The processor specific name of the table. It is important to note that the processor specific table name is different from the table name specified in the <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> API call. The processor specific table name includes the name of the application that created the table. The name would be of the form &quot;ApplicationName.TableName&quot;. An example of this would be &quot;ACS.TamParams&quot; for a table called &quot;TamParams&quot; that was registered by the application called &quot;ACS&quot;.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*TblInfoPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Description of the tables characteristics and registry information stored in the <ref refid="struct_c_f_e___t_b_l___info__t" kindref="compound">CFE_TBL_Info_t</ref> data structure format.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ae635c53dae2d5299c86bd6a9d9935237" kindref="member">CFE_TBL_ERR_INVALID_NAME</ref> </para></entry><entry thead="no"><para>The calling Application attempted to register a table whose name length exceeded the platform configuration value of <ref refid="cfe__mission__cfg_8h_1a57b941daf6cdf4df9790ead1d1aa842d" kindref="member">CFE_TBL_MAX_NAME_LENGTH</ref> or was zero characters long.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a610383068765ec892a97c972ec8a9849" kindref="member">CFE_TBL_GetStatus</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="756" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1a9c4cde7965236d557f5199025ae544f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_DumpToBuffer</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_DumpToBuffer</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Copies the contents of a Dump Only Table to a shared buffer. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Copies contents of a Dump Only table to a shared buffer so that it can be written to a file by the Table Services routine. This function is called by the Application that owns the table in response to a <ref refid="cfe__error_8h_1a56eced4ab822f81f91f09a257774dd69" kindref="member">CFE_TBL_INFO_DUMP_PENDING</ref> status obtained via <ref refid="cfe__tbl_8h_1a610383068765ec892a97c972ec8a9849" kindref="member">CFE_TBL_GetStatus</ref>.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>If the table does not have a dump pending status, nothing will occur (no error, no dump)</para></listitem><listitem><para>Applications may wish to use this function in lieu of <ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> for their Dump Only tables</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of Table to be dumped.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="787" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_Modified</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle)</argsstring>
        <name>CFE_TBL_Modified</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <briefdescription>
<para>Notify cFE Table Services that table contents have been modified by the Application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This API notifies Table Services that the contents of the specified table has been modified by the Application. This notification is important when a table has been registered as &quot;Critical&quot; because Table Services can then update the contents of the table kept in the Critical Data Store.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of Table that was modified.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="817" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cfe__tbl_8h_1ae76a4a7e9ed479c000e35367fd2647fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_TBL_NotifyByMessage</definition>
        <argsstring>(CFE_TBL_Handle_t TblHandle, uint32 MsgId, uint16 CommandCode, uint32 Parameter)</argsstring>
        <name>CFE_TBL_NotifyByMessage</name>
        <param>
          <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref></type>
          <declname>TblHandle</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>MsgId</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref></type>
          <declname>CommandCode</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Parameter</declname>
        </param>
        <briefdescription>
<para>Instruct cFE Table Services to notify Application via message when table requires management. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This API instructs Table Services to send a message to the calling Application whenever the specified table requires management by the application. This feature allows applications to avoid polling table services via the <ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref> call to determine whether a table requires updates, validation, etc. This API should be called following the <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> API whenever the owning application requires this feature.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><itemizedlist>
<listitem><para>Only the application that owns the table is allowed to register a notification message</para></listitem></itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TblHandle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of Table with which the message should be associated.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MsgId</parametername>
</parameternamelist>
<parameterdescription>
<para>Message ID to be used in notification message sent by Table Services.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">CommandCode</parametername>
</parameternamelist>
<parameterdescription>
<para>Command Code value to be placed in secondary header of message sent by Table Services.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Parameter</parametername>
</parameternamelist>
<parameterdescription>
<para>Application defined value to be passed as a parameter in the message sent by Table Services. Suggested use includes an application&apos;s table index that allows the same MsgId and Command Code to be used for all table management notifications.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para></para></entry><entry thead="no"><para><linebreak/>
<linebreak/>
  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a8134921ee07f48bab5c9e1733f0a34cf" kindref="member">CFE_ES_ERR_APPNAME</ref> </para></entry><entry thead="no"><para>There is no match for the given application name in the current application list.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1aa5549901844b8807e0caee38b61b7d11" kindref="member">CFE_ES_ERR_BUFFER</ref> </para></entry><entry thead="no"><para>Invalid pointer argument (NULL)  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ac4836bb1bfee11fd0b26795fecf24670" kindref="member">CFE_TBL_ERR_BAD_APP_ID</ref> </para></entry><entry thead="no"><para>The calling application does not have a legitimate Application ID. Most likely cause is a failure to register with the cFE via the <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member">CFE_ES_RegisterApp</ref> function.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a27082ec9b512a8f627f8fa8347ea0c54" kindref="member">CFE_TBL_ERR_NO_ACCESS</ref> </para></entry><entry thead="no"><para>The calling application either failed when calling <ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>, failed when calling <ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref> or forgot to call either one.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a49400775d90ee685916c479eca9a83a5" kindref="member">CFE_TBL_ERR_INVALID_HANDLE</ref> </para></entry><entry thead="no"><para>The calling Application attempted to pass a Table handle that represented too large an index or identified a Table Access Descriptor that was not used.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="inc/cfe_tbl.h" line="860" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/><sp/>$Id:<sp/>cfe_tbl.h<sp/>1.9<sp/>2014/08/24<sp/>16:59:51GMT-05:00<sp/>sstrege<sp/>Exp<sp/><sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2004-2006,<sp/>United<sp/>States<sp/>government<sp/>as<sp/>represented<sp/>by<sp/>the<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>administrator<sp/>of<sp/>the<sp/>National<sp/>Aeronautics<sp/>Space<sp/>Administration.<sp/><sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved.<sp/>This<sp/>software(cFE)<sp/>was<sp/>created<sp/>at<sp/>NASA&apos;s<sp/>Goddard<sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Space<sp/>Flight<sp/>Center<sp/>pursuant<sp/>to<sp/>government<sp/>contracts.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>NASA<sp/>Open<sp/>Source<sp/>Agreement<sp/>and<sp/>may<sp/>be<sp/>used,<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>distributed<sp/>and<sp/>modified<sp/>only<sp/>pursuant<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>that<sp/>agreement.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">**</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/>Title:<sp/><sp/><sp/>Table<sp/>Services<sp/>API<sp/>Application<sp/>Library<sp/>Header<sp/>File</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/>Purpose:</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>Unit<sp/>specification<sp/>for<sp/>Table<sp/>services<sp/>library<sp/>functions<sp/>and<sp/>macros.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/><sp/>Design<sp/>Notes:</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/><sp/>References:</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>Flight<sp/>Software<sp/>Branch<sp/>C<sp/>Coding<sp/>Standard<sp/>Version<sp/>1.0a</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/><sp/>Notes:</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/><sp/>$Log:<sp/>cfe_tbl.h<sp/><sp/>$</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.9<sp/>2014/08/24<sp/>16:59:51GMT-05:00<sp/>sstrege<sp/></highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/><sp/>Updated<sp/>CFE_TBL_MAX_FULL_NAME_LEN<sp/>definition<sp/>to<sp/>always<sp/>fall<sp/>on<sp/>4-byte<sp/>boundary</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.8<sp/>2010/10/27<sp/>16:34:31EDT<sp/>dkobe<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/><sp/>Added<sp/>CRC<sp/>field<sp/>to<sp/>Table<sp/>Buffer<sp/>data<sp/>structure</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.7<sp/>2010/10/27<sp/>13:55:07EDT<sp/>dkobe<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/><sp/>Added<sp/>TBL<sp/>Notification<sp/>API</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.6<sp/>2010/10/04<sp/>15:24:59EDT<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="comment">**<sp/><sp/>Cleaned<sp/>up<sp/>copyright<sp/>symbol.</highlight></codeline>
<codeline lineno="34"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.5<sp/>2009/05/01<sp/>16:38:54EDT<sp/>dkobe<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment">**<sp/><sp/>Updated<sp/>documentation<sp/>for<sp/>CFE_TBL_Register<sp/>dealing<sp/>with<sp/>Validation<sp/>functions</highlight></codeline>
<codeline lineno="36"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.4<sp/>2009/05/01<sp/>14:26:33EDT<sp/>dkobe<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment">**<sp/><sp/>Modified<sp/>return<sp/>code<sp/>contents<sp/>to<sp/>emphasize<sp/>success<sp/>vs<sp/>failure<sp/>of<sp/>API<sp/>calls</highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.3<sp/>2008/07/29<sp/>18:32:18EDT<sp/>dkobe<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="comment">**<sp/><sp/>Added<sp/>CFE_TBL_Modified<sp/>API</highlight></codeline>
<codeline lineno="40"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.2<sp/>2008/07/29<sp/>15:55:19EDT<sp/>dkobe<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="comment">**<sp/><sp/>Moved<sp/>CFE_TBL_DumpToBuffer<sp/>from<sp/>cfe_tbl_internal.c<sp/>to<sp/>cfe_tbl_api.c</highlight></codeline>
<codeline lineno="42"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.1<sp/>2008/04/17<sp/>08:05:24EDT<sp/>ruperera<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="comment">**<sp/><sp/>Initial<sp/>revision</highlight></codeline>
<codeline lineno="44"><highlight class="comment">**<sp/><sp/>Member<sp/>added<sp/>to<sp/>project<sp/>c:/MKSDATA/MKS-REPOSITORY/MKS-CFE-PROJECT/fsw/cfe-core/src/inc/project.pj</highlight></codeline>
<codeline lineno="45"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.13<sp/>2007/05/23<sp/>11:22:00EDT<sp/>David<sp/>Kobe<sp/>(dlkobe)<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment">**<sp/><sp/>Added<sp/>doxygen<sp/>formatting</highlight></codeline>
<codeline lineno="47"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.12<sp/>2007/04/28<sp/>14:48:57EDT<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="48"><highlight class="comment">**<sp/><sp/>Baseline<sp/>Implementation<sp/>of<sp/>Critical<sp/>Tables</highlight></codeline>
<codeline lineno="49"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.11<sp/>2007/03/28<sp/>15:18:17EST<sp/>rjmcgraw<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="comment">**<sp/><sp/>Moved<sp/>file<sp/>related<sp/>defines<sp/>from<sp/>cfe_tbl.h<sp/>to<sp/>cfe_fs.h</highlight></codeline>
<codeline lineno="51"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.10<sp/>2006/11/03<sp/>15:41:43EST<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="comment">**<sp/><sp/>Modified<sp/>cfe_tbl.h<sp/>so<sp/>that<sp/>the<sp/>CFE_TBL_OPT_USR_DEF_ADDR<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment">**<sp/><sp/>macro<sp/>includes<sp/>the<sp/>CFE_TBL_OPT_DUMP_ONLY<sp/>option</highlight></codeline>
<codeline lineno="54"><highlight class="comment">**</highlight></codeline>
<codeline lineno="55"><highlight class="comment">**/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_cfe_tbl_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_cfe_tbl_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>Include<sp/>Files<sp/><sp/>************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common__types_8h" kindref="compound">common_types.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Basic<sp/>Data<sp/>Types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfe__time_8h" kindref="compound">cfe_time.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;osconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*******************<sp/>Macro<sp/>Definitions<sp/>***********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="cfe__tbl_8h_1a327c8033134d11c668ba7a49af0807f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_BUFFER_MSK<sp/><sp/><sp/>(0x0001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="cfe__tbl_8h_1acc5f0707d29935391c7a2256f46b1965" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_SNGL_BUFFER<sp/><sp/>(0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="cfe__tbl_8h_1a348e5a36d0fdd005b03a72953018399b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_DBL_BUFFER<sp/><sp/><sp/>(0x0001)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="cfe__tbl_8h_1a60b453b213d33328c81f200c74f7ca1c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_LD_DMP_MSK<sp/><sp/><sp/>(0x0002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="cfe__tbl_8h_1a6f3780029f5da6705e8a63572c7092d8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_LOAD_DUMP<sp/><sp/><sp/><sp/>(0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="cfe__tbl_8h_1a41f8bbc7f7b7f8d373c34a0af29a735a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_DUMP_ONLY<sp/><sp/><sp/><sp/>(0x0002)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="cfe__tbl_8h_1a02d55b01e3816454ae663f791a5f9d27" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_USR_DEF_MSK<sp/><sp/>(0x0004)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="cfe__tbl_8h_1ade650c959a821bacbf66e830a708ea0e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_NOT_USR_DEF<sp/><sp/>(0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="cfe__tbl_8h_1abeec97e76af367da23a6a5fb24464550" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_USR_DEF_ADDR<sp/>(0x0006)<sp/></highlight></codeline>
<codeline lineno="82" refid="cfe__tbl_8h_1a6954f2be6654c83746c77374e27f708b" refkind="member"><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_CRITICAL_MSK<sp/>(0x0008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="cfe__tbl_8h_1a8b7fc396ff0f6d2c6f4d6557be080dd6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_NOT_CRITICAL<sp/>(0x0000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="cfe__tbl_8h_1ad65bbf63062d62687a27e613158c94e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_CRITICAL<sp/><sp/><sp/><sp/><sp/>(0x0008)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_OPT_DEFAULT<sp/><sp/><sp/><sp/><sp/><sp/>(CFE_TBL_OPT_SNGL_BUFFER<sp/>|<sp/>CFE_TBL_OPT_LOAD_DUMP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="cfe__tbl_8h_1a6ba253c60a3ee06e2938b240947cc308" refkind="member"><highlight class="preprocessor">#define<sp/>CFE_TBL_MAX_FULL_NAME_LEN_COMP<sp/>(CFE_TBL_MAX_NAME_LENGTH<sp/>+<sp/>OS_MAX_API_NAME<sp/>+<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>table<sp/>name<sp/>falls<sp/>on<sp/>a<sp/>4-byte<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="cfe__tbl_8h_1a67d8222130c2a5c608374b7ad9b6d54d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_MAX_FULL_NAME_LEN<sp/>(((CFE_TBL_MAX_FULL_NAME_LEN_COMP<sp/>+<sp/>3)/4)*4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="cfe__tbl_8h_1aeb661bd0351ec225ba7f75b2cf3afb52" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_TBL_BAD_TABLE_HANDLE<sp/><sp/>(CFE_TBL_Handle_t)<sp/>0xFFFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/><sp/>Data<sp/>Type<sp/>Definitions<sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="cfe__tbl_8h_1a8cdb7faa0695dbe54607f3836b3ac75e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>(*<ref refid="cfe__tbl_8h_1a8cdb7faa0695dbe54607f3836b3ac75e" kindref="member">CFE_TBL_CallbackFuncPtr_t</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*TblPtr);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="common__types_8h_1adf957e9fa8c95c188ffacb8197aa8725" kindref="member">int16</ref><sp/><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member">CFE_TBL_Handle_t</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104" refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be" kindref="member">CFE_TBL_SRC_FILE</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="109" refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927a46977ad2a21a435ebff3277d833b22de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927a46977ad2a21a435ebff3277d833b22de" kindref="member">CFE_TBL_SRC_ADDRESS</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<sp/><ref refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927" kindref="member">CFE_TBL_SrcEnum_t</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="struct_c_f_e___t_b_l___info__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120" refid="struct_c_f_e___t_b_l___info__t_1a51c9738cefb7793842d2115eb1d51788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a51c9738cefb7793842d2115eb1d51788" kindref="member">Size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121" refid="struct_c_f_e___t_b_l___info__t_1a0ae11f0f4c0f21e05584c77f0df4065e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a0ae11f0f4c0f21e05584c77f0df4065e" kindref="member">NumUsers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122" refid="struct_c_f_e___t_b_l___info__t_1ad4e059e89ed5b74ef68ce730a3d8a4ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1ad4e059e89ed5b74ef68ce730a3d8a4ae" kindref="member">FileCreateTimeSecs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123" refid="struct_c_f_e___t_b_l___info__t_1a132de1c5552a0369dab1dc9d6b12f6e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a132de1c5552a0369dab1dc9d6b12f6e7" kindref="member">FileCreateTimeSubSecs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124" refid="struct_c_f_e___t_b_l___info__t_1a4499d9c8b4c480f95361c5ca9ef002de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a4499d9c8b4c480f95361c5ca9ef002de" kindref="member">Crc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="struct_c_f_e___t_b_l___info__t_1ae3922e72d419da35404c201b57f420b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_i_m_e___sys_time__t" kindref="compound">CFE_TIME_SysTime_t</ref><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1ae3922e72d419da35404c201b57f420b4" kindref="member">TimeOfLastUpdate</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126" refid="struct_c_f_e___t_b_l___info__t_1a054686803b2c1e691115558ffc69e6eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a054686803b2c1e691115558ffc69e6eb" kindref="member">TableLoadedOnce</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127" refid="struct_c_f_e___t_b_l___info__t_1a27b64b84b9dd1d84596c3b0e6b107a53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a27b64b84b9dd1d84596c3b0e6b107a53" kindref="member">DumpOnly</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128" refid="struct_c_f_e___t_b_l___info__t_1ad334fcfd559a4b57dc775dfeea641259" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1ad334fcfd559a4b57dc775dfeea641259" kindref="member">DblBuffered</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129" refid="struct_c_f_e___t_b_l___info__t_1a7aea55cd43a2141ca1e6d13748064298" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a7aea55cd43a2141ca1e6d13748064298" kindref="member">UserDefAddr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="struct_c_f_e___t_b_l___info__t_1a053eb6109fca692792cfdbf26d9757cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_b_l___info__t_1a053eb6109fca692792cfdbf26d9757cb" kindref="member">Critical</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="struct_c_f_e___t_b_l___info__t_1aee751c4710356b8f651d59a48da38700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LastFileLoaded[OS_MAX_PATH_LEN];<sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal">}<sp/><ref refid="struct_c_f_e___t_b_l___info__t" kindref="compound">CFE_TBL_Info_t</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/***************************<sp/>Function<sp/>Prototypes<sp/>******************************/</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683" kindref="member">CFE_TBL_Register</ref>(<sp/>CFE_TBL_Handle_t<sp/>*TblHandlePtr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Returned<sp/>Handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*Name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Application<sp/>specific<sp/>name<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/>Size,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Size,<sp/>in<sp/>bytes,<sp/>of<sp/>table<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref><sp/><sp/>TblOptionFlags,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tbl<sp/>Options<sp/>Settings<sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__tbl_8h_1a8cdb7faa0695dbe54607f3836b3ac75e" kindref="member">CFE_TBL_CallbackFuncPtr_t</ref><sp/>TblValidationFuncPtr<sp/>);<sp/></highlight><highlight class="comment">/*<sp/>Ptr<sp/>to<sp/>func<sp/>that<sp/>validates<sp/>tbl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a78668bf1e8256ef604508eb3e5a6c275" kindref="member">CFE_TBL_Share</ref>(<sp/>CFE_TBL_Handle_t<sp/>*TblHandlePtr,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Returned<sp/>Handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TblName<sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1aaf440695f09ae0621c8d9419fefc4bf3" kindref="member">CFE_TBL_Unregister</ref><sp/>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member">CFE_TBL_Load</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFE_TBL_SrcEnum_t<sp/>SrcType,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*SrcDataPtr<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a31078e6930a4d5fd5f5d7a90a582ca2a" kindref="member">CFE_TBL_Update</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface" kindref="member">CFE_TBL_GetAddress</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**TblPtr,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a" kindref="member">CFE_TBL_ReleaseAddress</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1ae37e876692c9feb574b06551c3b26f87" kindref="member">CFE_TBL_GetAddresses</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**TblPtrs[],</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref><sp/>NumTables,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFE_TBL_Handle_t<sp/>TblHandles[]<sp/>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a9609133208d46238477e0057b3e9f8fa" kindref="member">CFE_TBL_ReleaseAddresses</ref>(<sp/><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref><sp/>NumTables,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CFE_TBL_Handle_t<sp/>TblHandles[]<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a0a04217ee50dcc04be836234561e899d" kindref="member">CFE_TBL_Validate</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c" kindref="member">CFE_TBL_Manage</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1a610383068765ec892a97c972ec8a9849" kindref="member">CFE_TBL_GetStatus</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1af763c9b01ba8c7318a3fd646b0336e4d" kindref="member">CFE_TBL_GetInfo</ref>(<sp/><ref refid="struct_c_f_e___t_b_l___info__t" kindref="compound">CFE_TBL_Info_t</ref><sp/>*TblInfoPtr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TblName<sp/>);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><ref refid="cfe__tbl_8h_1a9c4cde7965236d557f5199025ae544f5" kindref="member">CFE_TBL_DumpToBuffer</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><ref refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26" kindref="member">CFE_TBL_Modified</ref>(<sp/>CFE_TBL_Handle_t<sp/>TblHandle<sp/>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__tbl_8h_1ae76a4a7e9ed479c000e35367fd2647fa" kindref="member">CFE_TBL_NotifyByMessage</ref>(CFE_TBL_Handle_t<sp/>TblHandle,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>MsgId,<sp/><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref><sp/>CommandCode,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>Parameter);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">/*<sp/>_cfe_tbl_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="inc/cfe_tbl.h"/>
  </compounddef>
</doxygen>
