<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="stubs_8c" kind="file" language="C++">
    <compoundname>stubs.c</compoundname>
    <includes refid="common__types_8h" local="yes">common_types.h</includes>
    <includes refid="osapi-os-rtm_8h" local="yes">osapi-os-rtm.h</includes>
    <includes refid="osapi-os-core_8h" local="yes">osapi-os-core.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="stubs_8h" local="yes">stubs.h</includes>
    <incdepgraph>
      <node id="9693">
        <label>/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c</label>
        <link refid="stubs.c"/>
        <childnode refid="9694" relation="include">
        </childnode>
        <childnode refid="9695" relation="include">
        </childnode>
        <childnode refid="9696" relation="include">
        </childnode>
        <childnode refid="9698" relation="include">
        </childnode>
        <childnode refid="9699" relation="include">
        </childnode>
        <childnode refid="9700" relation="include">
        </childnode>
        <childnode refid="9701" relation="include">
        </childnode>
        <childnode refid="9702" relation="include">
        </childnode>
        <childnode refid="9703" relation="include">
        </childnode>
        <childnode refid="9704" relation="include">
        </childnode>
        <childnode refid="9697" relation="include">
        </childnode>
        <childnode refid="9705" relation="include">
        </childnode>
        <childnode refid="9706" relation="include">
        </childnode>
      </node>
      <node id="9706">
        <label>stubs.h</label>
        <link refid="stubs_8h"/>
      </node>
      <node id="9697">
        <label>stdarg.h</label>
      </node>
      <node id="9694">
        <label>common_types.h</label>
        <link refid="common__types_8h"/>
      </node>
      <node id="9701">
        <label>errno.h</label>
      </node>
      <node id="9695">
        <label>osapi-os-rtm.h</label>
        <link refid="osapi-os-rtm_8h"/>
      </node>
      <node id="9703">
        <label>limits.h</label>
      </node>
      <node id="9702">
        <label>pthread.h</label>
      </node>
      <node id="9700">
        <label>string.h</label>
      </node>
      <node id="9698">
        <label>unistd.h</label>
      </node>
      <node id="9699">
        <label>signal.h</label>
      </node>
      <node id="9704">
        <label>time.h</label>
      </node>
      <node id="9705">
        <label>stdio.h</label>
      </node>
      <node id="9696">
        <label>osapi-os-core.h</label>
        <link refid="osapi-os-core_8h"/>
        <childnode refid="9697" relation="include">
        </childnode>
        <childnode refid="9695" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" prot="public" static="no">
        <name>OS_MAX_API_NAME</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="36" column="9" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="36" bodyend="-1"/>
        <referencedby refid="cfe__es__apps_8h_1abc4f1d3a1eca4b43fea3e872b422c260" compoundref="cfe__es__apps_8c" startline="453" endline="760">CFE_ES_AppCreate</referencedby>
        <referencedby refid="cfe__es__api_8c_1a64768543df91e7856b4356fdc70ebe8c" compoundref="cfe__es__api_8c" startline="969" endline="1090">CFE_ES_CreateChildTask</referencedby>
        <referencedby refid="cfe__es__start_8h_1a6afd1d3681c497dfd883bcf17c87bf2a" compoundref="cfe__es__start_8c" startline="782" endline="997">CFE_ES_CreateObjects</referencedby>
        <referencedby refid="cfe__es__cds_8c_1aaa8e9232510d63e6aa72ff105eb23d37" compoundref="cfe__es__cds_8c" startline="791" endline="876">CFE_ES_DeleteCDS</referencedby>
        <referencedby refid="cfe__es__cds_8h_1ae4a489c0f37b543d7e8a781b3a833ce3" compoundref="cfe__es__cds_8c" startline="606" endline="619">CFE_ES_FormCDSName</referencedby>
        <referencedby refid="cfe__es__api_8c_1a8422894d9e2e2c2618d0f4d6006fe53c" compoundref="cfe__es__api_8c" startline="748" endline="775">CFE_ES_GetAppIDByName</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a6fbfda401db6dc7a60251aaebc79953b" compoundref="cfe__es__apps_8c" startline="1901" endline="1970">CFE_ES_GetAppInfoInternal</referencedby>
        <referencedby refid="cfe__es__api_8c_1a0e16c027b4f7e539b73d5ebef04e3411" compoundref="cfe__es__api_8c" startline="1747" endline="1774">CFE_ES_GetGenCounterIDByName</referencedby>
        <referencedby refid="cfe__es__api_8c_1a02fce2cb5f102454b012b3f6f0fae207" compoundref="cfe__es__api_8c" startline="896" endline="960">CFE_ES_GetTaskInfo</referencedby>
        <referencedby refid="cfe__es__shell_8h_1ade5b034996808e53b3b4fb161b11c64b" compoundref="cfe__es__shell_8c" startline="284" endline="312">CFE_ES_ListApplications</referencedby>
        <referencedby refid="cfe__es__apps_8h_1abcf027da92953e7ef1a0badeb50919de" compoundref="cfe__es__apps_8c" startline="769" endline="990">CFE_ES_LoadLibrary</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a95f2d422032c496d033c4fc7bcc98648" compoundref="cfe__es__apps_8c" startline="358" endline="440">CFE_ES_ParseFileEntry</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</referencedby>
        <referencedby refid="cfe__es__task_8h_1ac99750332e09a94ab330db51b479e464" compoundref="cfe__es__task_8c" startline="1200" endline="1253">CFE_ES_QueryOneCmd</referencedby>
        <referencedby refid="cfe__es__api_8c_1a9749b20ef5b73dc49701f29e89219d3d" compoundref="cfe__es__api_8c" startline="1526" endline="1598">CFE_ES_RegisterCDS</referencedby>
        <referencedby refid="cfe__es__api_8c_1af8034c22351e928f7570ee7f86e8b3da" compoundref="cfe__es__api_8c" startline="1633" endline="1664">CFE_ES_RegisterGenCounter</referencedby>
        <referencedby refid="cfe__es__task_8h_1a02a91a78e2693a09d8af959f7ad0edb9" compoundref="cfe__es__task_8c" startline="1141" endline="1191">CFE_ES_ReloadAppCmd</referencedby>
        <referencedby refid="cfe__es__task_8h_1a2a664fd4ac73b8d56b67dfa968c4b3d3" compoundref="cfe__es__task_8c" startline="1085" endline="1133">CFE_ES_RestartAppCmd</referencedby>
        <referencedby refid="cfe__es__task_8h_1a100551aa6e20fbb9235e6a9a1a1da2ce" compoundref="cfe__es__task_8c" startline="907" endline="1014">CFE_ES_StartAppCmd</referencedby>
        <referencedby refid="cfe__es__task_8h_1a91e089b4beb39f1445787a25b1137e73" compoundref="cfe__es__task_8c" startline="1023" endline="1076">CFE_ES_StopAppCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a093bf733cd26ff5f20f290be4e35e2d8" compoundref="cfe__evs__task_8c" startline="1655" endline="1741">CFE_EVS_AddEventFilterCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1aede8c87d17c9a40d5ae5ca4e30ec5edc" compoundref="cfe__evs__task_8c" startline="1754" endline="1823">CFE_EVS_DeleteEventFilterCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a5268e45d7a44ff29a6b58d190fde1896" compoundref="cfe__evs__task_8c" startline="1381" endline="1431">CFE_EVS_DisableAppEventsCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1ae782cd69dfb7a10c9de3f7181c92489e" compoundref="cfe__evs__task_8c" startline="1241" endline="1305">CFE_EVS_DisableAppEventTypesCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a92819739e8d724191db27c3229a1e5a9" compoundref="cfe__evs__task_8c" startline="1318" endline="1368">CFE_EVS_EnableAppEventsCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a1ea0238099ef8f8411ff95f29041e261" compoundref="cfe__evs__task_8c" startline="1163" endline="1227">CFE_EVS_EnableAppEventTypesCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a9a8eaca747a643ecaf6ee6da6da5136e" compoundref="cfe__evs__task_8c" startline="1588" endline="1642">CFE_EVS_ResetAllFiltersCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a8ab99048a31b8bffa91682e015f66e1e" compoundref="cfe__evs__task_8c" startline="1445" endline="1495">CFE_EVS_ResetAppEventCounterCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1accba3d2d489374fd39f3cca7af455282" compoundref="cfe__evs__task_8c" startline="1509" endline="1574">CFE_EVS_ResetFilterCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a920256c475420a7bee2f6610773a5b92" compoundref="cfe__evs__task_8c" startline="828" endline="896">CFE_EVS_SetFilterMaskCmd</referencedby>
        <referencedby refid="cfe__evs__task_8h_1a7020d6560a6f6c1d8c73c4ed7500c1ab" compoundref="cfe__evs__task_8c" startline="1838" endline="1926">CFE_EVS_WriteAppDataCmd</referencedby>
        <referencedby refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" compoundref="cfe__sb__api_8c" startline="170" endline="274">CFE_SB_CreatePipe</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a3fcb0e77aacf844bdbefdc2b77b2d9c1" compoundref="cfe__sb__api_8c" startline="345" endline="455">CFE_SB_DeletePipeFull</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a8804c05b64f1b916675e201ea7174bb8" compoundref="cfe__sb__priv_8c" startline="601" endline="634">CFE_SB_GetAppTskName</referencedby>
        <referencedby refid="cfe__sb__api_8c_1abd1d841a3e64941a3ef460572b00f7e4" compoundref="cfe__sb__api_8c" startline="1593" endline="1645">CFE_SB_GetLastSenderId</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a0200f69ca4c5dd0c7c6f112d1410aa70" compoundref="cfe__sb__init_8c" startline="217" endline="229">CFE_SB_InitPipeTbl</referencedby>
        <referencedby refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" compoundref="cfe__sb__api_8c" startline="1449" endline="1566">CFE_SB_RcvMsg</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1afa4e55746501266c32887860c2d19e0b" compoundref="cfe__sb__api_8c" startline="1979" endline="2042">CFE_SB_ReadQueue</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a265af9ed654b1d0fcfaedead0c1b5257" compoundref="cfe__sb__api_8c" startline="1122" endline="1421">CFE_SB_SendMsgFull</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1ac5d1727dd8072b5548cb7b7e028fbe09" compoundref="cfe__sb__api_8c" startline="606" endline="768">CFE_SB_SubscribeFull</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a48e6859da8820f497b806df05027bf1c" compoundref="cfe__sb__api_8c" startline="903" endline="1023">CFE_SB_UnsubscribeFull</referencedby>
        <referencedby refid="cfe__tbl__task__cmds_8h_1a73ddff5fd8e2b0e6679aa98aa2133d69" compoundref="cfe__tbl__task__cmds_8c" startline="1148" endline="1324">CFE_TBL_DumpRegCmd</referencedby>
        <referencedby refid="cfe__tbl__internal_8h_1a11dcd82ff5a20dd2e9a064411f7a20f2" compoundref="cfe__tbl__internal_8c" startline="765" endline="778">CFE_TBL_FormTableName</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" compoundref="cfe__tbl__api_8c" startline="722" endline="987">CFE_TBL_Load</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" compoundref="cfe__tbl__api_8c" startline="90" endline="539">CFE_TBL_Register</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1a78668bf1e8256ef604508eb3e5a6c275" compoundref="cfe__tbl__api_8c" startline="550" endline="642">CFE_TBL_Share</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1aaf440695f09ae0621c8d9419fefc4bf3" compoundref="cfe__tbl__api_8c" startline="653" endline="711">CFE_TBL_Unregister</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1a31078e6930a4d5fd5f5d7a90a582ca2a" compoundref="cfe__tbl__api_8c" startline="998" endline="1071">CFE_TBL_Update</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1a0a04217ee50dcc04be836234561e899d" compoundref="cfe__tbl__api_8c" startline="1238" endline="1380">CFE_TBL_Validate</referencedby>
        <referencedby refid="cfe__evs__utils_8h_1a7e63cce3dea9ac919aee6b282835d3d6" compoundref="cfe__evs__utils_8c" startline="230" endline="325">EVS_IsFiltered</referencedby>
        <referencedby refid="cfe__evs__utils_8h_1affe0bc241dc245ca57d963a5d8fc46a7" compoundref="cfe__evs__utils_8c" startline="189" endline="215">EVS_NotRegistered</referencedby>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1ae1f491ab305fd4d1386f20a4177cd2f3" compoundref="osapi_8c" startline="2262" endline="2301">OS_BinSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a63acea7d9ce7e35a48486cd46398f718" compoundref="osapi_8c" startline="2798" endline="2836">OS_CountSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a3132d8fcb5c3dfc4f152c567d9c39756" compoundref="osapi_8c" startline="3211" endline="3249">OS_MutSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1ab5b6f35ad093859012d4d4d482cdfb9d" compoundref="osapi_8c" startline="1674" endline="1710">OS_QueueGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a05df84f4e2a6f26b0985fd29941b5a2d" compoundref="osapi_8c" startline="1114" endline="1150">OS_TaskGetIdByName</referencedby>
        <referencedby refid="ostimer_8c_1a64946f4907ed8ecad18243630110461b" compoundref="ostimer_8c" startline="251" endline="368">OS_TimerCreate</referencedby>
        <referencedby refid="ostimer_8c_1a25b49a7bc1136a15901290ad7b418728" compoundref="ostimer_8c" startline="484" endline="518">OS_TimerGetIdByName</referencedby>
      </memberdef>
      <memberdef kind="define" id="stubs_8c_1a1afa73d7fa95d01675c545859245071b" prot="public" static="no">
        <name>__USE_UNIX98</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="48" column="9" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stubs_8c_1a369266c24eacffb87046522897a570d5" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="49" column="9" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" prot="public" static="no">
        <name>OS_BUFFER_SIZE</name>
        <initializer>1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="59" column="9" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="59" bodyend="-1"/>
        <referencedby refid="osapi_8c_1ae2f28612973b2d1a818b55015b2d8650" compoundref="osapi_8c" startline="3694" endline="3710">OS_printf</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="stubs_8c_1a9172cdd2530d8cb1a35870e98bb91e42" prot="public" static="no" mutable="no">
        <type><ref refid="struct_p_s_p___u_t___stub_data__t" kindref="compound">PSP_UT_StubData_t</ref></type>
        <definition>PSP_UT_StubData_t PSP_UT_StubData</definition>
        <argsstring></argsstring>
        <name>PSP_UT_StubData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="61" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="61" bodyend="-1"/>
        <referencedby refid="psp__testcase_8c_1aa92b46ddb18c7d5f65672e65cdf13a03" compoundref="psp__testcase_8c" startline="474" endline="499">Test_CFE_PSP_ExceptionHook</referencedby>
        <referencedby refid="psp__testcase_8c_1a7160715793f4e4fa7c948a4c093f2445" compoundref="psp__testcase_8c" startline="634" endline="650">Test_CFE_PSP_FlushCaches</referencedby>
        <referencedby refid="psp__testcase_8c_1a5ad79d8e0ab2ed8ba4d0b8e44b8b8434" compoundref="psp__testcase_8c" startline="770" endline="788">Test_CFE_PSP_Get_Dec</referencedby>
        <referencedby refid="psp__testcase_8c_1a6b1ae1d6d9ef0208fd09a95490f7570c" compoundref="psp__testcase_8c" startline="747" endline="767">Test_CFE_PSP_Get_Timebase</referencedby>
        <referencedby refid="psp__testcase_8c_1a28e397f75e5a43ef06afdf925fb8db36" compoundref="psp__testcase_8c" startline="675" endline="693">Test_CFE_PSP_Get_Timer_Tick</referencedby>
        <referencedby refid="psp__testcase_8c_1a77ce69b25a823a1a93f0e67b8cba2c91" compoundref="psp__testcase_8c" startline="890" endline="910">Test_CFE_PSP_GetCDSSizeNominal</referencedby>
        <referencedby refid="psp__testcase_8c_1a824c93f77ca4524d8f3d42a4e2392f4a" compoundref="psp__testcase_8c" startline="913" endline="931">Test_CFE_PSP_GetCDSSizeNullPointer</referencedby>
        <referencedby refid="psp__testcase_8c_1a36e0c9dc9b5249526662bd7ea4832a6f" compoundref="psp__testcase_8c" startline="1207" endline="1231">Test_CFE_PSP_GetKernelTextSegmentInfo</referencedby>
        <referencedby refid="psp__testcase_8c_1a5a432401e0a5deab93381b197106b037" compoundref="psp__testcase_8c" startline="1126" endline="1151">Test_CFE_PSP_GetResetArea</referencedby>
        <referencedby refid="psp__testcase_8c_1ac7ea46f3c6d1ae869639254de2e6f43e" compoundref="psp__testcase_8c" startline="653" endline="672">Test_CFE_PSP_GetTime</referencedby>
        <referencedby refid="psp__testcase_8c_1a81efa4dbdcf1f81409522d2fee3ccd22" compoundref="psp__testcase_8c" startline="719" endline="737">Test_CFE_PSP_GetTimerLow32Rollover</referencedby>
        <referencedby refid="psp__testcase_8c_1a08d802afa22ad7c3c0aba090d263974f" compoundref="psp__testcase_8c" startline="697" endline="715">Test_CFE_PSP_GetTimerTicksPerSecond</referencedby>
        <referencedby refid="psp__testcase_8c_1a0a3ff73a570c7a3a03e932b6a97177ee" compoundref="psp__testcase_8c" startline="1154" endline="1179">Test_CFE_PSP_GetUserReservedArea</referencedby>
        <referencedby refid="psp__testcase_8c_1a3aa6a3b60a329588c356472b9f8053b0" compoundref="psp__testcase_8c" startline="1182" endline="1204">Test_CFE_PSP_GetVolatileDiskMem</referencedby>
        <referencedby refid="psp__testcase_8c_1af852d2835ae565dbb221d3f47237d105" compoundref="psp__testcase_8c" startline="456" endline="464">Test_CFE_PSP_Main_DisplayUsage</referencedby>
        <referencedby refid="psp__testcase_8c_1a6bb53651bc61798190574a4b1add380c" compoundref="psp__testcase_8c" startline="131" endline="153">Test_CFE_PSP_Main_IncorrectPRType</referencedby>
        <referencedby refid="psp__testcase_8c_1a4e58f7c99e93a770d5f4e398d30879b6" compoundref="psp__testcase_8c" startline="431" endline="453">Test_CFE_PSP_Main_InvalidCmdArg</referencedby>
        <referencedby refid="psp__testcase_8c_1a2391bf23da22b44642c482f40c0c23b6" compoundref="psp__testcase_8c" startline="83" endline="105">Test_CFE_PSP_Main_NominalPO</referencedby>
        <referencedby refid="psp__testcase_8c_1a70d754fad4e34108fe8181049f37bf5a" compoundref="psp__testcase_8c" startline="107" endline="129">Test_CFE_PSP_Main_NominalPR</referencedby>
        <referencedby refid="psp__testcase_8c_1af8aca2359ee18b04c2356952ac3994b6" compoundref="psp__testcase_8c" startline="371" endline="399">Test_CFE_PSP_Main_POCpuId</referencedby>
        <referencedby refid="psp__testcase_8c_1a136d57772a9f4d0986c4e66a66b791c2" compoundref="psp__testcase_8c" startline="347" endline="369">Test_CFE_PSP_Main_POCpuName</referencedby>
        <referencedby refid="psp__testcase_8c_1a405b242b1e1dfe8bd19cd2f6f63c4833" compoundref="psp__testcase_8c" startline="179" endline="201">Test_CFE_PSP_Main_POInvalidRunmode</referencedby>
        <referencedby refid="psp__testcase_8c_1a82ec22a4e936f8c9c6b3c2f3c48f9012" compoundref="psp__testcase_8c" startline="155" endline="177">Test_CFE_PSP_Main_PORunmodeTest</referencedby>
        <referencedby refid="psp__testcase_8c_1acaff8bb95151448b557c91d44e32337b" compoundref="psp__testcase_8c" startline="401" endline="429">Test_CFE_PSP_Main_POSpacecraftId</referencedby>
        <referencedby refid="psp__testcase_8c_1ae4e63b31cc45ff9993ee92cf62b5437e" compoundref="psp__testcase_8c" startline="323" endline="345">Test_CFE_PSP_Main_PRInvalidSubtype</referencedby>
        <referencedby refid="psp__testcase_8c_1ac4f9e4eec7aeb34a7f825d5b65da2b7e" compoundref="psp__testcase_8c" startline="203" endline="225">Test_CFE_PSP_Main_PRSubtype1</referencedby>
        <referencedby refid="psp__testcase_8c_1aaea77eda4d5f9a9debb0e7c9b0eeba5b" compoundref="psp__testcase_8c" startline="227" endline="249">Test_CFE_PSP_Main_PRSubtype2</referencedby>
        <referencedby refid="psp__testcase_8c_1ad2f89a02336aedbda0e5bd2ee7da65b1" compoundref="psp__testcase_8c" startline="251" endline="273">Test_CFE_PSP_Main_PRSubtype3</referencedby>
        <referencedby refid="psp__testcase_8c_1a309d25f9ca07abb14637c5b5766ff923" compoundref="psp__testcase_8c" startline="275" endline="297">Test_CFE_PSP_Main_PRSubtype4</referencedby>
        <referencedby refid="psp__testcase_8c_1a3f64d77f4c53f220a6b74c29791cf544" compoundref="psp__testcase_8c" startline="299" endline="321">Test_CFE_PSP_Main_PRSubtype5</referencedby>
        <referencedby refid="psp__testcase_8c_1a6bcd6e3eeb78045d2607d04d88d37ed1" compoundref="psp__testcase_8c" startline="1052" endline="1070">Test_CFE_PSP_ReadFromCDSNullPointer</referencedby>
        <referencedby refid="psp__testcase_8c_1a0d6c5604f19e4ea03af9128ec003d3f7" compoundref="psp__testcase_8c" startline="1073" endline="1100">Test_CFE_PSP_ReadFromCDSOffsetOutOfBounds</referencedby>
        <referencedby refid="psp__testcase_8c_1a9bb9313c275fdf6ce13ab8fa8b886b60" compoundref="psp__testcase_8c" startline="1103" endline="1123">Test_CFE_PSP_ReadFromCDSSizeOutOfBounds</referencedby>
        <referencedby refid="psp__testcase_8c_1a8e4e575824e673f75999aa7e72047fc6" compoundref="psp__testcase_8c" startline="532" endline="552">Test_CFE_PSP_SetupEEPROM</referencedby>
        <referencedby refid="psp__testcase_8c_1a8e963f718e4823859ca7195a24359a28" compoundref="psp__testcase_8c" startline="508" endline="528">Test_CFE_PSP_TimerHandler</referencedby>
        <referencedby refid="psp__testcase_8c_1a8b338b65b6263b60f904cb11d6a28885" compoundref="psp__testcase_8c" startline="829" endline="845">Test_CFE_PSP_WatchdogDisable</referencedby>
        <referencedby refid="psp__testcase_8c_1a447f14c86a979ae8dfdc446c31275924" compoundref="psp__testcase_8c" startline="810" endline="826">Test_CFE_PSP_WatchdogEnable</referencedby>
        <referencedby refid="psp__testcase_8c_1a0e72e91c7331de6e343c03e20c3c9dd7" compoundref="psp__testcase_8c" startline="791" endline="807">Test_CFE_PSP_WatchdogInit</referencedby>
        <referencedby refid="psp__testcase_8c_1a6b2780cf7893b8a573c51c3110ed12a3" compoundref="psp__testcase_8c" startline="848" endline="864">Test_CFE_PSP_WatchdogService</referencedby>
        <referencedby refid="psp__testcase_8c_1acee95b14e3051c46f956e24f201893f2" compoundref="psp__testcase_8c" startline="867" endline="887">Test_CFE_PSP_WatchdogSetGet</referencedby>
        <referencedby refid="psp__testcase_8c_1aaab0da6584f30116b17f168f6068539c" compoundref="psp__testcase_8c" startline="936" endline="976">Test_CFE_PSP_WriteToCDSNominal</referencedby>
        <referencedby refid="psp__testcase_8c_1ab1db7d64212da73ff8ddcf2ec6bbbea1" compoundref="psp__testcase_8c" startline="979" endline="997">Test_CFE_PSP_WriteToCDSNullPointer</referencedby>
        <referencedby refid="psp__testcase_8c_1ac49f72c03f6b296db0596418c3ff6cf3" compoundref="psp__testcase_8c" startline="1000" endline="1026">Test_CFE_PSP_WriteToCDSOffsetOutOfBounds</referencedby>
        <referencedby refid="psp__testcase_8c_1a8b81532ae34e656d68ba1275a1f0d509" compoundref="psp__testcase_8c" startline="1029" endline="1049">Test_CFE_PSP_WriteToCDSSizeOutOfBounds</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="stubs_8c_1a686c07aeae2c05a62a8e0873e70f3d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_API_InitEx</definition>
        <argsstring>(OS_RunTimeModeEnum_t Mode)</argsstring>
        <name>OS_API_InitEx</name>
        <param>
          <type><ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568" kindref="member">OS_RunTimeModeEnum_t</ref></type>
          <declname>Mode</declname>
        </param>
        <briefdescription>
<para>Initialization of API. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Initialize the tables that the OS API uses to keep track of information about objects</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Mode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568" kindref="member">OS_RunTimeModeEnum_t</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="63" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a80b9e43e0efa587a70bd4707fee4f5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CFE_ES_Main</definition>
        <argsstring>(uint32 StartType, uint32 StartSubtype, uint32 ModeId, const char *StartFilePath)</argsstring>
        <name>CFE_ES_Main</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>StartType</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>StartSubtype</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>ModeId</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>StartFilePath</declname>
        </param>
        <briefdescription>
<para>cFE Main Entry Point used by Board Support Package to start cFE </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>cFE main entry point. This is the entry point into the cFE software. It is called only by the Board Support Package software.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">StartType</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies whether this was a #CFE_PSP_RST_TYPE_POWERON or #CFE_PSP_RST_TYPE_PROCESSOR.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">StartSubtype</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies, in more detail, what caused the <computeroutput>StartType</computeroutput> identified above. See <ref refid="cfe__es_8h_1a0c647ba2b5528b53a4f3c84bdbe11942" kindref="member">CFE_ES_POWER_CYCLE</ref> for possible examples.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ModeId</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies the source of the Boot as determined by the BSP.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">StartFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifies the startup file to use to initialize the cFE apps.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1a0e54725c2c038a86bae1f6ba553a9305" kindref="member">CFE_ES_ResetCFE</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="69" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="69" bodyend="79"/>
        <references refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1afadbaab6110c22c422a54c394eeeb819" compoundref="stubs_8h" startline="59">PSP_UT_CFE_StubData_t::CallCounts</references>
        <references refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" compoundref="stubs_8h" startline="66">PSP_UT_StubData_t::CFE</references>
        <references refid="struct_p_s_p___u_t___c_f_e___call_counts__t_1ac525bb3423d76db11059c69776cbb7b0" compoundref="stubs_8h" startline="36">PSP_UT_CFE_CallCounts_t::CFE_ES_Main_Func</references>
        <references refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1ae100320228a664123fc7db8f4fb49b05" compoundref="stubs_8h" startline="60">PSP_UT_CFE_StubData_t::Main_Args</references>
        <references refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1a1d5943471eb8eedbfb0bb6932efe75b9" compoundref="stubs_8h" startline="53">PSP_UT_CFE_ES_Main_Args_t::ModeId</references>
        <references refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1ab4611c1984a484f72431f2206ec1b634" compoundref="stubs_8h" startline="54">PSP_UT_CFE_ES_Main_Args_t::StartFilePath</references>
        <references refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1a934ba5f9ceaf9282a6a54626114c58c3" compoundref="stubs_8h" startline="52">PSP_UT_CFE_ES_Main_Args_t::StartSubtype</references>
        <references refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1a9d94f3055c044d053bbadf1e3fedf3dd" compoundref="stubs_8h" startline="51">PSP_UT_CFE_ES_Main_Args_t::StartType</references>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
        <referencedby refid="psp__testcase_8c_1a1b5b965abea1df074c75f532b72c803b" compoundref="cfe__psp__start_8c" startline="194" endline="441">PSP_Main</referencedby>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a1f6506551e709bd6b8388990e1856c90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CFE_TIME_Local1HzISR</definition>
        <argsstring>(void)</argsstring>
        <name>CFE_TIME_Local1HzISR</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function should be called from the system PSP layer once per second. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Drives the time processing logic from the system PSP layer. This must be called once per second based on a hardware interrupt or OS kernel signal.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>This will update the global data structures accordingly, incrementing each by the 1Hz amount. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="82" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="82" bodyend="85"/>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1afb1a56578647880e65adb15d94908fec" compoundref="cfe__time__utils_8h" startline="192">CFE_TIME_TaskData_t::AtToneLatch</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1a65b361ad2ece108259fac693e20821e6" compoundref="cfe__time__utils_8h" startline="188">CFE_TIME_TaskData_t::AtToneMET</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1ae48494af6b64cdf947fdcc62da8683e8" compoundref="cfe__time__utils_8h" startline="189">CFE_TIME_TaskData_t::AtToneSTCF</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1abd73163e93e3dd78cfa6f5840b03efff" compoundref="cfe__time__utils_8h" startline="270">CFE_TIME_TaskData_t::AutoStartFly</references>
        <references refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1afadbaab6110c22c422a54c394eeeb819" compoundref="stubs_8h" startline="59">PSP_UT_CFE_StubData_t::CallCounts</references>
        <references refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" compoundref="stubs_8h" startline="66">PSP_UT_StubData_t::CFE</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625" compoundref="cfe__es_8h" startline="1401">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4" compoundref="cfe__es_8h" startline="1420">CFE_ES_PerfLogExit</references>
        <references refid="cfe__time_8h_1a37506ce0f1156266a217b2f406440673" compoundref="cfe__time__api_8c" startline="452" endline="472">CFE_TIME_Add</references>
        <references refid="cfe__time__msg_8h_1a8d3db2a0878d7f1dedfb28b9d77520e9" compoundref="cfe__time__msg_8h" startline="752">CFE_TIME_ADD_ADJUST</references>
        <references refid="cfe__time__utils_8c_1ad82bdae884aaaf368bd40905348fc78b" compoundref="cfe__time__utils_8c" startline="712" endline="783">CFE_TIME_GetReference</references>
        <references refid="cfe__time__msg_8h_1a7ccdf36b81eda6f7f742a0b29cd1ff32" compoundref="cfe__time__msg_8h" startline="762">CFE_TIME_IS_FLY</references>
        <references refid="struct_p_s_p___u_t___c_f_e___call_counts__t_1a36475d8fa28a8039cf4f83c831494f13" compoundref="stubs_8h" startline="38">PSP_UT_CFE_CallCounts_t::CFE_TIME_Local1HzISR_Func</references>
        <references refid="cfe__es__perfids_8h_1ab680415937617ecc799dc7056b24e966" compoundref="cfe__es__perfids_8h" startline="80">CFE_TIME_LOCAL1HZISR_PERF_ID</references>
        <references refid="cfe__time__msg_8h_1aced3214d456a3eafee963c93488f258a" compoundref="cfe__time__msg_8h" startline="761">CFE_TIME_NO_FLY</references>
        <references refid="cfe__time_8h_1a50e8edf09dc85ff930021cfa69b445f6" compoundref="cfe__time__api_8c" startline="483" endline="500">CFE_TIME_Subtract</references>
        <references refid="cfe__time__task_8c_1aaaa7eb733e4d64b7932c26231801d2d8" compoundref="cfe__time__task_8c" startline="87">CFE_TIME_TaskData</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1ab24292069b1195054dc6ec05f2bf34ec" compoundref="cfe__time__utils_8h" startline="197">CFE_TIME_TaskData_t::ClockFlyState</references>
        <references refid="struct_c_f_e___t_i_m_e___reference__t_1ad0f520a3a16329ecd43f7a63189a855c" compoundref="cfe__time__utils_8h" startline="139">CFE_TIME_Reference_t::CurrentLatch</references>
        <references refid="struct_c_f_e___t_i_m_e___reference__t_1a05d8492dcf904f1e54daaa18150b4677" compoundref="cfe__time__utils_8h" startline="141">CFE_TIME_Reference_t::CurrentMET</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1a4b0a0df2f8b4a84a358bbd12393bb0c2" compoundref="cfe__time__utils_8h" startline="238">CFE_TIME_TaskData_t::LocalIntCount</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1a47f3d9f2736e1306baf7d0609bd5372d" compoundref="cfe__time__utils_8h" startline="295">CFE_TIME_TaskData_t::LocalSemaphore</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1a85f507a7758c0599b1b1ab68e9bdfbee" compoundref="cfe__time__utils_8h" startline="214">CFE_TIME_TaskData_t::OneHzAdjust</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1a3216b743f0686f644bcb24d511a2df8d" compoundref="cfe__time__utils_8h" startline="217">CFE_TIME_TaskData_t::OneHzDirection</references>
        <references refid="osapi-os-core_8h_1a6b163c7bbcfb7d7001be8b7fb5de7317" compoundref="osapi_8c" startline="1992" endline="2027">OS_BinSemGive</references>
        <references refid="struct_c_f_e___t_i_m_e___sys_time__t_1ac10c014228075ee87ea7938348a98c1c" compoundref="cfe__time_8h" startline="83">CFE_TIME_SysTime_t::Seconds</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1aa8cf8bf3661f79881768372584f1b5f9" compoundref="cfe__time__utils_8h" startline="200">CFE_TIME_TaskData_t::ServerFlyState</references>
        <references refid="struct_c_f_e___t_i_m_e___sys_time__t_1a2af2ad470fa81d8eb5c23f68b54ab81a" compoundref="cfe__time_8h" startline="84">CFE_TIME_SysTime_t::Subseconds</references>
        <references refid="struct_c_f_e___t_i_m_e___reference__t_1a0cf0c194e3e6ecd377024d8b967afbff" compoundref="cfe__time__utils_8h" startline="140">CFE_TIME_Reference_t::TimeSinceTone</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="struct_c_f_e___t_i_m_e___task_data__t_1ad61d16fd2535fce7c29251763a9967c5" compoundref="cfe__time__utils_8h" startline="237">CFE_TIME_TaskData_t::VersionCount</references>
        <referencedby refid="cfe__psp__start_8c_1aa9aba199d05a07a9386b8c130f60cc65" compoundref="cfe__psp__start_8c" startline="477" endline="486">CFE_PSP_TimerHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskDelete</definition>
        <argsstring>(uint32 task_id)</argsstring>
        <name>OS_TaskDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Delete task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified Task and removes it from the OS_task_table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Task ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="88" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a4445a375ddc73d0200f10675496a5c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemDelete</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_BinSemDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Delete binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified Binary Semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>Since we can&apos;t delete a semaphore which is currently locked by some task (as it may ber crucial to completing the task), the semaphore must be full to allow deletion.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="94" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a33fe7baba857372fb0bb54b39403deee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemDelete</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_CountSemDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Delete counting semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified counting Semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>Since we can&apos;t delete a semaphore which is currently locked by some task (as it may ber crucial to completing the task), the semaphore must be full to allow deletion.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a counting semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="100" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a4be56a807779019aad0c84e439906d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemDelete</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_MutSemDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Delete mutex semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified mutex Semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>The mutex must be full to take it, so we have to check for fullness</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a mutex semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="106" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a15f67f089080b67931eb4d91564b367e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueueDelete</definition>
        <argsstring>(uint32 queue_id)</argsstring>
        <name>OS_QueueDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>queue_id</declname>
        </param>
        <briefdescription>
<para>Delete queue. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified message queue.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If There are messages on the queue, they will be lost and any subsequent calls to QueueGet or QueuePut to this queue will result in errors</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queue_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="112" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1ab901e145ec75ad3b6c4e1dc15bb71972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TimerDelete</definition>
        <argsstring>(uint32 timer_id)</argsstring>
        <name>OS_TimerDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>timer_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="118" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1ae2f28612973b2d1a818b55015b2d8650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_printf</definition>
        <argsstring>(const char *String,...)</argsstring>
        <name>OS_printf</name>
        <param>
          <type>const char *</type>
          <declname>String</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="124" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="124" bodyend="136"/>
        <references refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" compoundref="stubs_8c" startline="59">OS_BUFFER_SIZE</references>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1ad400a9522f228aa83489fabf58bbc8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CFE_ES_ProcessCoreException</definition>
        <argsstring>(uint32 HostTaskId, const char *ReasonString, const uint32 *ContextPointer, uint32 ContextSize)</argsstring>
        <name>CFE_ES_ProcessCoreException</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>HostTaskId</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ReasonString</declname>
        </param>
        <param>
          <type>const <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>ContextPointer</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>ContextSize</declname>
        </param>
        <briefdescription>
<para>Process an exception detected by the underlying OS/PSP. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This hook routine is called from the PSP when an exception occurs</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">HostTaskId</parametername>
</parameternamelist>
<parameterdescription>
<para>The OS (not OSAL) task ID </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ReasonString</parametername>
</parameternamelist>
<parameterdescription>
<para>Identifier from PSP </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ContextPointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Context data from PSP </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ContextSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of context data from PSP </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="139" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="139" bodyend="152"/>
        <references refid="struct_c_f_e___e_s___task_info__t_1a8563584a7278b6db7ad0e50aa334d2c8" compoundref="cfe__es_8h" startline="330">CFE_ES_TaskInfo_t::AppId</references>
        <references refid="struct_c_f_e___e_s___global__t_1aadb6b9301c9c153b2f155f13fb956c20" compoundref="cfe__es__global_8h" startline="150">CFE_ES_Global_t::AppTable</references>
        <references refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1afadbaab6110c22c422a54c394eeeb819" compoundref="stubs_8h" startline="59">PSP_UT_CFE_StubData_t::CallCounts</references>
        <references refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" compoundref="stubs_8h" startline="66">PSP_UT_StubData_t::CFE</references>
        <references refid="cfe__es__apps_8h_1a62765ea9d39cd484029b9ba6a5ceb2d6" compoundref="cfe__es__apps_8h" startline="118">CFE_ES_APP_EXCEPTION_RESTART_APP</references>
        <references refid="cfe__es_8h_1a680675148015dbcaaa10ceb42c600f26" compoundref="cfe__es_8h" startline="171">CFE_ES_APP_RESTART</references>
        <references refid="cfe__es__log_8h_1a61cfa0e10eec70dec5149e8561d81c35" compoundref="cfe__es__log_8h" startline="62">CFE_ES_CORE_LOG_ENTRY</references>
        <references refid="cfe__es__api_8c_1a02fce2cb5f102454b012b3f6f0fae207" compoundref="cfe__es__api_8c" startline="896" endline="960">CFE_ES_GetTaskInfo</references>
        <references refid="cfe__es__global_8h_1a9d4db28d1ae03cfdc1ebc9efa7407d35" compoundref="cfe__es__start_8c" startline="146">CFE_ES_Global</references>
        <references refid="struct_p_s_p___u_t___c_f_e___call_counts__t_1a8f86b5e6d2764b1e5e1b0893a5134024" compoundref="stubs_8h" startline="37">PSP_UT_CFE_CallCounts_t::CFE_ES_ProcessCoreException_Func</references>
        <references refid="cfe__es__global_8h_1adfefe92c00acf910519409113038902f" compoundref="cfe__es__start_8c" startline="151">CFE_ES_ResetDataPtr</references>
        <references refid="cfe__es__api_8c_1a369222a2bda44367bef416fc084b936a" compoundref="cfe__es__api_8c" startline="298" endline="341">CFE_ES_RestartApp</references>
        <references refid="cfe__es__erlog_8c_1a030913a973f5d06b22c1c7e28826f093" compoundref="cfe__es__erlog_8c" startline="79" endline="193">CFE_ES_WriteToERLog</references>
        <references refid="cfe__psp__support_8c_1a1b6476a707973f0b551ea79e8f12558c" compoundref="cfe__psp__support_8c" startline="68" endline="86">CFE_PSP_Restart</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" compoundref="cfe__error_8h" startline="162">CFE_SUCCESS</references>
        <references refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1ade4b80ab3b521b0963f79f25fb0cf6f9" compoundref="stubs_8h" startline="45">PSP_UT_CFE_ProcessCoreException_Args_t::ContextPointer</references>
        <references refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a31d86f7da4278c603c0a27516a76000c" compoundref="stubs_8h" startline="46">PSP_UT_CFE_ProcessCoreException_Args_t::ContextSize</references>
        <references refid="struct_c_f_e___e_s___reset_variables__t_1a137bb22b642b4bc43e2ab0c08802f0ef" compoundref="cfe__es__resetdata__typedef_8h" startline="40">CFE_ES_ResetVariables_t::ES_CausedReset</references>
        <references refid="struct_c_f_e___e_s___app_start_params__t_1aa26ae34ef61ac97668fea8530875ca8d" compoundref="cfe__es__apps_8h" startline="153">CFE_ES_AppStartParams_t::ExceptionAction</references>
        <references refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a9282f6aeeca8674f713c474d06774c79" compoundref="stubs_8h" startline="43">PSP_UT_CFE_ProcessCoreException_Args_t::HostTaskId</references>
        <references refid="struct_c_f_e___e_s___reset_variables__t_1a487a455110190dd9a46e35e576af3ad8" compoundref="cfe__es__resetdata__typedef_8h" startline="42">CFE_ES_ResetVariables_t::MaxProcessorResetCount</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi-os-core_8h_1a9775643a41957b9316872fbba0b4ed46" compoundref="osapi_8c" startline="1164" endline="1201">OS_TaskGetInfo</references>
        <references refid="struct_o_s__task__prop__t_1ac59aee1a4a89d3e52574ab3f575565a9" compoundref="osapi-os-core_8h" startline="81">OS_task_prop_t::OStask_id</references>
        <references refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1abf682ef2b2a10bc7c1d65f070d014625" compoundref="stubs_8h" startline="61">PSP_UT_CFE_StubData_t::ProcessCoreException_Args</references>
        <references refid="struct_c_f_e___e_s___reset_variables__t_1ac7d9f21e1c3da15bf1689083869db9ca" compoundref="cfe__es__resetdata__typedef_8h" startline="41">CFE_ES_ResetVariables_t::ProcessorResetCount</references>
        <references refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a4000ea26a5d6c8581ab9e8fbc1251010" compoundref="stubs_8h" startline="44">PSP_UT_CFE_ProcessCoreException_Args_t::ReasonString</references>
        <references refid="struct_c_f_e___e_s___task_record__t_1a6138d360b74a6e511323cf2319470e0d" compoundref="cfe__es__apps_8h" startline="193">CFE_ES_TaskRecord_t::RecordUsed</references>
        <references refid="struct_c_f_e___e_s___reset_data__t_1aae7d24302d4edbf3baa7dbd18caedd23" compoundref="cfe__es__resetdata__typedef_8h" startline="77">CFE_ES_ResetData_t::ResetVars</references>
        <references refid="struct_c_f_e___e_s___app_record__t_1ab6d40c8d97e15efa6335b3ba9001c58d" compoundref="cfe__es__apps_8h" startline="180">CFE_ES_AppRecord_t::StartParams</references>
        <references refid="struct_c_f_e___e_s___task_record__t_1a86a58c1c33bdb7472a228914df795fbe" compoundref="cfe__es__apps_8h" startline="195">CFE_ES_TaskRecord_t::TaskId</references>
        <references refid="struct_c_f_e___e_s___global__t_1a40f10dd2e2c800fbe41ce062f60eb634" compoundref="cfe__es__global_8h" startline="143">CFE_ES_Global_t::TaskTable</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="psp__testcase_8c_1a7ce75b65e52337994728f5e5f233c526" compoundref="cfe__psp__exception_8c" startline="104" endline="125">CFE_PSP_ExceptionHook</referencedby>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1a810b1f61b670190cbdbd8f89e4d5fb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_GetLocalTime</definition>
        <argsstring>(OS_time_t *time_struct)</argsstring>
        <name>OS_GetLocalTime</name>
        <param>
          <type><ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref> *</type>
          <declname>time_struct</declname>
        </param>
        <briefdescription>
<para>Get local time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This functions get the local time of the machine its on</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>time_struct <ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref> struct pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if any of the necessary pointers are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="155" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="155" bodyend="161"/>
        <references refid="struct_o_s__time__t_1acad716a15e85ab4da15d801d9b9831dd" compoundref="osapi-os-core_8h" startline="129">OS_time_t::microsecs</references>
        <references refid="struct_o_s__time__t_1ac2b783772312bf20342afbbb0859d128" compoundref="osapi-os-core_8h" startline="128">OS_time_t::seconds</references>
      </memberdef>
      <memberdef kind="function" id="stubs_8c_1aa1c7b19b29a2ab6c31236bf513c7c29b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PSP_UT_ResetStubData</definition>
        <argsstring>(void)</argsstring>
        <name>PSP_UT_ResetStubData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" line="165" column="1" bodyfile="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c" bodystart="165" bodyend="168"/>
        <referencedby refid="psp__testcase_8c_1a0218981fe0a439d974298a9c1afe7065" compoundref="psp__testcase_8c" startline="1259" endline="1269">PSP_Setup</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2017<sp/>Windhover<sp/>Labs,<sp/>L.L.C.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>Windhover<sp/>Labs<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common__types_8h" kindref="compound">common_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OS_MAX_API_NAME<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="osapi-os-rtm_8h" kindref="compound">osapi-os-rtm.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="osapi-os-core_8h" kindref="compound">osapi-os-core.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment">**<sp/>The<sp/>__USE_UNIX98<sp/>is<sp/>for<sp/>advanced<sp/>pthread<sp/>features<sp/>on<sp/>linux</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="stubs_8c_1a1afa73d7fa95d01675c545859245071b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__USE_UNIX98</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="stubs_8c_1a369266c24eacffb87046522897a570d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stubs_8h" kindref="compound">stubs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OS_BUFFER_SIZE<sp/>1000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="stubs_8h_1a9172cdd2530d8cb1a35870e98bb91e42" refkind="member"><highlight class="normal"><ref refid="struct_p_s_p___u_t___stub_data__t" kindref="compound">PSP_UT_StubData_t</ref><sp/><ref refid="stubs_8c_1a9172cdd2530d8cb1a35870e98bb91e42" kindref="member">PSP_UT_StubData</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="stubs_8c_1a686c07aeae2c05a62a8e0873e70f3d6a" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a686c07aeae2c05a62a8e0873e70f3d6a" kindref="member">OS_API_InitEx</ref>(<ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568" kindref="member">OS_RunTimeModeEnum_t</ref><sp/>Mode)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="stubs_8c_1a80b9e43e0efa587a70bd4707fee4f5f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stubs_8c_1a80b9e43e0efa587a70bd4707fee4f5f8" kindref="member">CFE_ES_Main</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>StartType,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>StartSubtype,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>ModeId<sp/>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*StartFilePath<sp/>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1afadbaab6110c22c422a54c394eeeb819" kindref="member">CallCounts</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___call_counts__t_1ac525bb3423d76db11059c69776cbb7b0" kindref="member">CFE_ES_Main_Func</ref>++;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1ae100320228a664123fc7db8f4fb49b05" kindref="member">Main_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1a9d94f3055c044d053bbadf1e3fedf3dd" kindref="member">StartType</ref><sp/>=<sp/>StartType;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1ae100320228a664123fc7db8f4fb49b05" kindref="member">Main_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1a934ba5f9ceaf9282a6a54626114c58c3" kindref="member">StartSubtype</ref><sp/>=<sp/>StartSubtype;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1ae100320228a664123fc7db8f4fb49b05" kindref="member">Main_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1a1d5943471eb8eedbfb0bb6932efe75b9" kindref="member">ModeId</ref><sp/>=<sp/>ModeId;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(StartFilePath<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1ae100320228a664123fc7db8f4fb49b05" kindref="member">Main_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1ab4611c1984a484f72431f2206ec1b634" kindref="member">StartFilePath</ref>,<sp/>StartFilePath,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1ae100320228a664123fc7db8f4fb49b05" kindref="member">Main_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___e_s___main___args__t_1ab4611c1984a484f72431f2206ec1b634" kindref="member">StartFilePath</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="stubs_8c_1a1f6506551e709bd6b8388990e1856c90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stubs_8c_1a1f6506551e709bd6b8388990e1856c90" kindref="member">CFE_TIME_Local1HzISR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1afadbaab6110c22c422a54c394eeeb819" kindref="member">CallCounts</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___call_counts__t_1a36475d8fa28a8039cf4f83c831494f13" kindref="member">CFE_TIME_Local1HzISR_Func</ref>++;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="stubs_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" kindref="member">OS_TaskDelete</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>task_id)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="stubs_8c_1a4445a375ddc73d0200f10675496a5c4a" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a4445a375ddc73d0200f10675496a5c4a" kindref="member">OS_BinSemDelete</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="stubs_8c_1a33fe7baba857372fb0bb54b39403deee" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a33fe7baba857372fb0bb54b39403deee" kindref="member">OS_CountSemDelete</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="stubs_8c_1a4be56a807779019aad0c84e439906d11" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a4be56a807779019aad0c84e439906d11" kindref="member">OS_MutSemDelete</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="stubs_8c_1a15f67f089080b67931eb4d91564b367e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a15f67f089080b67931eb4d91564b367e" kindref="member">OS_QueueDelete</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>queue_id)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="stubs_8c_1ab901e145ec75ad3b6c4e1dc15bb71972" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1ab901e145ec75ad3b6c4e1dc15bb71972" kindref="member">OS_TimerDelete</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>timer_id)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="stubs_8c_1ae2f28612973b2d1a818b55015b2d8650" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stubs_8c_1ae2f28612973b2d1a818b55015b2d8650" kindref="member">OS_printf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*String,<sp/>...)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ptr;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg_buffer[<ref refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" kindref="member">OS_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(ptr,String);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>vsnprintf(&amp;msg_buffer[0],<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" kindref="member">OS_BUFFER_SIZE</ref>,<sp/>String,<sp/>ptr);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(ptr);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_buffer[OS_BUFFER_SIZE<sp/>-1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>&amp;msg_buffer[0]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="stubs_8c_1ad400a9522f228aa83489fabf58bbc8c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stubs_8c_1ad400a9522f228aa83489fabf58bbc8c0" kindref="member">CFE_ES_ProcessCoreException</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/>HostTaskId,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ReasonString,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*ContextPointer,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>ContextSize)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1afadbaab6110c22c422a54c394eeeb819" kindref="member">CallCounts</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___call_counts__t_1a8f86b5e6d2764b1e5e1b0893a5134024" kindref="member">CFE_ES_ProcessCoreException_Func</ref>++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1abf682ef2b2a10bc7c1d65f070d014625" kindref="member">ProcessCoreException_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a9282f6aeeca8674f713c474d06774c79" kindref="member">HostTaskId</ref><sp/>=<sp/>HostTaskId;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ReasonString<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1abf682ef2b2a10bc7c1d65f070d014625" kindref="member">ProcessCoreException_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a4000ea26a5d6c8581ab9e8fbc1251010" kindref="member">ReasonString</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReasonString,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1abf682ef2b2a10bc7c1d65f070d014625" kindref="member">ProcessCoreException_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a4000ea26a5d6c8581ab9e8fbc1251010" kindref="member">ReasonString</ref>));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1abf682ef2b2a10bc7c1d65f070d014625" kindref="member">ProcessCoreException_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1ade4b80ab3b521b0963f79f25fb0cf6f9" kindref="member">ContextPointer</ref><sp/>=<sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref>*)ContextPointer;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>PSP_UT_StubData.<ref refid="struct_p_s_p___u_t___stub_data__t_1af846210ed0e4baa308622806f12218a8" kindref="member">CFE</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___stub_data__t_1abf682ef2b2a10bc7c1d65f070d014625" kindref="member">ProcessCoreException_Args</ref>.<ref refid="struct_p_s_p___u_t___c_f_e___process_core_exception___args__t_1a31d86f7da4278c603c0a27516a76000c" kindref="member">ContextSize</ref><sp/>=<sp/>ContextSize;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="stubs_8c_1a810b1f61b670190cbdbd8f89e4d5fb95" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="stubs_8c_1a810b1f61b670190cbdbd8f89e4d5fb95" kindref="member">OS_GetLocalTime</ref>(<ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref><sp/>*time_struct)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>time_struct-&gt;<ref refid="struct_o_s__time__t_1ac2b783772312bf20342afbbb0859d128" kindref="member">seconds</ref><sp/>=<sp/>123;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>time_struct-&gt;<ref refid="struct_o_s__time__t_1acad716a15e85ab4da15d801d9b9831dd" kindref="member">microsecs</ref><sp/>=<sp/>456;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="stubs_8h_1aa1c7b19b29a2ab6c31236bf513c7c29b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stubs_8c_1aa1c7b19b29a2ab6c31236bf513c7c29b" kindref="member">PSP_UT_ResetStubData</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;PSP_UT_StubData,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_s_p___u_t___stub_data__t" kindref="compound">PSP_UT_StubData_t</ref>));</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/airliner/core/psp/fsw/pc-linux-wh/unit_test/stubs.c"/>
  </compounddef>
</doxygen>
