<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="osapi_8c" kind="file" language="C++">
    <compoundname>osapi.c</compoundname>
    <includes local="no">unistd.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="yes">osconfig.h</includes>
    <includes local="no">sched.h</includes>
    <includes local="no">pthread.h</includes>
    <includes refid="common__types_8h" local="yes">common_types.h</includes>
    <includes refid="osapi_8h" local="yes">osapi.h</includes>
    <incdepgraph>
      <node id="9260">
        <label>sys/stat.h</label>
      </node>
      <node id="9254">
        <label>stdarg.h</label>
      </node>
      <node id="9250">
        <label>common_types.h</label>
        <link refid="common__types_8h"/>
      </node>
      <node id="9258">
        <label>stdlib.h</label>
      </node>
      <node id="9246">
        <label>errno.h</label>
      </node>
      <node id="9255">
        <label>osapi-os-rtm.h</label>
        <link refid="osapi-os-rtm_8h"/>
      </node>
      <node id="9256">
        <label>osapi-os-filesys.h</label>
        <link refid="osapi-os-filesys_8h"/>
        <childnode refid="9257" relation="include">
        </childnode>
        <childnode refid="9258" relation="include">
        </childnode>
        <childnode refid="9259" relation="include">
        </childnode>
        <childnode refid="9260" relation="include">
        </childnode>
      </node>
      <node id="9252">
        <label>osapi-version.h</label>
        <link refid="osapi-version_8h"/>
      </node>
      <node id="9251">
        <label>osapi.h</label>
        <link refid="osapi_8h"/>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9252" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9253" relation="include">
        </childnode>
        <childnode refid="9256" relation="include">
        </childnode>
        <childnode refid="9261" relation="include">
        </childnode>
        <childnode refid="9262" relation="include">
        </childnode>
        <childnode refid="9263" relation="include">
        </childnode>
        <childnode refid="9255" relation="include">
        </childnode>
      </node>
      <node id="9263">
        <label>osapi-os-timer.h</label>
        <link refid="osapi-os-timer_8h"/>
      </node>
      <node id="9249">
        <label>pthread.h</label>
      </node>
      <node id="9242">
        <label>/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c</label>
        <link refid="osapi.c"/>
        <childnode refid="9243" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9248" relation="include">
        </childnode>
        <childnode refid="9249" relation="include">
        </childnode>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9251" relation="include">
        </childnode>
      </node>
      <node id="9245">
        <label>string.h</label>
      </node>
      <node id="9243">
        <label>unistd.h</label>
      </node>
      <node id="9244">
        <label>signal.h</label>
      </node>
      <node id="9247">
        <label>osconfig.h</label>
      </node>
      <node id="9261">
        <label>osapi-os-net.h</label>
        <link refid="osapi-os-net_8h"/>
      </node>
      <node id="9262">
        <label>osapi-os-loader.h</label>
        <link refid="osapi-os-loader_8h"/>
      </node>
      <node id="9248">
        <label>sched.h</label>
      </node>
      <node id="9257">
        <label>stdio.h</label>
      </node>
      <node id="9253">
        <label>osapi-os-core.h</label>
        <link refid="osapi-os-core_8h"/>
        <childnode refid="9254" relation="include">
        </childnode>
        <childnode refid="9255" relation="include">
        </childnode>
      </node>
      <node id="9259">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_o_s__task__record__t" prot="public">OS_task_record_t</innerclass>
    <innerclass refid="struct_o_s__queue__data__t" prot="public">OS_queue_data_t</innerclass>
    <innerclass refid="struct_o_s__queue__record__t" prot="public">OS_queue_record_t</innerclass>
    <innerclass refid="struct_o_s__bin__sem__record__t" prot="public">OS_bin_sem_record_t</innerclass>
    <innerclass refid="struct_o_s__count__sem__record__t" prot="public">OS_count_sem_record_t</innerclass>
    <innerclass refid="struct_o_s__mut__sem__record__t" prot="public">OS_mut_sem_record_t</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="osapi_8c_1a369266c24eacffb87046522897a570d5" prot="public" static="no">
        <name>_GNU_SOURCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="37" column="9" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" prot="public" static="no">
        <name>UNINITIALIZED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="60" column="9" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="60" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</referencedby>
        <referencedby refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</referencedby>
        <referencedby refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" compoundref="osapi_8c" startline="897" endline="919">OS_TaskExit</referencedby>
      </memberdef>
      <memberdef kind="define" id="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" prot="public" static="no">
        <name>MAX_PRIORITY</name>
        <initializer>255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="61" column="9" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="61" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" compoundref="osapi_8c" startline="3804" endline="3886">OS_PriorityRemap</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" compoundref="osapi_8c" startline="973" endline="1017">OS_TaskSetPriority</referencedby>
      </memberdef>
      <memberdef kind="define" id="osapi_8c_1a8b3dc1c5c1a165d6143b1dce950e8266" prot="public" static="no">
        <name>PTHREAD_STACK_MIN</name>
        <initializer>8092</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="63" column="12" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="63" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
      </memberdef>
      <memberdef kind="define" id="osapi_8c_1a85dd147b4a04049013888731b1b80d5d" prot="public" static="no">
        <name>OS_API_UNINITIALIZED</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="66" column="9" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" prot="public" static="no">
        <name>OS_API_INITIALIZED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="67" column="9" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="67" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" compoundref="osapi_8c" startline="2042" endline="2084">OS_BinSemFlush</referencedby>
        <referencedby refid="osapi_8c_1ae1f491ab305fd4d1386f20a4177cd2f3" compoundref="osapi_8c" startline="2262" endline="2301">OS_BinSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" compoundref="osapi_8c" startline="2314" endline="2345">OS_BinSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" compoundref="osapi_8c" startline="1992" endline="2027">OS_BinSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" compoundref="osapi_8c" startline="2100" endline="2163">OS_BinSemTake</referencedby>
        <referencedby refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" compoundref="osapi_8c" startline="2180" endline="2249">OS_BinSemTimedWait</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a63acea7d9ce7e35a48486cd46398f718" compoundref="osapi_8c" startline="2798" endline="2836">OS_CountSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" compoundref="osapi_8c" startline="2849" endline="2890">OS_CountSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1aa86572454ea836feb25ff46ed5962698" compoundref="osapi_8c" startline="2579" endline="2621">OS_CountSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5823afb4723b533c182c8493e93078ea" compoundref="osapi_8c" startline="2637" endline="2699">OS_CountSemTake</referencedby>
        <referencedby refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" compoundref="osapi_8c" startline="2716" endline="2784">OS_CountSemTimedWait</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a3132d8fcb5c3dfc4f152c567d9c39756" compoundref="osapi_8c" startline="3211" endline="3249">OS_MutSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" compoundref="osapi_8c" startline="3263" endline="3296">OS_MutSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a48964b6567f9ceda86a51ebc02fb88c5" compoundref="osapi_8c" startline="3115" endline="3144">OS_MutSemGive</referencedby>
        <referencedby refid="osapi_8c_1a77239ad1acd87f235cdc45142cc0d39f" compoundref="osapi_8c" startline="3160" endline="3198">OS_MutSemTake</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</referencedby>
        <referencedby refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" compoundref="osapi_8c" startline="1428" endline="1562">OS_QueueGet</referencedby>
        <referencedby refid="osapi_8c_1ab5b6f35ad093859012d4d4d482cdfb9d" compoundref="osapi_8c" startline="1674" endline="1710">OS_QueueGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" compoundref="osapi_8c" startline="1722" endline="1754">OS_QueueGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" compoundref="osapi_8c" startline="1580" endline="1658">OS_QueuePut</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a8f78bce95227e4e99fe6f0378835260e" compoundref="osapi_8c" startline="928" endline="960">OS_TaskDelay</referencedby>
        <referencedby refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</referencedby>
        <referencedby refid="osapi_8c_1a05df84f4e2a6f26b0985fd29941b5a2d" compoundref="osapi_8c" startline="1114" endline="1150">OS_TaskGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" compoundref="osapi_8c" startline="1164" endline="1201">OS_TaskGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" compoundref="osapi_8c" startline="1211" endline="1249">OS_TaskInstallDeleteHandler</referencedby>
        <referencedby refid="osapi_8c_1a2712303c67dda79b3f382101f2d5e547" compoundref="osapi_8c" startline="1030" endline="1077">OS_TaskRegister</referencedby>
        <referencedby refid="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" compoundref="osapi_8c" startline="973" endline="1017">OS_TaskSetPriority</referencedby>
      </memberdef>
      <memberdef kind="define" id="osapi_8c_1a4dd84d180afccc228b587c851c474f47" prot="public" static="no">
        <name>OS_SHUTDOWN_MAGIC_NUMBER</name>
        <initializer>0xABADC0DE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="69" column="9" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="69" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a316dfd9308c0541dae9951d0516c1496" compoundref="osapi_8c" startline="509" endline="521">OS_ApplicationShutdown</referencedby>
        <referencedby refid="osapi_8c_1aaf04b6458b5400d3bf12ceb20eb00573" compoundref="osapi_8c" startline="484" endline="497">OS_IdleLoop</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="osapi_8c_1a7803d3e126ac029d142e78b3b28325fa" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* FuncPtr_t) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>FuncPtr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="152" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="osapi_8c_1a422e2c80225e5df4ea056063a5069192" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>uint32 OS_API_Initialized</definition>
        <argsstring></argsstring>
        <name>OS_API_Initialized</name>
        <initializer>= <ref refid="osapi_8c_1a85dd147b4a04049013888731b1b80d5d" kindref="member">OS_API_UNINITIALIZED</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="83" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="83" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" compoundref="osapi_8c" startline="2042" endline="2084">OS_BinSemFlush</referencedby>
        <referencedby refid="osapi_8c_1ae1f491ab305fd4d1386f20a4177cd2f3" compoundref="osapi_8c" startline="2262" endline="2301">OS_BinSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" compoundref="osapi_8c" startline="2314" endline="2345">OS_BinSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" compoundref="osapi_8c" startline="1992" endline="2027">OS_BinSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" compoundref="osapi_8c" startline="2100" endline="2163">OS_BinSemTake</referencedby>
        <referencedby refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" compoundref="osapi_8c" startline="2180" endline="2249">OS_BinSemTimedWait</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a63acea7d9ce7e35a48486cd46398f718" compoundref="osapi_8c" startline="2798" endline="2836">OS_CountSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" compoundref="osapi_8c" startline="2849" endline="2890">OS_CountSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1aa86572454ea836feb25ff46ed5962698" compoundref="osapi_8c" startline="2579" endline="2621">OS_CountSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5823afb4723b533c182c8493e93078ea" compoundref="osapi_8c" startline="2637" endline="2699">OS_CountSemTake</referencedby>
        <referencedby refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" compoundref="osapi_8c" startline="2716" endline="2784">OS_CountSemTimedWait</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a3132d8fcb5c3dfc4f152c567d9c39756" compoundref="osapi_8c" startline="3211" endline="3249">OS_MutSemGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" compoundref="osapi_8c" startline="3263" endline="3296">OS_MutSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a48964b6567f9ceda86a51ebc02fb88c5" compoundref="osapi_8c" startline="3115" endline="3144">OS_MutSemGive</referencedby>
        <referencedby refid="osapi_8c_1a77239ad1acd87f235cdc45142cc0d39f" compoundref="osapi_8c" startline="3160" endline="3198">OS_MutSemTake</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</referencedby>
        <referencedby refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" compoundref="osapi_8c" startline="1428" endline="1562">OS_QueueGet</referencedby>
        <referencedby refid="osapi_8c_1ab5b6f35ad093859012d4d4d482cdfb9d" compoundref="osapi_8c" startline="1674" endline="1710">OS_QueueGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" compoundref="osapi_8c" startline="1722" endline="1754">OS_QueueGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" compoundref="osapi_8c" startline="1580" endline="1658">OS_QueuePut</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a8f78bce95227e4e99fe6f0378835260e" compoundref="osapi_8c" startline="928" endline="960">OS_TaskDelay</referencedby>
        <referencedby refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</referencedby>
        <referencedby refid="osapi_8c_1a05df84f4e2a6f26b0985fd29941b5a2d" compoundref="osapi_8c" startline="1114" endline="1150">OS_TaskGetIdByName</referencedby>
        <referencedby refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" compoundref="osapi_8c" startline="1164" endline="1201">OS_TaskGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" compoundref="osapi_8c" startline="1211" endline="1249">OS_TaskInstallDeleteHandler</referencedby>
        <referencedby refid="osapi_8c_1a2712303c67dda79b3f382101f2d5e547" compoundref="osapi_8c" startline="1030" endline="1077">OS_TaskRegister</referencedby>
        <referencedby refid="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" compoundref="osapi_8c" startline="973" endline="1017">OS_TaskSetPriority</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a09953f42ae1201b9928d9316da85f2b4" prot="public" static="no" mutable="no">
        <type><ref refid="struct_o_s__task__record__t" kindref="compound">OS_task_record_t</ref></type>
        <definition>OS_task_record_t OS_task_table[OS_MAX_TASKS]</definition>
        <argsstring>[OS_MAX_TASKS]</argsstring>
        <name>OS_task_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="155" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1ad21808bb1001f085141ddec9dca4d34e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_o_s__queue__record__t" kindref="compound">OS_queue_record_t</ref></type>
        <definition>OS_queue_record_t OS_queue_table[OS_MAX_QUEUES]</definition>
        <argsstring>[OS_MAX_QUEUES]</argsstring>
        <name>OS_queue_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="156" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a489e36b3bad0cda17d73d58272e1379b" prot="public" static="no" mutable="no">
        <type><ref refid="struct_o_s__bin__sem__record__t" kindref="compound">OS_bin_sem_record_t</ref></type>
        <definition>OS_bin_sem_record_t OS_bin_sem_table[OS_MAX_BIN_SEMAPHORES]</definition>
        <argsstring>[OS_MAX_BIN_SEMAPHORES]</argsstring>
        <name>OS_bin_sem_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="157" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a790cadd5af42235490e0289b1208a945" prot="public" static="no" mutable="no">
        <type><ref refid="struct_o_s__count__sem__record__t" kindref="compound">OS_count_sem_record_t</ref></type>
        <definition>OS_count_sem_record_t OS_count_sem_table[OS_MAX_COUNT_SEMAPHORES]</definition>
        <argsstring>[OS_MAX_COUNT_SEMAPHORES]</argsstring>
        <name>OS_count_sem_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="158" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a463bfc17c096c61ad8108b66bf8ba7c8" prot="public" static="no" mutable="no">
        <type><ref refid="struct_o_s__mut__sem__record__t" kindref="compound">OS_mut_sem_record_t</ref></type>
        <definition>OS_mut_sem_record_t OS_mut_sem_table[OS_MAX_MUTEXES]</definition>
        <argsstring>[OS_MAX_MUTEXES]</argsstring>
        <name>OS_mut_sem_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="159" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" prot="public" static="no" mutable="no">
        <type>pthread_key_t</type>
        <definition>pthread_key_t thread_key</definition>
        <argsstring></argsstring>
        <name>thread_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="161" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="161" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" compoundref="osapi_8c" startline="1088" endline="1101">OS_TaskGetId</referencedby>
        <referencedby refid="osapi_8c_1a2712303c67dda79b3f382101f2d5e547" compoundref="osapi_8c" startline="1030" endline="1077">OS_TaskRegister</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t OS_task_table_mut</definition>
        <argsstring></argsstring>
        <name>OS_task_table_mut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="163" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="163" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</referencedby>
        <referencedby refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" compoundref="osapi_8c" startline="897" endline="919">OS_TaskExit</referencedby>
        <referencedby refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" compoundref="osapi_8c" startline="1164" endline="1201">OS_TaskGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" compoundref="osapi_8c" startline="1211" endline="1249">OS_TaskInstallDeleteHandler</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t OS_queue_table_mut</definition>
        <argsstring></argsstring>
        <name>OS_queue_table_mut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="164" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="164" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</referencedby>
        <referencedby refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" compoundref="osapi_8c" startline="1428" endline="1562">OS_QueueGet</referencedby>
        <referencedby refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" compoundref="osapi_8c" startline="1722" endline="1754">OS_QueueGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" compoundref="osapi_8c" startline="1580" endline="1658">OS_QueuePut</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t OS_bin_sem_table_mut</definition>
        <argsstring></argsstring>
        <name>OS_bin_sem_table_mut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="165" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="165" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" compoundref="osapi_8c" startline="2314" endline="2345">OS_BinSemGetInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a7604941197a755a7fe1166532ada3f53" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t OS_mut_sem_table_mut</definition>
        <argsstring></argsstring>
        <name>OS_mut_sem_table_mut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="166" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="166" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" compoundref="osapi_8c" startline="3263" endline="3296">OS_MutSemGetInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1abd78630693a6531a22ab5b07d9643438" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t OS_count_sem_table_mut</definition>
        <argsstring></argsstring>
        <name>OS_count_sem_table_mut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="167" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="167" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" compoundref="osapi_8c" startline="2849" endline="2890">OS_CountSemGetInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>uint32 OS_printf_enabled</definition>
        <argsstring></argsstring>
        <name>OS_printf_enabled</name>
        <initializer>= <ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="169" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="169" bodyend="-1"/>
        <referencedby refid="osapi_8c_1ae2f28612973b2d1a818b55015b2d8650" compoundref="osapi_8c" startline="3694" endline="3710">OS_printf</referencedby>
        <referencedby refid="osapi_8c_1a14d3e2839a46e39012b78d7f15eae65a" compoundref="osapi_8c" startline="3718" endline="3721">OS_printf_disable</referencedby>
        <referencedby refid="osapi_8c_1afefa8925b46d03434c71daa5b6c42601" compoundref="osapi_8c" startline="3729" endline="3732">OS_printf_enable</referencedby>
      </memberdef>
      <memberdef kind="variable" id="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>volatile uint32 OS_shutdown</definition>
        <argsstring></argsstring>
        <name>OS_shutdown</name>
        <initializer>= <ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="170" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="170" bodyend="-1"/>
        <referencedby refid="osapi_8c_1a316dfd9308c0541dae9951d0516c1496" compoundref="osapi_8c" startline="509" endline="521">OS_ApplicationShutdown</referencedby>
        <referencedby refid="osapi_8c_1aaf04b6458b5400d3bf12ceb20eb00573" compoundref="osapi_8c" startline="484" endline="497">OS_IdleLoop</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="osapi_8c_1a668c19646d5c270107d0842e50cf8746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pthread_setname_np</definition>
        <argsstring>(pthread_t __target_thread, const char *__name)</argsstring>
        <name>pthread_setname_np</name>
        <param>
          <type>pthread_t</type>
          <declname>__target_thread</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>__name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="73" column="1"/>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_CompAbsDelayTime</definition>
        <argsstring>(uint32 milli_second, struct timespec *tm)</argsstring>
        <name>OS_CompAbsDelayTime</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>milli_second</declname>
        </param>
        <param>
          <type>struct timespec *</type>
          <declname>tm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="176" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3672" bodyend="3686"/>
        <referencedby refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" compoundref="osapi_8c" startline="2180" endline="2249">OS_BinSemTimedWait</referencedby>
        <referencedby refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" compoundref="osapi_8c" startline="2716" endline="2784">OS_CountSemTimedWait</referencedby>
        <referencedby refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" compoundref="osapi_8c" startline="1428" endline="1562">OS_QueueGet</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1aac4d6adb633b44a489ac9f3344db7e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_ThreadKillHandler</definition>
        <argsstring>(int sig)</argsstring>
        <name>OS_ThreadKillHandler</name>
        <param>
          <type>int</type>
          <declname>sig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="177" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3895" bodyend="3899"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>uint32 OS_FindCreator</definition>
        <argsstring>(void)</argsstring>
        <name>OS_FindCreator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="178" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3633" bodyend="3651"/>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osfileapi_8c_1a9e28b3226a066b1ea186650ed36b9b81" compoundref="osfileapi_8c" startline="132" endline="232">OS_creat</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osfileapi_8c_1a32b00c0a65370a5dd7fde6157a249980" compoundref="osfileapi_8c" startline="249" endline="350">OS_open</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="ostimer_8c_1a64946f4907ed8ecad18243630110461b" compoundref="ostimer_8c" startline="251" endline="368">OS_TimerCreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_PriorityRemap</definition>
        <argsstring>(uint32 InputPri)</argsstring>
        <name>OS_PriorityRemap</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>InputPri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="179" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3804" bodyend="3886"/>
        <references refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" compoundref="osapi_8c" startline="61">MAX_PRIORITY</references>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" compoundref="osapi_8c" startline="973" endline="1017">OS_TaskSetPriority</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int OS_InterruptSafeLock</definition>
        <argsstring>(pthread_mutex_t *lock, sigset_t *set, sigset_t *previous)</argsstring>
        <name>OS_InterruptSafeLock</name>
        <param>
          <type>pthread_mutex_t *</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>sigset_t *</type>
          <declname>set</declname>
        </param>
        <param>
          <type>sigset_t *</type>
          <declname>previous</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="180" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3943" bodyend="3959"/>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" compoundref="osapi_8c" startline="2042" endline="2084">OS_BinSemFlush</referencedby>
        <referencedby refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" compoundref="osapi_8c" startline="2314" endline="2345">OS_BinSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" compoundref="osapi_8c" startline="1992" endline="2027">OS_BinSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" compoundref="osapi_8c" startline="2100" endline="2163">OS_BinSemTake</referencedby>
        <referencedby refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" compoundref="osapi_8c" startline="2180" endline="2249">OS_BinSemTimedWait</referencedby>
        <referencedby refid="osfileapi_8c_1af78f50e6ee6c96959e44130dd7956cf6" compoundref="osfileapi_8c" startline="363" endline="415">OS_close</referencedby>
        <referencedby refid="osfileapi_8c_1a507b9b8bfcd8c5672981ea5625adb738" compoundref="osfileapi_8c" startline="1453" endline="1491">OS_CloseAllFiles</referencedby>
        <referencedby refid="osfileapi_8c_1af79dcc216d9f9cb3660a02f77f432109" compoundref="osfileapi_8c" startline="1394" endline="1443">OS_CloseFileByName</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" compoundref="osapi_8c" startline="2849" endline="2890">OS_CountSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1aa86572454ea836feb25ff46ed5962698" compoundref="osapi_8c" startline="2579" endline="2621">OS_CountSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5823afb4723b533c182c8493e93078ea" compoundref="osapi_8c" startline="2637" endline="2699">OS_CountSemTake</referencedby>
        <referencedby refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" compoundref="osapi_8c" startline="2716" endline="2784">OS_CountSemTimedWait</referencedby>
        <referencedby refid="osfileapi_8c_1a9e28b3226a066b1ea186650ed36b9b81" compoundref="osfileapi_8c" startline="132" endline="232">OS_creat</referencedby>
        <referencedby refid="osfileapi_8c_1a31d211b169bf045379bd2a430246937c" compoundref="osfileapi_8c" startline="1355" endline="1380">OS_FileOpenCheck</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" compoundref="osapi_8c" startline="3263" endline="3296">OS_MutSemGetInfo</referencedby>
        <referencedby refid="osfileapi_8c_1a32b00c0a65370a5dd7fde6157a249980" compoundref="osfileapi_8c" startline="249" endline="350">OS_open</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</referencedby>
        <referencedby refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" compoundref="osapi_8c" startline="1428" endline="1562">OS_QueueGet</referencedby>
        <referencedby refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" compoundref="osapi_8c" startline="1722" endline="1754">OS_QueueGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" compoundref="osapi_8c" startline="1580" endline="1658">OS_QueuePut</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</referencedby>
        <referencedby refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" compoundref="osapi_8c" startline="897" endline="919">OS_TaskExit</referencedby>
        <referencedby refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" compoundref="osapi_8c" startline="1164" endline="1201">OS_TaskGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" compoundref="osapi_8c" startline="1211" endline="1249">OS_TaskInstallDeleteHandler</referencedby>
        <referencedby refid="ostimer_8c_1a64946f4907ed8ecad18243630110461b" compoundref="ostimer_8c" startline="251" endline="368">OS_TimerCreate</referencedby>
        <referencedby refid="ostimer_8c_1a9499f30b634da628293397b1cb0f68b8" compoundref="ostimer_8c" startline="530" endline="563">OS_TimerGetInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_InterruptSafeUnlock</definition>
        <argsstring>(pthread_mutex_t *lock, sigset_t *previous)</argsstring>
        <name>OS_InterruptSafeUnlock</name>
        <param>
          <type>pthread_mutex_t *</type>
          <declname>lock</declname>
        </param>
        <param>
          <type>sigset_t *</type>
          <declname>previous</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="181" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3968" bodyend="3976"/>
        <referencedby refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" compoundref="osapi_8c" startline="1777" endline="1925">OS_BinSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" compoundref="osapi_8c" startline="2042" endline="2084">OS_BinSemFlush</referencedby>
        <referencedby refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" compoundref="osapi_8c" startline="2314" endline="2345">OS_BinSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" compoundref="osapi_8c" startline="1992" endline="2027">OS_BinSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" compoundref="osapi_8c" startline="2100" endline="2163">OS_BinSemTake</referencedby>
        <referencedby refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" compoundref="osapi_8c" startline="2180" endline="2249">OS_BinSemTimedWait</referencedby>
        <referencedby refid="osfileapi_8c_1af78f50e6ee6c96959e44130dd7956cf6" compoundref="osfileapi_8c" startline="363" endline="415">OS_close</referencedby>
        <referencedby refid="osfileapi_8c_1a507b9b8bfcd8c5672981ea5625adb738" compoundref="osfileapi_8c" startline="1453" endline="1491">OS_CloseAllFiles</referencedby>
        <referencedby refid="osfileapi_8c_1af79dcc216d9f9cb3660a02f77f432109" compoundref="osfileapi_8c" startline="1394" endline="1443">OS_CloseFileByName</referencedby>
        <referencedby refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" compoundref="osapi_8c" startline="2365" endline="2513">OS_CountSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" compoundref="osapi_8c" startline="2849" endline="2890">OS_CountSemGetInfo</referencedby>
        <referencedby refid="osapi_8c_1aa86572454ea836feb25ff46ed5962698" compoundref="osapi_8c" startline="2579" endline="2621">OS_CountSemGive</referencedby>
        <referencedby refid="osapi_8c_1a5823afb4723b533c182c8493e93078ea" compoundref="osapi_8c" startline="2637" endline="2699">OS_CountSemTake</referencedby>
        <referencedby refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" compoundref="osapi_8c" startline="2716" endline="2784">OS_CountSemTimedWait</referencedby>
        <referencedby refid="osfileapi_8c_1a9e28b3226a066b1ea186650ed36b9b81" compoundref="osfileapi_8c" startline="132" endline="232">OS_creat</referencedby>
        <referencedby refid="osfileapi_8c_1a31d211b169bf045379bd2a430246937c" compoundref="osfileapi_8c" startline="1355" endline="1380">OS_FileOpenCheck</referencedby>
        <referencedby refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</referencedby>
        <referencedby refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</referencedby>
        <referencedby refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" compoundref="osapi_8c" startline="3263" endline="3296">OS_MutSemGetInfo</referencedby>
        <referencedby refid="osfileapi_8c_1a32b00c0a65370a5dd7fde6157a249980" compoundref="osfileapi_8c" startline="249" endline="350">OS_open</referencedby>
        <referencedby refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" compoundref="osapi_8c" startline="1268" endline="1354">OS_QueueCreate</referencedby>
        <referencedby refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</referencedby>
        <referencedby refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" compoundref="osapi_8c" startline="1428" endline="1562">OS_QueueGet</referencedby>
        <referencedby refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" compoundref="osapi_8c" startline="1722" endline="1754">OS_QueueGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" compoundref="osapi_8c" startline="1580" endline="1658">OS_QueuePut</referencedby>
        <referencedby refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" compoundref="osapi_8c" startline="548" endline="816">OS_TaskCreate</referencedby>
        <referencedby refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</referencedby>
        <referencedby refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" compoundref="osapi_8c" startline="897" endline="919">OS_TaskExit</referencedby>
        <referencedby refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" compoundref="osapi_8c" startline="1164" endline="1201">OS_TaskGetInfo</referencedby>
        <referencedby refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" compoundref="osapi_8c" startline="1211" endline="1249">OS_TaskInstallDeleteHandler</referencedby>
        <referencedby refid="ostimer_8c_1a64946f4907ed8ecad18243630110461b" compoundref="ostimer_8c" startline="251" endline="368">OS_TimerCreate</referencedby>
        <referencedby refid="ostimer_8c_1a9499f30b634da628293397b1cb0f68b8" compoundref="ostimer_8c" startline="530" endline="563">OS_TimerGetInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a8aa71a242c9161df456a3c016b560de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_API_Init</definition>
        <argsstring>(void)</argsstring>
        <name>OS_API_Init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialization of API. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Initialize the tables that the OS API uses to keep track of information about objects</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="191" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="191" bodyend="194"/>
        <references refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" compoundref="osapi_8c" startline="209" endline="400">OS_API_InitEx</references>
        <references refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568aeb0654439881c9c7f0b92c5c187c93a6" compoundref="osapi-os-rtm_8h" startline="7">OS_RUNTIME_MODE_REALTIME</references>
        <referencedby refid="psp__testcase_8c_1a1b5b965abea1df074c75f532b72c803b" compoundref="cfe__psp__start_8c" startline="194" endline="441">PSP_Main</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a2e40885eed9c0da6a1b1424348b8a1ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rek</definition>
        <argsstring>(double test[100])</argsstring>
        <name>rek</name>
        <param>
          <type>double</type>
          <declname>test</declname>
          <array>[100]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="196" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_API_InitEx</definition>
        <argsstring>(OS_RunTimeModeEnum_t RunMode)</argsstring>
        <name>OS_API_InitEx</name>
        <param>
          <type><ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568" kindref="member">OS_RunTimeModeEnum_t</ref></type>
          <declname>Mode</declname>
          <defname>RunMode</defname>
        </param>
        <briefdescription>
<para>Initialization of API. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Initialize the tables that the OS API uses to keep track of information about objects</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Mode</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568" kindref="member">OS_RunTimeModeEnum_t</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="209" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="209" bodyend="400"/>
        <references refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" compoundref="osapi_8c" startline="91">OS_task_record_t::creator</references>
        <references refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" compoundref="osapi_8c" startline="110">OS_queue_record_t::creator</references>
        <references refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" compoundref="osapi_8c" startline="125">OS_bin_sem_record_t::creator</references>
        <references refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" compoundref="osapi_8c" startline="137">OS_count_sem_record_t::creator</references>
        <references refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" compoundref="osapi_8c" startline="148">OS_mut_sem_record_t::creator</references>
        <references refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" compoundref="osapi_8c" startline="94">OS_task_record_t::delete_hook_pointer</references>
        <references refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" compoundref="osapi_8c" startline="88">OS_task_record_t::free</references>
        <references refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" compoundref="osapi_8c" startline="106">OS_queue_record_t::free</references>
        <references refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" compoundref="osapi_8c" startline="121">OS_bin_sem_record_t::free</references>
        <references refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" compoundref="osapi_8c" startline="133">OS_count_sem_record_t::free</references>
        <references refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" compoundref="osapi_8c" startline="145">OS_mut_sem_record_t::free</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" compoundref="osapi_8c" startline="165">OS_bin_sem_table_mut</references>
        <references refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" compoundref="osapi_8c" startline="167">OS_count_sem_table_mut</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi-os-filesys_8h_1a022d0ea3ab78cc8dc824547ab0e27ed0" compoundref="osfileapi_8c" startline="81" endline="106">OS_FS_Init</references>
        <references refid="osapi-os-loader_8h_1a93a1c4391c32c1bc2055f46ef08f1913">OS_ModuleTableInit</references>
        <references refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" compoundref="osapi_8c" startline="166">OS_mut_sem_table_mut</references>
        <references refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" compoundref="osapi_8c" startline="164">OS_queue_table_mut</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" compoundref="osapi_8c" startline="163">OS_task_table_mut</references>
        <references refid="osapi-os-timer_8h_1acb5be5641be9984781462257c689c1d2" compoundref="ostimer_8c" startline="117" endline="161">OS_TimerAPIInit</references>
        <references refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" compoundref="osapi_8c" startline="161">thread_key</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="osapi_8c_1a8aa71a242c9161df456a3c016b560de3" compoundref="osapi_8c" startline="191" endline="194">OS_API_Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ae6a7077fcffe9e80ac43cd096e8aaaec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_ApplicationExit</definition>
        <argsstring>(int32 Status)</argsstring>
        <name>OS_ApplicationExit</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>Status</declname>
        </param>
        <briefdescription>
<para>Exit running application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Indicates that the OSAL application should exit and return control to the OS This is intended for e.g. scripted unit testing where the test needs to end without user intervention. This function does not return</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>This exits the entire process including tasks that have been created. It does not return. Production embedded code typically would not ever call this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="416" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="416" bodyend="426"/>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_DeleteAllObjects</definition>
        <argsstring>(void)</argsstring>
        <name>OS_DeleteAllObjects</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Delete all objects. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para><ref refid="osapi-os-core_8h_1aa3ed28b45f4939d53fa23f12a6873d2b" kindref="member">OS_DeleteAllObjects()</ref> provides a means to clean up all resources allocated by this instance of OSAL. It would typically be used during an orderly shutdown but may also be helpful for testing purposes.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="436" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="436" bodyend="472"/>
        <references refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" compoundref="osapi_8c" startline="1940" endline="1973">OS_BinSemDelete</references>
        <references refid="osapi-os-filesys_8h_1af78f50e6ee6c96959e44130dd7956cf6" compoundref="osfileapi_8c" startline="363" endline="415">OS_close</references>
        <references refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" compoundref="osapi_8c" startline="2528" endline="2561">OS_CountSemDelete</references>
        <references refid="osapi-os-loader_8h_1aab6d4c347646777499192c259e5ee412">OS_ModuleUnload</references>
        <references refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" compoundref="osapi_8c" startline="3062" endline="3097">OS_MutSemDelete</references>
        <references refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" compoundref="osapi_8c" startline="1370" endline="1412">OS_QueueDelete</references>
        <references refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" compoundref="osapi_8c" startline="828" endline="887">OS_TaskDelete</references>
        <references refid="osapi-os-timer_8h_1ab901e145ec75ad3b6c4e1dc15bb71972" compoundref="stubs_8c" startline="118" endline="121">OS_TimerDelete</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1aaf04b6458b5400d3bf12ceb20eb00573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_IdleLoop</definition>
        <argsstring>()</argsstring>
        <name>OS_IdleLoop</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>OS-specific background thread implementation - waits forever for events to occur. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This should be called from the BSP main routine / initial thread after all other board / application initialization has taken place and all other tasks are running.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="484" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="484" bodyend="497"/>
        <references refid="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" compoundref="osapi_8c" startline="170">OS_shutdown</references>
        <references refid="osapi_8c_1a4dd84d180afccc228b587c851c474f47" compoundref="osapi_8c" startline="69">OS_SHUTDOWN_MAGIC_NUMBER</references>
        <referencedby refid="bsp__start_8c_1a0ddf1224851353fc92bfbff6f499fa97" compoundref="bsp__start_8c" startline="54" endline="74">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a316dfd9308c0541dae9951d0516c1496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_ApplicationShutdown</definition>
        <argsstring>(uint8 flag)</argsstring>
        <name>OS_ApplicationShutdown</name>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref></type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Application Shutdown. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para><ref refid="osapi-os-core_8h_1a316dfd9308c0541dae9951d0516c1496" kindref="member">OS_ApplicationShutdown()</ref> provides a means for a user-created thread to request the orderly shutdown of the whole system, such as part of a user-commanded reset command. This is preferred over e.g. ApplicationExit() which exits immediately and does not provide for any means to clean up first.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="509" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="509" bodyend="521"/>
        <references refid="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" compoundref="osapi_8c" startline="170">OS_shutdown</references>
        <references refid="osapi_8c_1a4dd84d180afccc228b587c851c474f47" compoundref="osapi_8c" startline="69">OS_SHUTDOWN_MAGIC_NUMBER</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskCreate</definition>
        <argsstring>(uint32 *task_id, const char *task_name, osal_task_entry function_pointer, uint32 *stack_pointer, uint32 stack_size, uint32 priority, uint32 flags)</argsstring>
        <name>OS_TaskCreate</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>task_name</declname>
        </param>
        <param>
          <type>osal_task_entry</type>
          <declname>function_pointer</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>stack_pointer</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>stack_size</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Create a task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Creates a task and starts running it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>task_id is passed back to the user as the ID. stack_pointer is usually null. the flags parameter is unused.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>task_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Pointer to task ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Task name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">function_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stack_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Pointer to stack </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">stack_size</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Pointer to stack size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">priority</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Pointer to priority </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Flags</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if any of the necessary pointers are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if the name of the task is too long to be copied  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" kindref="member">OS_ERR_INVALID_PRIORITY</ref> if the priority is bad  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref> if there can be no more tasks created  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref> if the name specified is already used by a task  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="548" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="548" bodyend="816"/>
        <references refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" compoundref="osapi_8c" startline="91">OS_task_record_t::creator</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" compoundref="osapi_8c" startline="88">OS_task_record_t::free</references>
        <references refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" compoundref="osapi_8c" startline="61">MAX_PRIORITY</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi-os-core_8h_1afcb708c02f94d8085e70091fa4d05dd2" compoundref="osapi-os-core_8h" startline="58">OS_ENABLE_CORE_MASK</references>
        <references refid="osapi-os-core_8h_1ad78f2c5dcda51411dae88fec12994c07" compoundref="osapi-os-core_8h" startline="59">OS_ENABLE_CORE_OFFSET</references>
        <references refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" compoundref="osapi_8h" startline="106">OS_ERR_INVALID_PRIORITY</references>
        <references refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" compoundref="osapi_8h" startline="102">OS_ERR_NAME_TAKEN</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" compoundref="osapi_8h" startline="101">OS_ERR_NO_FREE_IDS</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" compoundref="osapi_8c" startline="3633" endline="3651">OS_FindCreator</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" compoundref="osapi_8c" startline="3804" endline="3886">OS_PriorityRemap</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" compoundref="osapi_8c" startline="163">OS_task_table_mut</references>
        <references refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" compoundref="osapi_8c" startline="93">OS_task_record_t::priority</references>
        <references refid="osapi_8c_1a668c19646d5c270107d0842e50cf8746">pthread_setname_np</references>
        <references refid="osapi_8c_1a8b3dc1c5c1a165d6143b1dce950e8266" compoundref="osapi_8c" startline="63">PTHREAD_STACK_MIN</references>
        <references refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" compoundref="osapi_8c" startline="92">OS_task_record_t::stack_size</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__apps_8h_1abc4f1d3a1eca4b43fea3e872b422c260" compoundref="cfe__es__apps_8c" startline="453" endline="760">CFE_ES_AppCreate</referencedby>
        <referencedby refid="cfe__es__api_8c_1a64768543df91e7856b4356fdc70ebe8c" compoundref="cfe__es__api_8c" startline="969" endline="1090">CFE_ES_CreateChildTask</referencedby>
        <referencedby refid="cfe__es__start_8h_1a6afd1d3681c497dfd883bcf17c87bf2a" compoundref="cfe__es__start_8c" startline="782" endline="997">CFE_ES_CreateObjects</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskDelete</definition>
        <argsstring>(uint32 task_id)</argsstring>
        <name>OS_TaskDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Delete task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified Task and removes it from the OS_task_table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Task ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="828" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="828" bodyend="887"/>
        <references refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" compoundref="osapi_8c" startline="91">OS_task_record_t::creator</references>
        <references refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" compoundref="osapi_8c" startline="94">OS_task_record_t::delete_hook_pointer</references>
        <references refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" compoundref="osapi_8c" startline="88">OS_task_record_t::free</references>
        <references refid="struct_o_s__task__record__t_1a734a3f104a14fd52a0fa0d9adcfd8ba6" compoundref="osapi_8c" startline="89">OS_task_record_t::id</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" compoundref="osapi_8c" startline="163">OS_task_table_mut</references>
        <references refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" compoundref="osapi_8c" startline="93">OS_task_record_t::priority</references>
        <references refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" compoundref="osapi_8c" startline="92">OS_task_record_t::stack_size</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="cfe__es__apps_8h_1abbbbd9de96d9c0d60415d558ef241e49" compoundref="cfe__es__apps_8c" startline="1235" endline="1346">CFE_ES_CleanUpApp</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="cfe__es__api_8c_1a88414a37a5817b514c16fe5e890bc702" compoundref="cfe__es__api_8c" startline="1161" endline="1262">CFE_ES_DeleteChildTask</referencedby>
        <referencedby refid="psp__testcase_8c_1a2b448f8e4c04b580d40f4aab683174ef" compoundref="cfe__psp__start_8c" startline="501" endline="533">CFE_PSP_DeleteOSResources</referencedby>
        <referencedby refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" compoundref="osapi_8c" startline="436" endline="472">OS_DeleteAllObjects</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_TaskExit</definition>
        <argsstring>()</argsstring>
        <name>OS_TaskExit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Exit task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Exits the calling task and removes it from the OS_task_table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="897" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="897" bodyend="919"/>
        <references refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" compoundref="osapi_8c" startline="91">OS_task_record_t::creator</references>
        <references refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" compoundref="osapi_8c" startline="94">OS_task_record_t::delete_hook_pointer</references>
        <references refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" compoundref="osapi_8c" startline="88">OS_task_record_t::free</references>
        <references refid="struct_o_s__task__record__t_1a734a3f104a14fd52a0fa0d9adcfd8ba6" compoundref="osapi_8c" startline="89">OS_task_record_t::id</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" compoundref="osapi_8c" startline="163">OS_task_table_mut</references>
        <references refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" compoundref="osapi_8c" startline="1088" endline="1101">OS_TaskGetId</references>
        <references refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" compoundref="osapi_8c" startline="93">OS_task_record_t::priority</references>
        <references refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" compoundref="osapi_8c" startline="92">OS_task_record_t::stack_size</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325" compoundref="cfe__es__api_8c" startline="434" endline="531">CFE_ES_ExitApp</referencedby>
        <referencedby refid="cfe__es__api_8c_1a263795095b7eda1070864d75add8d91a" compoundref="cfe__es__api_8c" startline="1270" endline="1327">CFE_ES_ExitChildTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a8f78bce95227e4e99fe6f0378835260e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskDelay</definition>
        <argsstring>(uint32 millisecond)</argsstring>
        <name>OS_TaskDelay</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>millisecond</declname>
        </param>
        <briefdescription>
<para>Delay task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Delay a task for specified amount of milliseconds</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">millisecond</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Time in milliseconds</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="928" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="928" bodyend="960"/>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <referencedby refid="cfe__es__start_8c_1a710dce8e127b735e4b18539015a67327" compoundref="cfe__es__start_8c" startline="1009" endline="1042">CFE_ES_ApplicationSyncDelay</referencedby>
        <referencedby refid="cfe__es__apps_8h_1abbbbd9de96d9c0d60415d558ef241e49" compoundref="cfe__es__apps_8c" startline="1235" endline="1346">CFE_ES_CleanUpApp</referencedby>
        <referencedby refid="cfe__es__start_8h_1a6afd1d3681c497dfd883bcf17c87bf2a" compoundref="cfe__es__start_8c" startline="782" endline="997">CFE_ES_CreateObjects</referencedby>
        <referencedby refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325" compoundref="cfe__es__api_8c" startline="434" endline="531">CFE_ES_ExitApp</referencedby>
        <referencedby refid="cfe__es__start_8h_1af6e87c39ad6ec5d336254c3d8e03edb0" compoundref="cfe__es__start_8c" startline="525" endline="770">CFE_ES_InitializeFileSystems</referencedby>
        <referencedby refid="cfe__es__start_8c_1a80b9e43e0efa587a70bd4707fee4f5f8" compoundref="cfe__es__start_8c" startline="164" endline="292">CFE_ES_Main</referencedby>
        <referencedby refid="cfe__es__perf_8c_1a25f95102b7199613a34f8ac391e2b39d" compoundref="cfe__es__perf_8c" startline="310" endline="383">CFE_ES_PerfLogDump</referencedby>
        <referencedby refid="cfe__es__start_8h_1a75949b562d3835426bc3a44192958c00" compoundref="cfe__es__start_8c" startline="302" endline="517">CFE_ES_SetupResetVariables</referencedby>
        <referencedby refid="cfe__es__shell_8h_1a1658383f251f6a3ab51105e11e7cd6a1" compoundref="cfe__es__shell_8c" startline="79" endline="276">CFE_ES_ShellOutputCommand</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskSetPriority</definition>
        <argsstring>(uint32 task_id, uint32 new_priority)</argsstring>
        <name>OS_TaskSetPriority</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>task_id</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>new_priority</declname>
        </param>
        <briefdescription>
<para>Set task priority. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Sets the given task to a new priority</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Task ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_priority</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Priority</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" kindref="member">OS_ERR_INVALID_PRIORITY</ref> if the priority is greater than the max allowed  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="973" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="973" bodyend="1017"/>
        <references refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" compoundref="osapi_8c" startline="61">MAX_PRIORITY</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" compoundref="osapi_8h" startline="106">OS_ERR_INVALID_PRIORITY</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" compoundref="osapi_8c" startline="3804" endline="3886">OS_PriorityRemap</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" compoundref="osapi_8c" startline="93">OS_task_record_t::priority</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a2712303c67dda79b3f382101f2d5e547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskRegister</definition>
        <argsstring>(void)</argsstring>
        <name>OS_TaskRegister</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Register task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Registers the calling task id with the task by adding the var to the tcb It searches the OS_task_table to find the task_id corresponding to the tcb_id</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1030" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1030" bodyend="1077"/>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" compoundref="osapi_8c" startline="161">thread_key</references>
        <referencedby refid="cfe__es__api_8c_1a426ef8e1796ccebba16c63c8e86fb842" compoundref="cfe__es__api_8c" startline="705" endline="739">CFE_ES_RegisterApp</referencedby>
        <referencedby refid="cfe__es__api_8c_1a1e008c905bb89083293355b71ce4bc2d" compoundref="cfe__es__api_8c" startline="1100" endline="1134">CFE_ES_RegisterChildTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>uint32 OS_TaskGetId</definition>
        <argsstring>(void)</argsstring>
        <name>OS_TaskGetId</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get task id. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns the #defined task id of the calling task</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>The OS_task_key is initialized by the task switch if AND ONLY IF the OS_task_key has been registered via OS_TaskRegister(..). If this is not called prior to this call, the value will be old and wrong.</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of calling task </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1088" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1088" bodyend="1101"/>
        <references refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" compoundref="osapi_8c" startline="161">thread_key</references>
        <referencedby refid="cfe__es__api_8c_1a64768543df91e7856b4356fdc70ebe8c" compoundref="cfe__es__api_8c" startline="969" endline="1090">CFE_ES_CreateChildTask</referencedby>
        <referencedby refid="cfe__es__api_8c_1a263795095b7eda1070864d75add8d91a" compoundref="cfe__es__api_8c" startline="1270" endline="1327">CFE_ES_ExitChildTask</referencedby>
        <referencedby refid="cfe__es__api_8c_1a76ee880d8ee4f632420507997779c1aa" compoundref="cfe__es__api_8c" startline="784" endline="810">CFE_ES_GetAppID</referencedby>
        <referencedby refid="cfe__es__global_8h_1aa830ec3e1a00f307e702443ecd5ef251" compoundref="cfe__es__api_8c" startline="1788" endline="1818">CFE_ES_GetAppIDInternal</referencedby>
        <referencedby refid="cfe__es__api_8c_1a2ae693e0bf2c4c430f3a852223cce6d6" compoundref="cfe__es__api_8c" startline="1142" endline="1151">CFE_ES_IncrementTaskCounter</referencedby>
        <referencedby refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" compoundref="cfe__sb__api_8c" startline="170" endline="274">CFE_SB_CreatePipe</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a3fcb0e77aacf844bdbefdc2b77b2d9c1" compoundref="cfe__sb__api_8c" startline="345" endline="455">CFE_SB_DeletePipeFull</referencedby>
        <referencedby refid="cfe__sb__api_8c_1abd1d841a3e64941a3ef460572b00f7e4" compoundref="cfe__sb__api_8c" startline="1593" endline="1645">CFE_SB_GetLastSenderId</referencedby>
        <referencedby refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" compoundref="cfe__sb__api_8c" startline="1449" endline="1566">CFE_SB_RcvMsg</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a265af9ed654b1d0fcfaedead0c1b5257" compoundref="cfe__sb__api_8c" startline="1122" endline="1421">CFE_SB_SendMsgFull</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1ac5d1727dd8072b5548cb7b7e028fbe09" compoundref="cfe__sb__api_8c" startline="606" endline="768">CFE_SB_SubscribeFull</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a48e6859da8820f497b806df05027bf1c" compoundref="cfe__sb__api_8c" startline="903" endline="1023">CFE_SB_UnsubscribeFull</referencedby>
        <referencedby refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" compoundref="osapi_8c" startline="897" endline="919">OS_TaskExit</referencedby>
        <referencedby refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" compoundref="osapi_8c" startline="1211" endline="1249">OS_TaskInstallDeleteHandler</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a05df84f4e2a6f26b0985fd29941b5a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskGetIdByName</definition>
        <argsstring>(uint32 *task_id, const char *task_name)</argsstring>
        <name>OS_TaskGetIdByName</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>task_name</declname>
        </param>
        <briefdescription>
<para>Get task id by name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Sets the given task to a new priority</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>task_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Task ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">task_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Task name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if th ename to found is too long to begin with  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref> if the name wasn&apos;t found in the table  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1114" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1114" bodyend="1150"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" compoundref="osapi_8h" startline="104">OS_ERR_NAME_NOT_FOUND</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskGetInfo</definition>
        <argsstring>(uint32 task_id, OS_task_prop_t *task_prop)</argsstring>
        <name>OS_TaskGetInfo</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>task_id</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s__task__prop__t" kindref="compound">OS_task_prop_t</ref> *</type>
          <defname>task_prop</defname>
        </param>
        <briefdescription>
<para>Get task info. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will pass back a pointer to structure that contains all of the relevant info (creator, stack size, priority, name) about the specified task.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">task_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Task ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>task_prop <ref refid="struct_o_s__task__prop__t" kindref="compound">OS_task_prop_t</ref> Task properties</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID passed to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1164" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1164" bodyend="1201"/>
        <references refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" compoundref="osapi_8c" startline="91">OS_task_record_t::creator</references>
        <references refid="struct_o_s__task__record__t_1addf7a5e5390a89c77a2dff039554e66f" compoundref="osapi_8c" startline="90">OS_task_record_t::name</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" compoundref="osapi_8c" startline="163">OS_task_table_mut</references>
        <references refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" compoundref="osapi_8c" startline="93">OS_task_record_t::priority</references>
        <references refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" compoundref="osapi_8c" startline="92">OS_task_record_t::stack_size</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__shell_8h_1ad0c197c0612882783c893da9f515e984" compoundref="cfe__es__shell_8c" startline="397" endline="536">CFE_ES_ListResources</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a0c82ea90010f7b9ff5637136b04f32df" compoundref="cfe__es__apps_8c" startline="1813" endline="1890">CFE_ES_ListResourcesDebug</referencedby>
        <referencedby refid="cfe__psp__exception_8c_1ad400a9522f228aa83489fabf58bbc8c0" compoundref="cfe__es__api_8c" startline="1904" endline="2024">CFE_ES_ProcessCoreException</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_TaskInstallDeleteHandler</definition>
        <argsstring>(osal_task_entry function_pointer)</argsstring>
        <name>OS_TaskInstallDeleteHandler</name>
        <param>
          <type>osal_task_entry</type>
          <declname>function_pointer</declname>
        </param>
        <briefdescription>
<para>Delete task handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Installs a handler for when the task is deleted.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">function_pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to task function</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1211" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1211" bodyend="1249"/>
        <references refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" compoundref="osapi_8c" startline="94">OS_task_record_t::delete_hook_pointer</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" compoundref="osapi_8c" startline="163">OS_task_table_mut</references>
        <references refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" compoundref="osapi_8c" startline="1088" endline="1101">OS_TaskGetId</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueueCreate</definition>
        <argsstring>(uint32 *queue_id, const char *queue_name, uint32 queue_depth, uint32 data_size, uint32 flags)</argsstring>
        <name>OS_QueueCreate</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>queue_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>queue_name</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>queue_depth</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>data_size</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Create queue. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Create a message queue which can be refered to by name or ID</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>queue_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queue_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queue_depth</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue depth </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_size</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Flags</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if th ename to found is too long to begin with  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref> if there are already the max queues created  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref> if the name is already being used on another queue  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1268" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1268" bodyend="1354"/>
        <references refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" compoundref="osapi_8c" startline="110">OS_queue_record_t::creator</references>
        <references refid="struct_o_s__queue__record__t_1af87577203ee088e6c684e79d590edcb2" compoundref="osapi_8c" startline="115">OS_queue_record_t::depth</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" compoundref="osapi_8c" startline="106">OS_queue_record_t::free</references>
        <references refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" compoundref="osapi_8c" startline="112">OS_queue_record_t::head</references>
        <references refid="struct_o_s__queue__record__t_1a4c9c635f5619d65fc86525869bc1d23c" compoundref="osapi_8c" startline="108">OS_queue_record_t::max_size</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" compoundref="osapi_8h" startline="102">OS_ERR_NAME_TAKEN</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" compoundref="osapi_8h" startline="101">OS_ERR_NO_FREE_IDS</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" compoundref="osapi_8c" startline="3633" endline="3651">OS_FindCreator</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" compoundref="osapi_8h" startline="98">OS_QUEUE_INVALID_SIZE</references>
        <references refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" compoundref="osapi_8c" startline="164">OS_queue_table_mut</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" compoundref="osapi_8c" startline="113">OS_queue_record_t::tail</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="struct_o_s__queue__record__t_1ad0562998b3f595d2f140a94ff834d060" compoundref="osapi_8c" startline="114">OS_queue_record_t::width</references>
        <referencedby refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" compoundref="cfe__sb__api_8c" startline="170" endline="274">CFE_SB_CreatePipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a15f67f089080b67931eb4d91564b367e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueueDelete</definition>
        <argsstring>(uint32 queue_id)</argsstring>
        <name>OS_QueueDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>queue_id</declname>
        </param>
        <briefdescription>
<para>Delete queue. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified message queue.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If There are messages on the queue, they will be lost and any subsequent calls to QueueGet or QueuePut to this queue will result in errors</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queue_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given to it is invalid  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1370" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1370" bodyend="1412"/>
        <references refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" compoundref="osapi_8c" startline="110">OS_queue_record_t::creator</references>
        <references refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" compoundref="osapi_8c" startline="106">OS_queue_record_t::free</references>
        <references refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" compoundref="osapi_8c" startline="112">OS_queue_record_t::head</references>
        <references refid="struct_o_s__queue__record__t_1a4c9c635f5619d65fc86525869bc1d23c" compoundref="osapi_8c" startline="108">OS_queue_record_t::max_size</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" compoundref="osapi_8c" startline="164">OS_queue_table_mut</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" compoundref="osapi_8c" startline="113">OS_queue_record_t::tail</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="cfe__es__apps_8h_1abbbbd9de96d9c0d60415d558ef241e49" compoundref="cfe__es__apps_8c" startline="1235" endline="1346">CFE_ES_CleanUpApp</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="psp__testcase_8c_1a2b448f8e4c04b580d40f4aab683174ef" compoundref="cfe__psp__start_8c" startline="501" endline="533">CFE_PSP_DeleteOSResources</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a3fcb0e77aacf844bdbefdc2b77b2d9c1" compoundref="cfe__sb__api_8c" startline="345" endline="455">CFE_SB_DeletePipeFull</referencedby>
        <referencedby refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" compoundref="osapi_8c" startline="436" endline="472">OS_DeleteAllObjects</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueueGet</definition>
        <argsstring>(uint32 queue_id, void *data, uint32 size, uint32 *size_copied, int32 timeout)</argsstring>
        <name>OS_QueueGet</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>queue_id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>size_copied</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Queue get. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Receive a message on a message queue. Will pend or timeout on the receive.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queue_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>data <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Pointer to data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_size</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Size of data buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>size_copied <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Size copied </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">timeout</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref> timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the given ID does not exist  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a649aefc48b25fa31f54b59fe16fc501f" kindref="member">OS_QUEUE_EMPTY</ref> if the Queue has no messages on it to be recieved  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a11a8fcc6118adb5c801e6b84739af6a0" kindref="member">OS_QUEUE_TIMEOUT</ref> if the timeout was OS_PEND and the time expired  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" kindref="member">OS_QUEUE_INVALID_SIZE</ref> if the size of the buffer passed in is not big enough for the maximum size messaged  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1428" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1428" bodyend="1562"/>
        <references refid="struct_o_s__queue__data__t_1af5941887a7ec6d0551fcee8b22720b7c" compoundref="osapi_8c" startline="101">OS_queue_data_t::buffer</references>
        <references refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" compoundref="osapi_8c" startline="112">OS_queue_record_t::head</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a4a2422824f9b38df781a24d5905fe0ce" compoundref="osapi_8h" startline="119">OS_CHECK</references>
        <references refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" compoundref="osapi_8c" startline="3672" endline="3686">OS_CompAbsDelayTime</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1ab2b5288ed3f6994990eff6125202d4dd" compoundref="osapi_8h" startline="118">OS_PEND</references>
        <references refid="osapi_8h_1a649aefc48b25fa31f54b59fe16fc501f" compoundref="osapi_8h" startline="95">OS_QUEUE_EMPTY</references>
        <references refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" compoundref="osapi_8h" startline="98">OS_QUEUE_INVALID_SIZE</references>
        <references refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" compoundref="osapi_8c" startline="164">OS_queue_table_mut</references>
        <references refid="osapi_8h_1a11a8fcc6118adb5c801e6b84739af6a0" compoundref="osapi_8h" startline="97">OS_QUEUE_TIMEOUT</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="struct_o_s__queue__record__t_1aa9bd150b576c2fa02661cfc8882d7506" compoundref="osapi_8c" startline="107">OS_queue_record_t::qData</references>
        <references refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" compoundref="osapi_8c" startline="100">OS_queue_data_t::size</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__sb__priv_8h_1afa4e55746501266c32887860c2d19e0b" compoundref="cfe__sb__api_8c" startline="1979" endline="2042">CFE_SB_ReadQueue</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a514794c514fed167939e3bc870d50d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueuePut</definition>
        <argsstring>(uint32 queue_id, const void *data, uint32 size, uint32 flags)</argsstring>
        <name>OS_QueuePut</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>queue_id</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Queue put. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Put a message on a message queue.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>The flags parameter is not used. The message put is always configured to immediately return an error if the receiving message queue is full.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queue_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Pointer to data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data_size</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Data size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">flags</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Flags</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="5" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the queue id passed in is not a valid queue  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a1bb3ced7e39cd5e1ca6d4c45f153cbc2" kindref="member">OS_QUEUE_FULL</ref> if the queue cannot accept another message  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1580" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1580" bodyend="1658"/>
        <references refid="struct_o_s__queue__data__t_1af5941887a7ec6d0551fcee8b22720b7c" compoundref="osapi_8c" startline="101">OS_queue_data_t::buffer</references>
        <references refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" compoundref="osapi_8c" startline="112">OS_queue_record_t::head</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a1bb3ced7e39cd5e1ca6d4c45f153cbc2" compoundref="osapi_8h" startline="96">OS_QUEUE_FULL</references>
        <references refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" compoundref="osapi_8h" startline="98">OS_QUEUE_INVALID_SIZE</references>
        <references refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" compoundref="osapi_8c" startline="164">OS_queue_table_mut</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="struct_o_s__queue__record__t_1aa9bd150b576c2fa02661cfc8882d7506" compoundref="osapi_8c" startline="107">OS_queue_record_t::qData</references>
        <references refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" compoundref="osapi_8c" startline="100">OS_queue_data_t::size</references>
        <references refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" compoundref="osapi_8c" startline="113">OS_queue_record_t::tail</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__sb__priv_8h_1a265af9ed654b1d0fcfaedead0c1b5257" compoundref="cfe__sb__api_8c" startline="1122" endline="1421">CFE_SB_SendMsgFull</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ab5b6f35ad093859012d4d4d482cdfb9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueueGetIdByName</definition>
        <argsstring>(uint32 *queue_id, const char *queue_name)</argsstring>
        <name>OS_QueueGetIdByName</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>queue_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>queue_name</declname>
        </param>
        <briefdescription>
<para>Get queue ID by name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function tries to find a queue Id given the name of the queue. The id of the queue is passed back in queue_id</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>queue_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">queue_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Queue name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if th ename to found is too long to begin with  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref> the name was not found in the table  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1674" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1674" bodyend="1710"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" compoundref="osapi_8h" startline="104">OS_ERR_NAME_NOT_FOUND</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_QueueGetInfo</definition>
        <argsstring>(uint32 queue_id, OS_queue_prop_t *queue_prop)</argsstring>
        <name>OS_QueueGetInfo</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>queue_id</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s__queue__prop__t" kindref="compound">OS_queue_prop_t</ref> *</type>
          <declname>queue_prop</declname>
        </param>
        <briefdescription>
<para>Get queue info. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will pass back a pointer to structure that contains all of the relevant info (name and creator) about the specified queue.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">queue_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Queue ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>queue_prop <ref refid="struct_o_s__queue__prop__t" kindref="compound">OS_queue_prop_t</ref> Queue properties struct pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the ID given is not a valid queue  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1722" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1722" bodyend="1754"/>
        <references refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" compoundref="osapi_8c" startline="110">OS_queue_record_t::creator</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" compoundref="osapi_8c" startline="164">OS_queue_table_mut</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="cfe__es__shell_8h_1ad0c197c0612882783c893da9f515e984" compoundref="cfe__es__shell_8c" startline="397" endline="536">CFE_ES_ListResources</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a0c82ea90010f7b9ff5637136b04f32df" compoundref="cfe__es__apps_8c" startline="1813" endline="1890">CFE_ES_ListResourcesDebug</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemCreate</definition>
        <argsstring>(uint32 *sem_id, const char *sem_name, uint32 sem_initial_value, uint32 options)</argsstring>
        <name>OS_BinSemCreate</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sem_name</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_initial_value</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Create binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Creates a binary semaphore with initial value specified by sem_initial_value and name specified by sem_name. sem_id will be returned to the caller</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>options is an unused parameter</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>sem_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_initial_value</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore initial value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore size</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if th ename to found is too long to begin with  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref> if there are already the max queues created  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref> if the name is already being used on another queue  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> if the OS call failed  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1777" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1777" bodyend="1925"/>
        <references refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" compoundref="osapi_8c" startline="125">OS_bin_sem_record_t::creator</references>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" compoundref="osapi_8c" startline="121">OS_bin_sem_record_t::free</references>
        <references refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" compoundref="osapi_8c" startline="126">OS_bin_sem_record_t::max_value</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" compoundref="osapi_8c" startline="165">OS_bin_sem_table_mut</references>
        <references refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" compoundref="osapi_8h" startline="102">OS_ERR_NAME_TAKEN</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" compoundref="osapi_8h" startline="101">OS_ERR_NO_FREE_IDS</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" compoundref="osapi_8c" startline="3633" endline="3651">OS_FindCreator</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__time__utils_8h_1ac75193e9814f7dd8dfd42f15106e08f0" compoundref="cfe__time__task_8c" startline="236" endline="464">CFE_TIME_TaskInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemDelete</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_BinSemDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Delete binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified Binary Semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>Since we can&apos;t delete a semaphore which is currently locked by some task (as it may ber crucial to completing the task), the semaphore must be full to allow deletion.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1940" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1940" bodyend="1973"/>
        <references refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" compoundref="osapi_8c" startline="125">OS_bin_sem_record_t::creator</references>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" compoundref="osapi_8c" startline="121">OS_bin_sem_record_t::free</references>
        <references refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" compoundref="osapi_8c" startline="126">OS_bin_sem_record_t::max_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" compoundref="osapi_8c" startline="165">OS_bin_sem_table_mut</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="cfe__es__apps_8h_1abbbbd9de96d9c0d60415d558ef241e49" compoundref="cfe__es__apps_8c" startline="1235" endline="1346">CFE_ES_CleanUpApp</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="psp__testcase_8c_1a2b448f8e4c04b580d40f4aab683174ef" compoundref="cfe__psp__start_8c" startline="501" endline="533">CFE_PSP_DeleteOSResources</referencedby>
        <referencedby refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" compoundref="osapi_8c" startline="436" endline="472">OS_DeleteAllObjects</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemGive</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_BinSemGive</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Give binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The function unlocks the semaphore referenced by sem_id by performing a semaphore unlock operation on that semaphore.If the semaphore value resulting from this operation is positive, then no threads were blocked waiting for the semaphore to become unlocked; the semaphore value is simply incremented for this semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="1992" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="1992" bodyend="2027"/>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__psp__start_8c_1a1f6506551e709bd6b8388990e1856c90" compoundref="cfe__time__tone_8c" startline="1173" endline="1289">CFE_TIME_Local1HzISR</referencedby>
        <referencedby refid="cfe__time__utils_8h_1aa21fdd5c34ae7b696afa6219d6d1e23c" compoundref="cfe__time__tone_8c" startline="1010" endline="1113">CFE_TIME_Tone1HzISR</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemFlush</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_BinSemFlush</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Flush binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The function unblocks all tasks pending on the specified semaphore. However, this function does not change the state of the semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2042" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2042" bodyend="2084"/>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" compoundref="osapi_8c" startline="126">OS_bin_sem_record_t::max_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemTake</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_BinSemTake</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Take binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The locks the semaphore referenced by sem_id by performing a semaphore lock operation on that semaphore.If the semaphore value is currently zero, then the calling thread shall not return from the call until it either locks the semaphore or the call is interrupted by a signal.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2100" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2100" bodyend="2163"/>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__time__utils_8h_1a2b598bd57056daa9b51b637e2a9799a1" compoundref="cfe__time__tone_8c" startline="1302" endline="1363">CFE_TIME_Local1HzTask</referencedby>
        <referencedby refid="cfe__time__utils_8h_1aae8daa55ed3bbdbc012c5cc4bc4ff1c8" compoundref="cfe__time__tone_8c" startline="1124" endline="1164">CFE_TIME_Tone1HzTask</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemTimedWait</definition>
        <argsstring>(uint32 sem_id, uint32 msecs)</argsstring>
        <name>OS_BinSemTimedWait</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>msecs</declname>
        </param>
        <briefdescription>
<para>Timed wait binary semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The function locks the semaphore referenced by sem_id . However, if the semaphore cannot be locked without waiting for another process or thread to unlock the semaphore , this wait shall be terminated when the specified timeout ,msecs, expires.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msecs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Milliseconds to wait</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" kindref="member">OS_SEM_TIMEOUT</ref> if semaphore was not relinquished in time  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2180" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2180" bodyend="2249"/>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" compoundref="osapi_8c" startline="3672" endline="3686">OS_CompAbsDelayTime</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" compoundref="osapi_8h" startline="94">OS_SEM_TIMEOUT</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ae1f491ab305fd4d1386f20a4177cd2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemGetIdByName</definition>
        <argsstring>(uint32 *sem_id, const char *sem_name)</argsstring>
        <name>OS_BinSemGetIdByName</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sem_name</declname>
        </param>
        <briefdescription>
<para>Get binary semaphore id by name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function tries to find a binary sem Id given the name of a bin_sem The id is returned through sem_id</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>sem_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> is semid or sem_name are NULL pointers  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if the name given is to long to have been stored  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref> if the name was not found in the table  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2262" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2262" bodyend="2301"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" compoundref="osapi_8h" startline="104">OS_ERR_NAME_NOT_FOUND</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_BinSemGetInfo</definition>
        <argsstring>(uint32 sem_id, OS_bin_sem_prop_t *bin_prop)</argsstring>
        <name>OS_BinSemGetInfo</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s__bin__sem__prop__t" kindref="compound">OS_bin_sem_prop_t</ref> *</type>
          <declname>bin_prop</declname>
        </param>
        <briefdescription>
<para>Get binary semaphore info. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will pass back a pointer to structure that contains all of the relevant info( name and creator) about the specified binary semaphore. </para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>bin_prop <ref refid="struct_o_s__bin__sem__prop__t" kindref="compound">OS_bin_sem_prop_t</ref> Semphore properties struct pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a binary semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the bin_prop pointer is null  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2314" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2314" bodyend="2345"/>
        <references refid="struct_o_s__bin__sem__prop__t_1ac018a025a8a87840c03b20f42901fb3c" compoundref="osapi-os-core_8h" startline="99">OS_bin_sem_prop_t::creator</references>
        <references refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" compoundref="osapi_8c" startline="125">OS_bin_sem_record_t::creator</references>
        <references refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" compoundref="osapi_8c" startline="127">OS_bin_sem_record_t::current_value</references>
        <references refid="struct_o_s__bin__sem__record__t_1a2e6f79f675357b1a4dd3a048997e18f9" compoundref="osapi_8c" startline="124">OS_bin_sem_record_t::name</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" compoundref="osapi_8c" startline="165">OS_bin_sem_table_mut</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="cfe__es__shell_8h_1ad0c197c0612882783c893da9f515e984" compoundref="cfe__es__shell_8c" startline="397" endline="536">CFE_ES_ListResources</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a0c82ea90010f7b9ff5637136b04f32df" compoundref="cfe__es__apps_8c" startline="1813" endline="1890">CFE_ES_ListResourcesDebug</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemCreate</definition>
        <argsstring>(uint32 *sem_id, const char *sem_name, uint32 sem_initial_value, uint32 options)</argsstring>
        <name>OS_CountSemCreate</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sem_name</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_initial_value</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Create counting semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Creates a counting semaphore with initial value specified by sem_initial_value and name specified by sem_name. sem_id will be returned to the caller</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>options is an unused parameter</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>sem_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_initial_value</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore initial value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore size</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if th ename to found is too long to begin with  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref> if there are already the max queues created  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref> if the name is already being used on another queue  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> if the OS call failed  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2365" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2365" bodyend="2513"/>
        <references refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" compoundref="osapi_8c" startline="137">OS_count_sem_record_t::creator</references>
        <references refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" compoundref="osapi_8c" startline="139">OS_count_sem_record_t::current_value</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" compoundref="osapi_8c" startline="133">OS_count_sem_record_t::free</references>
        <references refid="struct_o_s__count__sem__record__t_1a27e7e20c856b25879a5f5b557f1b76ed" compoundref="osapi_8c" startline="138">OS_count_sem_record_t::max_value</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" compoundref="osapi_8c" startline="167">OS_count_sem_table_mut</references>
        <references refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" compoundref="osapi_8h" startline="102">OS_ERR_NAME_TAKEN</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" compoundref="osapi_8h" startline="101">OS_ERR_NO_FREE_IDS</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" compoundref="osapi_8c" startline="3633" endline="3651">OS_FindCreator</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1aaca29cda15d375e04dd23c099e652577" compoundref="osapi_8h" startline="107">OS_INVALID_SEM_VALUE</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="cfe__psp__start_8c_1a2961bb23950351c6b10976674c27ddaf" compoundref="cfe__psp__start_8c" startline="58">SEM_VALUE_MAX</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemDelete</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_CountSemDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Delete counting semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified counting Semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>Since we can&apos;t delete a semaphore which is currently locked by some task (as it may ber crucial to completing the task), the semaphore must be full to allow deletion.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a counting semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2528" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2528" bodyend="2561"/>
        <references refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" compoundref="osapi_8c" startline="137">OS_count_sem_record_t::creator</references>
        <references refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" compoundref="osapi_8c" startline="139">OS_count_sem_record_t::current_value</references>
        <references refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" compoundref="osapi_8c" startline="133">OS_count_sem_record_t::free</references>
        <references refid="struct_o_s__count__sem__record__t_1a27e7e20c856b25879a5f5b557f1b76ed" compoundref="osapi_8c" startline="138">OS_count_sem_record_t::max_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" compoundref="osapi_8c" startline="167">OS_count_sem_table_mut</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="cfe__es__apps_8h_1abbbbd9de96d9c0d60415d558ef241e49" compoundref="cfe__es__apps_8c" startline="1235" endline="1346">CFE_ES_CleanUpApp</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="psp__testcase_8c_1a2b448f8e4c04b580d40f4aab683174ef" compoundref="cfe__psp__start_8c" startline="501" endline="533">CFE_PSP_DeleteOSResources</referencedby>
        <referencedby refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" compoundref="osapi_8c" startline="436" endline="472">OS_DeleteAllObjects</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1aa86572454ea836feb25ff46ed5962698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemGive</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_CountSemGive</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Give counting semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The function unlocks the semaphore referenced by sem_id by performing a semaphore unlock operation on that semaphore.If the semaphore value resulting from this operation is positive, then no threads were blocked waiting for the semaphore to become unlocked; the semaphore value is simply incremented for this semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a counting semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2579" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2579" bodyend="2621"/>
        <references refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" compoundref="osapi_8c" startline="139">OS_count_sem_record_t::current_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a5823afb4723b533c182c8493e93078ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemTake</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_CountSemTake</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Take counting semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The locks the semaphore referenced by sem_id by performing a semaphore lock operation on that semaphore.If the semaphore value is currently zero, then the calling thread shall not return from the call until it either locks the semaphore or the call is interrupted by a signal.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a counting semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2637" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2637" bodyend="2699"/>
        <references refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" compoundref="osapi_8c" startline="139">OS_count_sem_record_t::current_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemTimedWait</definition>
        <argsstring>(uint32 sem_id, uint32 msecs)</argsstring>
        <name>OS_CountSemTimedWait</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>msecs</declname>
        </param>
        <briefdescription>
<para>Timed wait counting semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The function locks the semaphore referenced by sem_id . However, if the semaphore cannot be locked without waiting for another process or thread to unlock the semaphore , this wait shall be terminated when the specified timeout ,msecs, expires.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msecs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Milliseconds to wait</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" kindref="member">OS_SEM_TIMEOUT</ref> if semaphore was not relinquished in time  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a counting semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2716" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2716" bodyend="2784"/>
        <references refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" compoundref="osapi_8c" startline="139">OS_count_sem_record_t::current_value</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" compoundref="osapi_8c" startline="3672" endline="3686">OS_CompAbsDelayTime</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" compoundref="osapi_8h" startline="94">OS_SEM_TIMEOUT</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a63acea7d9ce7e35a48486cd46398f718" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemGetIdByName</definition>
        <argsstring>(uint32 *sem_id, const char *sem_name)</argsstring>
        <name>OS_CountSemGetIdByName</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sem_name</declname>
        </param>
        <briefdescription>
<para>Get counting semaphore id by name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function tries to find a counting sem Id given the name of a count_sem The id is returned through sem_id</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>sem_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> is semid or sem_name are NULL pointers  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if the name given is to long to have been stored  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref> if the name was not found in the table  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2798" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2798" bodyend="2836"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" compoundref="osapi_8h" startline="104">OS_ERR_NAME_NOT_FOUND</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_CountSemGetInfo</definition>
        <argsstring>(uint32 sem_id, OS_count_sem_prop_t *count_prop)</argsstring>
        <name>OS_CountSemGetInfo</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s__count__sem__prop__t" kindref="compound">OS_count_sem_prop_t</ref> *</type>
          <declname>count_prop</declname>
        </param>
        <briefdescription>
<para>Get counting semaphore info. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will pass back a pointer to structure that contains all of the relevant info( name and creator) about the specified counting semaphore. </para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>count_prop <ref refid="struct_o_s__count__sem__prop__t" kindref="compound">OS_count_sem_prop_t</ref> Semphore properties struct pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a counting semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the count_prop pointer is null  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2849" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2849" bodyend="2890"/>
        <references refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" compoundref="osapi_8c" startline="137">OS_count_sem_record_t::creator</references>
        <references refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" compoundref="osapi_8c" startline="139">OS_count_sem_record_t::current_value</references>
        <references refid="struct_o_s__count__sem__record__t_1a28735ffa02d5908a2432837e08366f79" compoundref="osapi_8c" startline="136">OS_count_sem_record_t::name</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" compoundref="osapi_8c" startline="167">OS_count_sem_table_mut</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="cfe__es__shell_8h_1ad0c197c0612882783c893da9f515e984" compoundref="cfe__es__shell_8c" startline="397" endline="536">CFE_ES_ListResources</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a0c82ea90010f7b9ff5637136b04f32df" compoundref="cfe__es__apps_8c" startline="1813" endline="1890">CFE_ES_ListResourcesDebug</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemCreate</definition>
        <argsstring>(uint32 *sem_id, const char *sem_name, uint32 options)</argsstring>
        <name>OS_MutSemCreate</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sem_name</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Create mutex semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Creates a mutex semaphore initially full.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>options is an unused parameter</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>sem_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore name </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_initial_value</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore initial value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">options</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore size</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the pointers passed in are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if th ename to found is too long to begin with  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref> if there are already the max queues created  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref> if the name is already being used on another queue  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> if the OS call failed  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="2910" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="2910" bodyend="3047"/>
        <references refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" compoundref="osapi_8c" startline="148">OS_mut_sem_record_t::creator</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" compoundref="osapi_8c" startline="145">OS_mut_sem_record_t::free</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" compoundref="osapi_8h" startline="102">OS_ERR_NAME_TAKEN</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" compoundref="osapi_8h" startline="101">OS_ERR_NO_FREE_IDS</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" compoundref="osapi_8c" startline="3633" endline="3651">OS_FindCreator</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" compoundref="osapi_8c" startline="166">OS_mut_sem_table_mut</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__cds_8h_1affdb331f1b40f270906ac22ef1b8d87b" compoundref="cfe__es__cds_8c" startline="188" endline="260">CFE_ES_CDS_EarlyInit</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1af1aa110151a9f96736e9f0accbf2973f" compoundref="cfe__es__cds__mempool_8c" startline="120" endline="163">CFE_ES_CreateCDSPool</referencedby>
        <referencedby refid="cfe__es__start_8c_1a80b9e43e0efa587a70bd4707fee4f5f8" compoundref="cfe__es__start_8c" startline="164" endline="292">CFE_ES_Main</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1acaeb4ae711cef5e8703bc59b52416a34" compoundref="cfe__es__cds__mempool_8c" startline="173" endline="280">CFE_ES_RebuildCDSPool</referencedby>
        <referencedby refid="cfe__evs__task_8c_1a03453a917d882866305b6c05b99eb0b1" compoundref="cfe__evs__task_8c" startline="159" endline="257">CFE_EVS_EarlyInit</referencedby>
        <referencedby refid="cfe__fs__priv_8c_1aea2b5498886c7203bfe2d48862594f4d" compoundref="cfe__fs__priv_8c" startline="72" endline="85">CFE_FS_EarlyInit</referencedby>
        <referencedby refid="cfe__sb__init_8c_1a10df878846322b41e32312d413be8da2" compoundref="cfe__sb__init_8c" startline="118" endline="163">CFE_SB_EarlyInit</referencedby>
        <referencedby refid="cfe__tbl__internal_8c_1a6b6bd14ad2156d4d1ca50748a5d49c8f" compoundref="cfe__tbl__internal_8c" startline="102" endline="293">CFE_TBL_EarlyInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a4be56a807779019aad0c84e439906d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemDelete</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_MutSemDelete</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Delete mutex semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Deletes the specified mutex Semaphore.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>The mutex must be full to take it, so we have to check for fullness</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a mutex semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3062" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3062" bodyend="3097"/>
        <references refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" compoundref="osapi_8c" startline="148">OS_mut_sem_record_t::creator</references>
        <references refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" compoundref="osapi_8c" startline="145">OS_mut_sem_record_t::free</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" compoundref="osapi_8c" startline="166">OS_mut_sem_table_mut</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <references refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" compoundref="osapi_8c" startline="60">UNINITIALIZED</references>
        <referencedby refid="cfe__es__apps_8h_1abbbbd9de96d9c0d60415d558ef241e49" compoundref="cfe__es__apps_8c" startline="1235" endline="1346">CFE_ES_CleanUpApp</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1af1aa110151a9f96736e9f0accbf2973f" compoundref="cfe__es__cds__mempool_8c" startline="120" endline="163">CFE_ES_CreateCDSPool</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1acaeb4ae711cef5e8703bc59b52416a34" compoundref="cfe__es__cds__mempool_8c" startline="173" endline="280">CFE_ES_RebuildCDSPool</referencedby>
        <referencedby refid="psp__testcase_8c_1a2b448f8e4c04b580d40f4aab683174ef" compoundref="cfe__psp__start_8c" startline="501" endline="533">CFE_PSP_DeleteOSResources</referencedby>
        <referencedby refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" compoundref="osapi_8c" startline="436" endline="472">OS_DeleteAllObjects</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a48964b6567f9ceda86a51ebc02fb88c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemGive</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_MutSemGive</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Give mutex semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The function releases the mutex object referenced by sem_id.The manner in which a mutex is released is dependent upon the mutex&apos;s type attribute. If there are threads blocked on the mutex object referenced by mutex when this function is called, resulting in the mutex becoming available, the scheduling policy shall determine which thread shall acquire the mutex.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a mutex semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3115" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3115" bodyend="3144"/>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__cds__mempool_8h_1a5fc8edbcc0018bd7a0f1168affb5549e" compoundref="cfe__es__cds__mempool_8c" startline="573" endline="648">CFE_ES_CDSBlockRead</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1ab0b49897edfd9004cedc3787de05c01f" compoundref="cfe__es__cds__mempool_8c" startline="490" endline="563">CFE_ES_CDSBlockWrite</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1af1aa110151a9f96736e9f0accbf2973f" compoundref="cfe__es__cds__mempool_8c" startline="120" endline="163">CFE_ES_CreateCDSPool</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1a257c495c842dfea488228dfa9c21693d" compoundref="cfe__es__cds__mempool_8c" startline="290" endline="385">CFE_ES_GetCDSBlock</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" compoundref="cfe__esmempool_8c" startline="305" endline="404">CFE_ES_GetPoolBuf</referencedby>
        <referencedby refid="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" compoundref="cfe__esmempool_8c" startline="409" endline="463">CFE_ES_GetPoolBufInfo</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1aeb7ce6df79dddc269e57744724b8d033" compoundref="cfe__es__cds__mempool_8c" startline="390" endline="454">CFE_ES_PutCDSBlock</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" compoundref="cfe__esmempool_8c" startline="468" endline="551">CFE_ES_PutPoolBuf</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1acaeb4ae711cef5e8703bc59b52416a34" compoundref="cfe__es__cds__mempool_8c" startline="173" endline="280">CFE_ES_RebuildCDSPool</referencedby>
        <referencedby refid="cfe__es__cds_8h_1a2be11180893590edd75d95bf2fe371be" compoundref="cfe__es__cds_8c" startline="652" endline="665">CFE_ES_UnlockCDSRegistry</referencedby>
        <referencedby refid="cfe__es__global_8h_1ad4b84fc516619637ab49f74cdbe81382" compoundref="cfe__es__api_8c" startline="1869" endline="1887">CFE_ES_UnlockSharedData</referencedby>
        <referencedby refid="cfe__evs__log_8h_1a09106598875f3f8cd5c9e05ae26c7a2b" compoundref="cfe__evs__log_8c" startline="303" endline="327">CFE_EVS_SetLoggingModeCmd</referencedby>
        <referencedby refid="cfe__evs__log_8h_1a0cf8e266b4796fe4bbd597df65c6ada1" compoundref="cfe__evs__log_8c" startline="198" endline="290">CFE_EVS_WriteLogFileCmd</referencedby>
        <referencedby refid="cfe__fs__priv_8h_1ae560a3e5ded0b18389004af27e78b238" compoundref="cfe__fs__priv_8c" startline="132" endline="147">CFE_FS_UnlockSharedData</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1add45edd8c68c1cd7f334ae2a8d610ae8" compoundref="cfe__sb__priv_8c" startline="275" endline="292">CFE_SB_UnlockSharedData</referencedby>
        <referencedby refid="cfe__tbl__internal_8h_1a860696e137c0c69d98d5ce302dd7dcbf" compoundref="cfe__tbl__internal_8c" startline="836" endline="964">CFE_TBL_GetWorkingBuffer</referencedby>
        <referencedby refid="cfe__tbl__internal_8h_1a9742e37c1b65f73d4ebedb6bd0ea9420" compoundref="cfe__tbl__internal_8c" startline="812" endline="826">CFE_TBL_UnlockRegistry</referencedby>
        <referencedby refid="cfe__evs__log_8h_1aac7a45832149c0c7b6a3fb078e5afef7" compoundref="cfe__evs__log_8c" startline="101" endline="153">EVS_AddLog</referencedby>
        <referencedby refid="cfe__evs__log_8h_1afb6c5a995d35fcdd25bec6faa6623985" compoundref="cfe__evs__log_8c" startline="166" endline="185">EVS_ClearLog</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a77239ad1acd87f235cdc45142cc0d39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemTake</definition>
        <argsstring>(uint32 sem_id)</argsstring>
        <name>OS_MutSemTake</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <briefdescription>
<para>Take mutex semaphore. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>The mutex object referenced by sem_id shall be locked by calling this function. If the mutex is already locked, the calling thread shall block until the mutex becomes available. This operation shall return with the mutex object referenced by mutex in the locked state with the calling thread as its owner.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a mutex semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref> the semaphore was not previously initialized or is not in the array of semaphores defined by the system  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3160" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3160" bodyend="3198"/>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__cds__mempool_8h_1a5fc8edbcc0018bd7a0f1168affb5549e" compoundref="cfe__es__cds__mempool_8c" startline="573" endline="648">CFE_ES_CDSBlockRead</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1ab0b49897edfd9004cedc3787de05c01f" compoundref="cfe__es__cds__mempool_8c" startline="490" endline="563">CFE_ES_CDSBlockWrite</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1af1aa110151a9f96736e9f0accbf2973f" compoundref="cfe__es__cds__mempool_8c" startline="120" endline="163">CFE_ES_CreateCDSPool</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1a257c495c842dfea488228dfa9c21693d" compoundref="cfe__es__cds__mempool_8c" startline="290" endline="385">CFE_ES_GetCDSBlock</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" compoundref="cfe__esmempool_8c" startline="305" endline="404">CFE_ES_GetPoolBuf</referencedby>
        <referencedby refid="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" compoundref="cfe__esmempool_8c" startline="409" endline="463">CFE_ES_GetPoolBufInfo</referencedby>
        <referencedby refid="cfe__es__cds_8h_1afb3e1b83c010ecbde25603316bb11779" compoundref="cfe__es__cds_8c" startline="629" endline="642">CFE_ES_LockCDSRegistry</referencedby>
        <referencedby refid="cfe__es__global_8h_1a9b672c8b6f7921e93bf81ba7f9d1db3d" compoundref="cfe__es__api_8c" startline="1835" endline="1853">CFE_ES_LockSharedData</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1aeb7ce6df79dddc269e57744724b8d033" compoundref="cfe__es__cds__mempool_8c" startline="390" endline="454">CFE_ES_PutCDSBlock</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" compoundref="cfe__esmempool_8c" startline="468" endline="551">CFE_ES_PutPoolBuf</referencedby>
        <referencedby refid="cfe__es__cds__mempool_8h_1acaeb4ae711cef5e8703bc59b52416a34" compoundref="cfe__es__cds__mempool_8c" startline="173" endline="280">CFE_ES_RebuildCDSPool</referencedby>
        <referencedby refid="cfe__evs__log_8h_1a09106598875f3f8cd5c9e05ae26c7a2b" compoundref="cfe__evs__log_8c" startline="303" endline="327">CFE_EVS_SetLoggingModeCmd</referencedby>
        <referencedby refid="cfe__evs__log_8h_1a0cf8e266b4796fe4bbd597df65c6ada1" compoundref="cfe__evs__log_8c" startline="198" endline="290">CFE_EVS_WriteLogFileCmd</referencedby>
        <referencedby refid="cfe__fs__priv_8h_1a5ec454174290160f79a769d8a5f284a8" compoundref="cfe__fs__priv_8c" startline="100" endline="117">CFE_FS_LockSharedData</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1ae613b03944ed6bd4597baa55f9232809" compoundref="cfe__sb__priv_8c" startline="240" endline="257">CFE_SB_LockSharedData</referencedby>
        <referencedby refid="cfe__tbl__internal_8h_1a860696e137c0c69d98d5ce302dd7dcbf" compoundref="cfe__tbl__internal_8c" startline="836" endline="964">CFE_TBL_GetWorkingBuffer</referencedby>
        <referencedby refid="cfe__tbl__internal_8h_1a76e625a5dc8500166ba1153bff992a30" compoundref="cfe__tbl__internal_8c" startline="788" endline="802">CFE_TBL_LockRegistry</referencedby>
        <referencedby refid="cfe__evs__log_8h_1aac7a45832149c0c7b6a3fb078e5afef7" compoundref="cfe__evs__log_8c" startline="101" endline="153">EVS_AddLog</referencedby>
        <referencedby refid="cfe__evs__log_8h_1afb6c5a995d35fcdd25bec6faa6623985" compoundref="cfe__evs__log_8c" startline="166" endline="185">EVS_ClearLog</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a3132d8fcb5c3dfc4f152c567d9c39756" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemGetIdByName</definition>
        <argsstring>(uint32 *sem_id, const char *sem_name)</argsstring>
        <name>OS_MutSemGetIdByName</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>sem_name</declname>
        </param>
        <briefdescription>
<para>Get mutex semaphore id by name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function tries to find a mutex sem Id given the name of a mut_sem The id is returned through sem_id</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>sem_id <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">sem_name</parametername>
</parameternamelist>
<parameterdescription>
<para>Semaphore name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> is semid or sem_name are NULL pointers  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref> if the name given is to long to have been stored  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref> if the name was not found in the table  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3211" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3211" bodyend="3249"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" compoundref="osapi_8h" startline="104">OS_ERR_NAME_NOT_FOUND</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_MutSemGetInfo</definition>
        <argsstring>(uint32 sem_id, OS_mut_sem_prop_t *mut_prop)</argsstring>
        <name>OS_MutSemGetInfo</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>sem_id</declname>
        </param>
        <param>
          <type><ref refid="struct_o_s__mut__sem__prop__t" kindref="compound">OS_mut_sem_prop_t</ref> *</type>
          <declname>mut_prop</declname>
        </param>
        <briefdescription>
<para>Get mutex semaphore info. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will pass back a pointer to structure that contains all of the relevant info( name and creator) about the specified mutex semaphore. </para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sem_id</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> Semaphore ID number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>mut_prop <ref refid="struct_o_s__mut__sem__prop__t" kindref="compound">OS_mut_sem_prop_t</ref> Semphore properties struct pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref> if the id passed in is not a mutex semaphore  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if the mut_prop pointer is null  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3263" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3263" bodyend="3296"/>
        <references refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" compoundref="osapi_8c" startline="148">OS_mut_sem_record_t::creator</references>
        <references refid="struct_o_s__mut__sem__record__t_1ac086ecd5d233a39198ca546e21715f81" compoundref="osapi_8c" startline="147">OS_mut_sem_record_t::name</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" compoundref="osapi_8c" startline="67">OS_API_INITIALIZED</references>
        <references refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" compoundref="osapi_8c" startline="83">OS_API_Initialized</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" compoundref="osapi_8c" startline="3943" endline="3959">OS_InterruptSafeLock</references>
        <references refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" compoundref="osapi_8c" startline="3968" endline="3976">OS_InterruptSafeUnlock</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" compoundref="osapi_8c" startline="166">OS_mut_sem_table_mut</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__apps_8h_1a42e5bf37aeb32808a604d91e56697cef" compoundref="cfe__es__apps_8c" startline="1601" endline="1803">CFE_ES_CleanupTaskResources</referencedby>
        <referencedby refid="cfe__es__shell_8h_1ad0c197c0612882783c893da9f515e984" compoundref="cfe__es__shell_8c" startline="397" endline="536">CFE_ES_ListResources</referencedby>
        <referencedby refid="cfe__es__apps_8h_1a0c82ea90010f7b9ff5637136b04f32df" compoundref="cfe__es__apps_8c" startline="1813" endline="1890">CFE_ES_ListResourcesDebug</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a239f4cd57ad58e7bfea2c3cda68033cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_IntAttachHandler</definition>
        <argsstring>(uint32 InterruptNumber, osal_task_entry InterruptHandler, int32 parameter)</argsstring>
        <name>OS_IntAttachHandler</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>InterruptNumber</declname>
        </param>
        <param>
          <type>osal_task_entry</type>
          <declname>InterruptHandler</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>parameter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3328" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3328" bodyend="3335"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1acb62c03bed251941a2fdda1e38810ff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_IntUnlock</definition>
        <argsstring>(int32 IntLevel)</argsstring>
        <name>OS_IntUnlock</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>IntLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3354" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3354" bodyend="3357"/>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
        <referencedby refid="cfe__es__perf_8c_1ae98119fd462f141607f20aa28e46c692" compoundref="cfe__es__perf_8c" startline="482" endline="561">CFE_ES_PerfLogAdd</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a249ada6b5f294d562ac07804b0e0e347" compoundref="cfe__time__utils_8c" startline="1230" endline="1252">CFE_TIME_Set1HzAdj</referencedby>
        <referencedby refid="cfe__time__utils_8h_1adbec2e8f65b58ae0232cb3424cad78a7" compoundref="cfe__time__utils_8c" startline="1187" endline="1219">CFE_TIME_SetAdjust</referencedby>
        <referencedby refid="cfe__time__utils_8h_1af8c57e6b13669822ef8d53252c3c197f" compoundref="cfe__time__utils_8c" startline="999" endline="1018">CFE_TIME_SetDelay</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a63ab32ce0f866171406060717734e677" compoundref="cfe__time__utils_8c" startline="1158" endline="1176">CFE_TIME_SetLeaps</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a9c38b0f18a859ae0e8ef5233b3ca33b5" compoundref="cfe__time__utils_8c" startline="1088" endline="1118">CFE_TIME_SetMET</referencedby>
        <referencedby refid="cfe__time__utils_8h_1acb1ece0bc816560d0807a48d723ad6bd" compoundref="cfe__time__utils_8c" startline="962" endline="988">CFE_TIME_SetSignal</referencedby>
        <referencedby refid="cfe__time__utils_8h_1ace652dd6e039851c13a21a8de1870c31" compoundref="cfe__time__utils_8c" startline="933" endline="951">CFE_TIME_SetSource</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a1a783f4a406c4e42c9731120d37e9a12" compoundref="cfe__time__utils_8c" startline="882" endline="923">CFE_TIME_SetState</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a9c3ca272bb5b27abcc7154fe18ed3eb5" compoundref="cfe__time__utils_8c" startline="1129" endline="1147">CFE_TIME_SetSTCF</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a440610db51c76b0f7ee87e270eb3dead" compoundref="cfe__time__utils_8c" startline="1029" endline="1072">CFE_TIME_SetTime</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a41faa3b896722fd2a3582b8757434da5" compoundref="cfe__time__tone_8c" startline="792" endline="985">CFE_TIME_ToneUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a1471ac0918a1861965e4e2d3a0027895" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_IntLock</definition>
        <argsstring>(void)</argsstring>
        <name>OS_IntLock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3376" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3376" bodyend="3379"/>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
        <referencedby refid="cfe__es__perf_8c_1ae98119fd462f141607f20aa28e46c692" compoundref="cfe__es__perf_8c" startline="482" endline="561">CFE_ES_PerfLogAdd</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a249ada6b5f294d562ac07804b0e0e347" compoundref="cfe__time__utils_8c" startline="1230" endline="1252">CFE_TIME_Set1HzAdj</referencedby>
        <referencedby refid="cfe__time__utils_8h_1adbec2e8f65b58ae0232cb3424cad78a7" compoundref="cfe__time__utils_8c" startline="1187" endline="1219">CFE_TIME_SetAdjust</referencedby>
        <referencedby refid="cfe__time__utils_8h_1af8c57e6b13669822ef8d53252c3c197f" compoundref="cfe__time__utils_8c" startline="999" endline="1018">CFE_TIME_SetDelay</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a63ab32ce0f866171406060717734e677" compoundref="cfe__time__utils_8c" startline="1158" endline="1176">CFE_TIME_SetLeaps</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a9c38b0f18a859ae0e8ef5233b3ca33b5" compoundref="cfe__time__utils_8c" startline="1088" endline="1118">CFE_TIME_SetMET</referencedby>
        <referencedby refid="cfe__time__utils_8h_1acb1ece0bc816560d0807a48d723ad6bd" compoundref="cfe__time__utils_8c" startline="962" endline="988">CFE_TIME_SetSignal</referencedby>
        <referencedby refid="cfe__time__utils_8h_1ace652dd6e039851c13a21a8de1870c31" compoundref="cfe__time__utils_8c" startline="933" endline="951">CFE_TIME_SetSource</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a1a783f4a406c4e42c9731120d37e9a12" compoundref="cfe__time__utils_8c" startline="882" endline="923">CFE_TIME_SetState</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a9c3ca272bb5b27abcc7154fe18ed3eb5" compoundref="cfe__time__utils_8c" startline="1129" endline="1147">CFE_TIME_SetSTCF</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a440610db51c76b0f7ee87e270eb3dead" compoundref="cfe__time__utils_8c" startline="1029" endline="1072">CFE_TIME_SetTime</referencedby>
        <referencedby refid="cfe__time__utils_8h_1a41faa3b896722fd2a3582b8757434da5" compoundref="cfe__time__tone_8c" startline="792" endline="985">CFE_TIME_ToneUpdate</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a5fcc5cc5d5904230d78912370cda144e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_IntEnable</definition>
        <argsstring>(int32 Level)</argsstring>
        <name>OS_IntEnable</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>Level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3398" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3398" bodyend="3401"/>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ab785c4015754249084b3c0d98bf4ef77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_IntDisable</definition>
        <argsstring>(int32 Level)</argsstring>
        <name>OS_IntDisable</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>Level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3422" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3422" bodyend="3425"/>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a4f8322d29e9f7bc6e877abdf50f6ab68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_HeapGetInfo</definition>
        <argsstring>(OS_heap_prop_t *heap_prop)</argsstring>
        <name>OS_HeapGetInfo</name>
        <param>
          <type><ref refid="struct_o_s__heap__prop__t" kindref="compound">OS_heap_prop_t</ref> *</type>
          <declname>heap_prop</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3435" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3435" bodyend="3445"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <referencedby refid="cfe__es__task_8h_1ae75d1caf2ecdbc8c5e6b9923086eabdc" compoundref="cfe__es__task_8c" startline="638" endline="738">CFE_ES_HousekeepingCmd</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ae2f2184d4adaaa229e6f6b6b82661fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_Tick2Micros</definition>
        <argsstring>(void)</argsstring>
        <name>OS_Tick2Micros</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Ticks to milliseconds. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns the duration of a system tick in micro seconds.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
duration of a system tick in microseconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3464" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3464" bodyend="3470"/>
        <referencedby refid="osapi_8c_1aae782a9497f0630739740e4fc9121f8b" compoundref="osapi_8c" startline="3493" endline="3502">OS_Milli2Ticks</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1aae782a9497f0630739740e4fc9121f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_Milli2Ticks</definition>
        <argsstring>(uint32 milli_seconds)</argsstring>
        <name>OS_Milli2Ticks</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>milli_seconds</declname>
        </param>
        <briefdescription>
<para>Milliseconds to ticks. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function accepts a time interval in milliseconds, as an input and returns the tick equivalent for this time period. The tick value is rounded up.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">milli_seconds</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> the time interval, in milli second, to be translated to ticks</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
the number of ticks rounded up. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3493" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3493" bodyend="3502"/>
        <references refid="osapi_8c_1ae2f2184d4adaaa229e6f6b6b82661fa9" compoundref="osapi_8c" startline="3464" endline="3470">OS_Tick2Micros</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a810b1f61b670190cbdbd8f89e4d5fb95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_GetLocalTime</definition>
        <argsstring>(OS_time_t *time_struct)</argsstring>
        <name>OS_GetLocalTime</name>
        <param>
          <type><ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref> *</type>
          <declname>time_struct</declname>
        </param>
        <briefdescription>
<para>Get local time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This functions get the local time of the machine its on</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>time_struct <ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref> struct pointer</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if any of the necessary pointers are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3509" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3509" bodyend="3536"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
        <referencedby refid="cfe__psp__timer_8c_1a63385d5f64fc3a76e17e2cfeb18ca773" compoundref="cfe__psp__timer_8c" startline="155" endline="162">CFE_PSP_Get_Timebase</referencedby>
        <referencedby refid="cfe__psp__timer_8c_1add2a8221c2845259665176cbafc8be23" compoundref="cfe__psp__timer_8c" startline="70" endline="78">CFE_PSP_GetTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a5baf58abd88bf84fe15016d9649cca39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_SetLocalTime</definition>
        <argsstring>(OS_time_t *time_struct)</argsstring>
        <name>OS_SetLocalTime</name>
        <param>
          <type><ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref> *</type>
          <declname>time_struct</declname>
        </param>
        <briefdescription>
<para>Set local time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This functions sets the local time of the machine its on</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if any of the necessary pointers are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3544" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3544" bodyend="3581"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" compoundref="osapi_8h" startline="109">OS_ERR_NOT_IMPLEMENTED</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a5ad1eefc0aec8ec6eccd623d5bff735e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_SetMask</definition>
        <argsstring>(uint32 MaskSetting)</argsstring>
        <name>OS_SetMask</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>MaskSetting</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3601" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3601" bodyend="3604"/>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a6bcff47d124b33e78e054029afe0d1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_GetMask</definition>
        <argsstring>(uint32 *MaskSettingPtr)</argsstring>
        <name>OS_GetMask</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>MaskSettingPtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3625" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3625" bodyend="3628"/>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1ae2f28612973b2d1a818b55015b2d8650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_printf</definition>
        <argsstring>(const char *String,...)</argsstring>
        <name>OS_printf</name>
        <param>
          <type>const char *</type>
          <declname>String</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3694" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3694" bodyend="3710"/>
        <references refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" compoundref="stubs_8c" startline="59">OS_BUFFER_SIZE</references>
        <references refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" compoundref="osapi_8c" startline="169">OS_printf_enabled</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a14d3e2839a46e39012b78d7f15eae65a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_printf_disable</definition>
        <argsstring>(void)</argsstring>
        <name>OS_printf_disable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Disable OS printf. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function disables the output to the UART from OS_printf.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3718" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3718" bodyend="3721"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" compoundref="osapi_8c" startline="169">OS_printf_enabled</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1afefa8925b46d03434c71daa5b6c42601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OS_printf_enable</definition>
        <argsstring>(void)</argsstring>
        <name>OS_printf_enable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Enable OS printf. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function enables the output to the UART through OS_printf.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3729" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3729" bodyend="3732"/>
        <references refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" compoundref="osapi_8c" startline="169">OS_printf_enabled</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1aa07b6d0e1839d2a933c3aa2c15e1642c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_GetErrorName</definition>
        <argsstring>(int32 error_num, os_err_name_t *err_name)</argsstring>
        <name>OS_GetErrorName</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
          <declname>error_num</declname>
        </param>
        <param>
          <type><ref refid="osapi-os-core_8h_1aed3c1c7817e2cd621069f2272d3fd277" kindref="member">os_err_name_t</ref> *</type>
          <declname>err_name</declname>
        </param>
        <briefdescription>
<para>Get error name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This functions gets the string representation of an error code</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">error_num</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref> Error number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>err_name <ref refid="osapi-os-core_8h_1aed3c1c7817e2cd621069f2272d3fd277" kindref="member">os_err_name_t</ref> Error name</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref> if any of the necessary pointers are NULL  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3737" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3737" bodyend="3797"/>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" compoundref="osapi_8h" startline="103">OS_ERR_INVALID_ID</references>
        <references refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" compoundref="osapi_8h" startline="106">OS_ERR_INVALID_PRIORITY</references>
        <references refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" compoundref="osapi_8h" startline="104">OS_ERR_NAME_NOT_FOUND</references>
        <references refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" compoundref="osapi_8h" startline="102">OS_ERR_NAME_TAKEN</references>
        <references refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" compoundref="osapi_8h" startline="100">OS_ERR_NAME_TOO_LONG</references>
        <references refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" compoundref="osapi_8h" startline="101">OS_ERR_NO_FREE_IDS</references>
        <references refid="osapi_8h_1a148a6801434043813c3a0e4695e20e5e" compoundref="osapi_8h" startline="105">OS_ERR_SEM_NOT_FULL</references>
        <references refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" compoundref="osapi_8h" startline="88">OS_ERROR</references>
        <references refid="osapi_8h_1a982377be8c79b305b9658ecbfd77cf3b" compoundref="osapi_8h" startline="90">OS_ERROR_ADDRESS_MISALIGNED</references>
        <references refid="osapi_8h_1ac760cd5e5e0f4cfeb7b5cc1c1522d8ef" compoundref="osapi_8h" startline="91">OS_ERROR_TIMEOUT</references>
        <references refid="osapi_8h_1a710e9e56b589e8dedbd2b308ea464d30" compoundref="osapi_8h" startline="92">OS_INVALID_INT_NUM</references>
        <references refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" compoundref="osapi_8h" startline="89">OS_INVALID_POINTER</references>
        <references refid="osapi_8h_1a649aefc48b25fa31f54b59fe16fc501f" compoundref="osapi_8h" startline="95">OS_QUEUE_EMPTY</references>
        <references refid="osapi_8h_1a1bb3ced7e39cd5e1ca6d4c45f153cbc2" compoundref="osapi_8h" startline="96">OS_QUEUE_FULL</references>
        <references refid="osapi_8h_1aa2d9e0ae1d71d3b57e0c4d8663344c50" compoundref="osapi_8h" startline="99">OS_QUEUE_ID_ERROR</references>
        <references refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" compoundref="osapi_8h" startline="98">OS_QUEUE_INVALID_SIZE</references>
        <references refid="osapi_8h_1a11a8fcc6118adb5c801e6b84739af6a0" compoundref="osapi_8h" startline="97">OS_QUEUE_TIMEOUT</references>
        <references refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" compoundref="osapi_8h" startline="93">OS_SEM_FAILURE</references>
        <references refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" compoundref="osapi_8h" startline="94">OS_SEM_TIMEOUT</references>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a676d53165f7739e5e08315e812fd7c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_FPUExcSetMask</definition>
        <argsstring>(uint32 mask)</argsstring>
        <name>OS_FPUExcSetMask</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3911" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3911" bodyend="3917"/>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="osapi_8c_1a10da399290cb465c95adb084ae8911b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 OS_FPUExcGetMask</definition>
        <argsstring>(uint32 *mask)</argsstring>
        <name>OS_FPUExcGetMask</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" line="3928" column="1" bodyfile="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c" bodystart="3928" bodyend="3934"/>
        <references refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" compoundref="osapi_8h" startline="87">OS_SUCCESS</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2017<sp/>Windhover<sp/>Labs,<sp/>L.L.C.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>3.<sp/>Neither<sp/>the<sp/>name<sp/>Windhover<sp/>Labs<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/><sp/><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS</highlight></codeline>
<codeline lineno="22"><highlight class="comment">*<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/>COPYRIGHT<sp/>OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="24"><highlight class="comment">*<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS</highlight></codeline>
<codeline lineno="26"><highlight class="comment">*<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INCLUDE<sp/>FILES</highlight></codeline>
<codeline lineno="36"><highlight class="comment">****************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="osapi_8c_1a369266c24eacffb87046522897a570d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GNU_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;osconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sched.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="46"><highlight class="comment">**<sp/>The<sp/>__USE_UNIX98<sp/>is<sp/>for<sp/>advanced<sp/>pthread<sp/>features<sp/>on<sp/>linux</highlight></codeline>
<codeline lineno="47"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>__USE_UNIX98</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment">**<sp/>User<sp/>defined<sp/>include<sp/>files</highlight></codeline>
<codeline lineno="53"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common__types_8h" kindref="compound">common_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="osapi_8h" kindref="compound">osapi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="58"><highlight class="comment">**<sp/>Defines</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNINITIALIZED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_PRIORITY<sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PTHREAD_STACK_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="osapi_8c_1a8b3dc1c5c1a165d6143b1dce950e8266" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#define<sp/>PTHREAD_STACK_MIN<sp/>8092</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="osapi_8c_1a85dd147b4a04049013888731b1b80d5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OS_API_UNINITIALIZED<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OS_API_INITIALIZED<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="osapi_8c_1a4dd84d180afccc228b587c851c474f47" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OS_SHUTDOWN_MAGIC_NUMBER<sp/><sp/><sp/><sp/>0xABADC0DE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>To<sp/>remove<sp/>the<sp/>&quot;implicit<sp/>declaration<sp/>of<sp/>function<sp/>‘pthread_setname_np’&quot;<sp/>warning.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1a668c19646d5c270107d0842e50cf8746" kindref="member">pthread_setname_np</ref><sp/>(pthread_t<sp/>__target_thread,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*__name);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="77"><highlight class="comment">**<sp/>Global<sp/>data<sp/>for<sp/>the<sp/>API</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="comment">**<sp/>Tables<sp/>for<sp/>the<sp/>properties<sp/>of<sp/>objects<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>=<sp/><ref refid="osapi_8c_1a85dd147b4a04049013888731b1b80d5d" kindref="member">OS_API_UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*tasks<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="struct_o_s__task__record__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88" refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="89" refid="struct_o_s__task__record__t_1a734a3f104a14fd52a0fa0d9adcfd8ba6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/><ref refid="struct_o_s__task__record__t_1a734a3f104a14fd52a0fa0d9adcfd8ba6" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="90" refid="struct_o_s__task__record__t_1addf7a5e5390a89c77a2dff039554e66f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>[<ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>];</highlight></codeline>
<codeline lineno="91" refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="92" refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><ref refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" kindref="member">stack_size</ref>;</highlight></codeline>
<codeline lineno="93" refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><ref refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="94" refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" kindref="member">delete_hook_pointer</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<ref refid="struct_o_s__task__record__t" kindref="compound">OS_task_record_t</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>queues<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="struct_o_s__queue__data__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100" refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><ref refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="101" refid="struct_o_s__queue__data__t_1af5941887a7ec6d0551fcee8b22720b7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[OS_MAX_QUEUE_WIDTH];</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<ref refid="struct_o_s__queue__data__t" kindref="compound">OS_queue_data_t</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="struct_o_s__queue__record__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106" refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="107" refid="struct_o_s__queue__record__t_1aa9bd150b576c2fa02661cfc8882d7506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__data__t" kindref="compound">OS_queue_data_t</ref><sp/>qData[OS_MAX_QUEUE_DEPTH];</highlight></codeline>
<codeline lineno="108" refid="struct_o_s__queue__record__t_1a4c9c635f5619d65fc86525869bc1d23c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1a4c9c635f5619d65fc86525869bc1d23c" kindref="member">max_size</ref>;</highlight></codeline>
<codeline lineno="109" refid="struct_o_s__queue__record__t_1abdb21ff6cd5e3898e3f369b3d1b69f20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>[<ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>];</highlight></codeline>
<codeline lineno="110" refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="111" refid="struct_o_s__queue__record__t_1a86f21c7823533b0b2483b6b071a12cd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_t<sp/><sp/><ref refid="struct_o_s__queue__record__t_1a86f21c7823533b0b2483b6b071a12cd0" kindref="member">cv</ref>;</highlight></codeline>
<codeline lineno="112" refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="113" refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="114" refid="struct_o_s__queue__record__t_1ad0562998b3f595d2f140a94ff834d060" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1ad0562998b3f595d2f140a94ff834d060" kindref="member">width</ref>;</highlight></codeline>
<codeline lineno="115" refid="struct_o_s__queue__record__t_1af87577203ee088e6c684e79d590edcb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__record__t_1af87577203ee088e6c684e79d590edcb2" kindref="member">depth</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}<ref refid="struct_o_s__queue__record__t" kindref="compound">OS_queue_record_t</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Binary<sp/>Semaphores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="struct_o_s__bin__sem__record__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121" refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="122" refid="struct_o_s__bin__sem__record__t_1a8544c543f08996dbc8a60a62b8cf6364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/><ref refid="struct_o_s__bin__sem__record__t_1a8544c543f08996dbc8a60a62b8cf6364" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="123" refid="struct_o_s__bin__sem__record__t_1a320a9b0c1b824942835e7b588e18bcea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_t<sp/><sp/><ref refid="struct_o_s__bin__sem__record__t_1a320a9b0c1b824942835e7b588e18bcea" kindref="member">cv</ref>;</highlight></codeline>
<codeline lineno="124" refid="struct_o_s__bin__sem__record__t_1a2e6f79f675357b1a4dd3a048997e18f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>[<ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>];</highlight></codeline>
<codeline lineno="125" refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="126" refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" kindref="member">max_value</ref>;</highlight></codeline>
<codeline lineno="127" refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<ref refid="struct_o_s__bin__sem__record__t" kindref="compound">OS_bin_sem_record_t</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*Counting<sp/>Semaphores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="struct_o_s__count__sem__record__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133" refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="134" refid="struct_o_s__count__sem__record__t_1ac5dcbfd7140f23fc605afb301dd1a330" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/><ref refid="struct_o_s__count__sem__record__t_1ac5dcbfd7140f23fc605afb301dd1a330" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="135" refid="struct_o_s__count__sem__record__t_1a8a570fb409c3005061079f3c790f0e5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_t<sp/><sp/><ref refid="struct_o_s__count__sem__record__t_1a8a570fb409c3005061079f3c790f0e5c" kindref="member">cv</ref>;</highlight></codeline>
<codeline lineno="136" refid="struct_o_s__count__sem__record__t_1a28735ffa02d5908a2432837e08366f79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>[<ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>];</highlight></codeline>
<codeline lineno="137" refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="138" refid="struct_o_s__count__sem__record__t_1a27e7e20c856b25879a5f5b557f1b76ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__count__sem__record__t_1a27e7e20c856b25879a5f5b557f1b76ed" kindref="member">max_value</ref>;</highlight></codeline>
<codeline lineno="139" refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}<ref refid="struct_o_s__count__sem__record__t" kindref="compound">OS_count_sem_record_t</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Mutexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="struct_o_s__mut__sem__record__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145" refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="146" refid="struct_o_s__mut__sem__record__t_1ac3c3366b7c2303837e03eff1877416c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_t<sp/><ref refid="struct_o_s__mut__sem__record__t_1ac3c3366b7c2303837e03eff1877416c2" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="147" refid="struct_o_s__mut__sem__record__t_1ac086ecd5d233a39198ca546e21715f81" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>[<ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>];</highlight></codeline>
<codeline lineno="148" refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<ref refid="struct_o_s__mut__sem__record__t" kindref="compound">OS_mut_sem_record_t</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>function<sp/>pointer<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="osapi_8c_1a7803d3e126ac029d142e78b3b28325fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="osapi_8c_1a7803d3e126ac029d142e78b3b28325fa" kindref="member">FuncPtr_t</ref>)(void);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Tables<sp/>where<sp/>the<sp/>OS<sp/>object<sp/>information<sp/>is<sp/>stored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="osapi_8c_1a09953f42ae1201b9928d9316da85f2b4" refkind="member"><highlight class="normal"><ref refid="struct_o_s__task__record__t" kindref="compound">OS_task_record_t</ref><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a09953f42ae1201b9928d9316da85f2b4" kindref="member">OS_task_table</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[OS_MAX_TASKS];</highlight></codeline>
<codeline lineno="156" refid="osapi_8c_1ad21808bb1001f085141ddec9dca4d34e" refkind="member"><highlight class="normal"><ref refid="struct_o_s__queue__record__t" kindref="compound">OS_queue_record_t</ref><sp/><sp/><sp/><ref refid="osapi_8c_1ad21808bb1001f085141ddec9dca4d34e" kindref="member">OS_queue_table</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[OS_MAX_QUEUES];</highlight></codeline>
<codeline lineno="157" refid="osapi_8c_1a489e36b3bad0cda17d73d58272e1379b" refkind="member"><highlight class="normal"><ref refid="struct_o_s__bin__sem__record__t" kindref="compound">OS_bin_sem_record_t</ref><sp/><ref refid="osapi_8c_1a489e36b3bad0cda17d73d58272e1379b" kindref="member">OS_bin_sem_table</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[OS_MAX_BIN_SEMAPHORES];</highlight></codeline>
<codeline lineno="158" refid="osapi_8c_1a790cadd5af42235490e0289b1208a945" refkind="member"><highlight class="normal"><ref refid="struct_o_s__count__sem__record__t" kindref="compound">OS_count_sem_record_t</ref><sp/><ref refid="osapi_8c_1a790cadd5af42235490e0289b1208a945" kindref="member">OS_count_sem_table</ref><sp/><sp/><sp/>[OS_MAX_COUNT_SEMAPHORES];</highlight></codeline>
<codeline lineno="159" refid="osapi_8c_1a463bfc17c096c61ad8108b66bf8ba7c8" refkind="member"><highlight class="normal"><ref refid="struct_o_s__mut__sem__record__t" kindref="compound">OS_mut_sem_record_t</ref><sp/><ref refid="osapi_8c_1a463bfc17c096c61ad8108b66bf8ba7c8" kindref="member">OS_mut_sem_table</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[OS_MAX_MUTEXES];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" refkind="member"><highlight class="normal">pthread_key_t<sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" kindref="member">thread_key</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>;</highlight></codeline>
<codeline lineno="164" refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>;</highlight></codeline>
<codeline lineno="165" refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>;</highlight></codeline>
<codeline lineno="166" refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>;</highlight></codeline>
<codeline lineno="167" refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" kindref="member">OS_printf_enabled</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="170" refid="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" kindref="member">OS_shutdown</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="174"><highlight class="comment">**<sp/>Local<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="175"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" kindref="member">OS_CompAbsDelayTime</ref>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>milli_second<sp/>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*<sp/>tm);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1aac4d6adb633b44a489ac9f3344db7e2a" kindref="member">OS_ThreadKillHandler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><ref refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" kindref="member">OS_PriorityRemap</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>InputPri);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(pthread_mutex_t<sp/>*lock,<sp/>sigset_t<sp/>*</highlight><highlight class="keyword">set</highlight><highlight class="normal">,<sp/>sigset_t<sp/>*previous);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(pthread_mutex_t<sp/>*lock,<sp/>sigset_t<sp/>*previous);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_API_Init</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Initialize<sp/>the<sp/>tables<sp/>that<sp/>the<sp/>OS<sp/>API<sp/>uses<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>information</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>about<sp/>objects</highlight></codeline>
<codeline lineno="188"><highlight class="comment"></highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>OS_SUCCESS<sp/>or<sp/>OS_ERROR</highlight></codeline>
<codeline lineno="190"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="osapi_8c_1a8aa71a242c9161df456a3c016b560de3" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a8aa71a242c9161df456a3c016b560de3" kindref="member">OS_API_Init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" kindref="member">OS_API_InitEx</ref>(<ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568aeb0654439881c9c7f0b92c5c187c93a6" kindref="member">OS_RUNTIME_MODE_REALTIME</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="osapi_8c_1a2e40885eed9c0da6a1b1424348b8a1ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1a2e40885eed9c0da6a1b1424348b8a1ce" kindref="member">rek</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test[100])</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a2e40885eed9c0da6a1b1424348b8a1ce" kindref="member">rek</ref>(test);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_API_InitEx</highlight></codeline>
<codeline lineno="203"><highlight class="comment"></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Initialize<sp/>the<sp/>tables<sp/>that<sp/>the<sp/>OS<sp/>API<sp/>uses<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>information</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>about<sp/>objects</highlight></codeline>
<codeline lineno="206"><highlight class="comment"></highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>OS_SUCCESS<sp/>or<sp/>OS_ERROR</highlight></codeline>
<codeline lineno="208"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a0cdb4715f77e22dffb9c1a98d380aade" kindref="member">OS_API_InitEx</ref>(<ref refid="osapi-os-rtm_8h_1a5bfa05ad22bea26fff5471f991031568" kindref="member">OS_RunTimeModeEnum_t</ref><sp/>RunMode)</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>pthread_mutexattr_t<sp/>mutex_attr<sp/>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/><sp/>param;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_policy;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>Task<sp/>Table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>i++)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_table[i].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_table[i].<ref refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" kindref="member">creator</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_table[i].<ref refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" kindref="member">delete_hook_pointer</ref><sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_task_table[i].name,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>Message<sp/>Queue<sp/>Table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_QUEUES;<sp/>i++)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[i].<ref refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" kindref="member">free</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[i].<ref refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" kindref="member">creator</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_queue_table[i].name,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>Binary<sp/>Semaphore<sp/>Table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_BIN_SEMAPHORES;<sp/>i++)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[i].<ref refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" kindref="member">free</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[i].<ref refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" kindref="member">creator</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_bin_sem_table[i].name,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>Counting<sp/>Semaphores<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_COUNT_SEMAPHORES;<sp/>i++)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[i].<ref refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" kindref="member">free</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[i].<ref refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" kindref="member">creator</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_count_sem_table[i].name,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialize<sp/>Mutex<sp/>Semaphore<sp/>Table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_MUTEXES;<sp/>i++)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[i].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[i].<ref refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" kindref="member">creator</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_mut_sem_table[i].name,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>module<sp/>loader</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>OS_INCLUDE_MODULE_LOADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi-os-loader_8h_1a93a1c4391c32c1bc2055f46ef08f1913" kindref="member">OS_ModuleTableInit</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>==<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref><sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>Timer<sp/>API</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi-os-timer_8h_1acb5be5641be9984781462257c689c1d2" kindref="member">OS_TimerAPIInit</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>==<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref><sp/>)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_key_create(&amp;<ref refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" kindref="member">thread_key</ref>,<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>thread<sp/>key\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/><sp/><sp/>**<sp/>initialize<sp/>the<sp/>pthread<sp/>mutex<sp/>attribute<sp/>structure<sp/>with<sp/>default<sp/>values<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_mutexattr_init(&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(return_code);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/><sp/><sp/>**<sp/>Allow<sp/>the<sp/>mutex<sp/>to<sp/>use<sp/>priority<sp/>inheritance<sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_mutexattr_setprotocol(&amp;mutex_attr,PTHREAD_PRIO_INHERIT)<sp/>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_setprotocol<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(return_code);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/>Set<sp/>the<sp/>mutex<sp/>type<sp/>to<sp/>RECURSIVE<sp/>so<sp/>a<sp/>thread<sp/>can<sp/>do<sp/>nested<sp/>locks</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_mutexattr_settype(&amp;mutex_attr,<sp/>PTHREAD_MUTEX_RECURSIVE);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_settype<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(return_code);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/><sp/><sp/>**<sp/>create<sp/>the<sp/>mutexes<sp/>that<sp/>protect<sp/>the<sp/>OSAPI<sp/>structures<sp/></highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/>**<sp/>the<sp/>function<sp/>returns<sp/>on<sp/>error,<sp/>since<sp/>we<sp/>dont<sp/>want<sp/>to<sp/>go<sp/>through</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/>**<sp/>the<sp/>extra<sp/>trouble<sp/>of<sp/>creating<sp/>and<sp/>deleting<sp/>resoruces<sp/>for<sp/>nothing</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_mutex_init((pthread_mutex_t<sp/>*)<sp/>&amp;<sp/><ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,&amp;mutex_attr);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_mutex_init((pthread_mutex_t<sp/>*)<sp/>&amp;<sp/><ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_mutex_init((pthread_mutex_t<sp/>*)<sp/>&amp;<sp/><ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_mutex_init((pthread_mutex_t<sp/>*)<sp/>&amp;<sp/><ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_mutex_init((pthread_mutex_t<sp/>*)<sp/>&amp;<sp/><ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/>**<sp/>File<sp/>system<sp/>init</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi-os-filesys_8h_1a022d0ea3ab78cc8dc824547ab0e27ed0" kindref="member">OS_FS_Init</ref>();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>**<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>application<sp/>is<sp/>running<sp/>as<sp/>root</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/>It<sp/>must<sp/>be<sp/>root<sp/>in<sp/>order<sp/>to<sp/>set<sp/>the<sp/>scheduling<sp/>policy,<sp/>stacks,<sp/>and<sp/>priorities<sp/>of</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/>**<sp/><sp/>the<sp/>pthreads</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geteuid()<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;OS_API_Init:<sp/>Note:<sp/>Not<sp/>running<sp/>as<sp/>root.<sp/>Task<sp/>scheduling<sp/>policy,<sp/>stack<sp/>sizes,<sp/>or<sp/>priorities<sp/>will<sp/>not<sp/>be<sp/>set\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param.sched_priority<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sched_policy<sp/>=<sp/>SCHED_FIFO;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_setschedparam(pthread_self(),<sp/>sched_policy,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;OS_API_Init:<sp/>Could<sp/>not<sp/>set<sp/>scheduleparam<sp/>in<sp/>main<sp/>thread\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(return_code);</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_ApplicationExit</highlight></codeline>
<codeline lineno="407"><highlight class="comment"></highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Indicates<sp/>that<sp/>the<sp/>OSAL<sp/>application<sp/>should<sp/>exit<sp/>and<sp/>return<sp/>control<sp/>to<sp/>the<sp/>OS</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>intended<sp/>for<sp/>e.g.<sp/>scripted<sp/>unit<sp/>testing<sp/>where<sp/>the<sp/>test<sp/>needs<sp/>to<sp/>end</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>without<sp/>user<sp/>intervention.<sp/><sp/>This<sp/>function<sp/>does<sp/>not<sp/>return.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"></highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/><sp/><sp/><sp/>NOTES:<sp/>This<sp/>exits<sp/>the<sp/>entire<sp/>process<sp/>including<sp/>tasks<sp/>that<sp/>have<sp/>been<sp/>created.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>does<sp/>not<sp/>return.<sp/><sp/>Production<sp/>embedded<sp/>code<sp/>typically<sp/>would<sp/>not<sp/>ever<sp/>call<sp/>this.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"></highlight></codeline>
<codeline lineno="415"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="osapi_8c_1ae6a7077fcffe9e80ac43cd096e8aaaec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1ae6a7077fcffe9e80ac43cd096e8aaaec" kindref="member">OS_ApplicationExit</ref>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>Status)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Status<sp/>==<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_SUCCESS);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_DeleteAllObjects</highlight></codeline>
<codeline lineno="430"><highlight class="comment"></highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>This<sp/>task<sp/>will<sp/>delete<sp/>all<sp/>objects<sp/>allocated<sp/>by<sp/>this<sp/>instance<sp/>of<sp/>OSAL</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>May<sp/>be<sp/>used<sp/>during<sp/>shutdown<sp/>or<sp/>by<sp/>the<sp/>unit<sp/>tests<sp/>to<sp/>purge<sp/>all<sp/>state</highlight></codeline>
<codeline lineno="433"><highlight class="comment"></highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>no<sp/>value</highlight></codeline>
<codeline lineno="435"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1aa3ed28b45f4939d53fa23f12a6873d2b" kindref="member">OS_DeleteAllObjects</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>++i)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" kindref="member">OS_TaskDelete</ref>(i);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_QUEUES;<sp/>++i)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" kindref="member">OS_QueueDelete</ref>(i);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_MUTEXES;<sp/>++i)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" kindref="member">OS_MutSemDelete</ref>(i);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_COUNT_SEMAPHORES;<sp/>++i)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" kindref="member">OS_CountSemDelete</ref>(i);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_BIN_SEMAPHORES;<sp/>++i)</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" kindref="member">OS_BinSemDelete</ref>(i);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TIMERS;<sp/>++i)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-timer_8h_1ab901e145ec75ad3b6c4e1dc15bb71972" kindref="member">OS_TimerDelete</ref>(i);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_MODULES;<sp/>++i)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-loader_8h_1aab6d4c347646777499192c259e5ee412" kindref="member">OS_ModuleUnload</ref>(i);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_NUM_OPEN_FILES;<sp/>++i)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-filesys_8h_1af78f50e6ee6c96959e44130dd7956cf6" kindref="member">OS_close</ref>(i);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_IdleLoop</highlight></codeline>
<codeline lineno="477"><highlight class="comment"></highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Should<sp/>be<sp/>called<sp/>after<sp/>all<sp/>initialization<sp/>is<sp/>done</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>thread<sp/>may<sp/>be<sp/>used<sp/>to<sp/>wait<sp/>for<sp/>and<sp/>handle<sp/>external<sp/>events</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Typically<sp/>just<sp/>waits<sp/>forever<sp/>until<sp/>&quot;OS_shutdown&quot;<sp/>flag<sp/>becomes<sp/>true.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"></highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>no<sp/>value</highlight></codeline>
<codeline lineno="483"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484" refid="osapi_8c_1aaf04b6458b5400d3bf12ceb20eb00573" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1aaf04b6458b5400d3bf12ceb20eb00573" kindref="member">OS_IdleLoop</ref>()</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/>sigset_t<sp/>mask;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>signals<sp/>should<sp/>be<sp/>unblocked<sp/>in<sp/>this<sp/>thread<sp/>while<sp/>suspended<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>sigemptyset(&amp;mask);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" kindref="member">OS_shutdown</ref><sp/>!=<sp/><ref refid="osapi_8c_1a4dd84d180afccc228b587c851c474f47" kindref="member">OS_SHUTDOWN_MAGIC_NUMBER</ref>)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unblock<sp/>signals<sp/>and<sp/>wait<sp/>for<sp/>something<sp/>to<sp/>occur<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sigsuspend(&amp;mask);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal">}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_ApplicationShutdown</highlight></codeline>
<codeline lineno="502"><highlight class="comment"></highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Indicates<sp/>that<sp/>the<sp/>OSAL<sp/>application<sp/>should<sp/>perform<sp/>an<sp/>orderly<sp/>shutdown</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>ALL<sp/>tasks,<sp/>clean<sp/>up<sp/>all<sp/>resources,<sp/>and<sp/>exit<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="505"><highlight class="comment"></highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>none</highlight></codeline>
<codeline lineno="507"><highlight class="comment"></highlight></codeline>
<codeline lineno="508"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="osapi_8c_1a316dfd9308c0541dae9951d0516c1496" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1a316dfd9308c0541dae9951d0516c1496" kindref="member">OS_ApplicationShutdown</ref>(<ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>flag)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a8a3db5d4a0b0ce94e279371618a47cfb" kindref="member">OS_shutdown</ref><sp/>=<sp/><ref refid="osapi_8c_1a4dd84d180afccc228b587c851c474f47" kindref="member">OS_SHUTDOWN_MAGIC_NUMBER</ref>;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Raise<sp/>a<sp/>signal<sp/>that<sp/>is<sp/>unblocked<sp/>in<sp/>OS_IdleLoop(),</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>which<sp/>should<sp/>break<sp/>it<sp/>out<sp/>of<sp/>the<sp/>sigsuspend()<sp/>call.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//kill(getpid(),<sp/>SIGUSR1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="526"><highlight class="comment">**********************************************************************************</highlight></codeline>
<codeline lineno="527"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TASK<sp/>API</highlight></codeline>
<codeline lineno="528"><highlight class="comment">**********************************************************************************</highlight></codeline>
<codeline lineno="529"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_TaskCreate</highlight></codeline>
<codeline lineno="533"><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Creates<sp/>a<sp/>task<sp/>and<sp/>starts<sp/>running<sp/>it.</highlight></codeline>
<codeline lineno="535"><highlight class="comment"></highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>any<sp/>of<sp/>the<sp/>necessary<sp/>pointers<sp/>are<sp/>NULL</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>of<sp/>the<sp/>task<sp/>is<sp/>too<sp/>long<sp/>to<sp/>be<sp/>copied</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_PRIORITY<sp/>if<sp/>the<sp/>priority<sp/>is<sp/>bad</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NO_FREE_IDS<sp/>if<sp/>there<sp/>can<sp/>be<sp/>no<sp/>more<sp/>tasks<sp/>created</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TAKEN<sp/>if<sp/>the<sp/>name<sp/>specified<sp/>is<sp/>already<sp/>used<sp/>by<sp/>a<sp/>task</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERROR<sp/>if<sp/>the<sp/>operating<sp/>system<sp/>calls<sp/>fail</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/>NOTES:<sp/>task_id<sp/>is<sp/>passed<sp/>back<sp/>to<sp/>the<sp/>user<sp/>as<sp/>the<sp/>ID.<sp/>stack_pointer<sp/>is<sp/>usually<sp/>null.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>flags<sp/>parameter<sp/>is<sp/>unused.</highlight></codeline>
<codeline lineno="546"><highlight class="comment"></highlight></codeline>
<codeline lineno="547"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a3f7e467030a2a4b8147c53ec44e3ae30" kindref="member">OS_TaskCreate</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*task_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*task_name,<sp/>osal_task_entry<sp/>function_pointer,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*stack_pointer,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>stack_size,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>priority,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>flags)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_attr_t<sp/><sp/><sp/><sp/><sp/>custom_attr<sp/>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sched_param<sp/>priority_holder<sp/>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possible_taskid;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_stack_size;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;<sp/><sp/></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os_priority;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inheritsched;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>NULL<sp/>pointers<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(task_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(function_pointer<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(task_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>allow<sp/>names<sp/>too<sp/>long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>truncated,<sp/>two<sp/>names<sp/>might<sp/>be<sp/>the<sp/>same<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(task_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>for<sp/>bad<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(priority<sp/>&gt;<sp/><ref refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" kindref="member">MAX_PRIORITY</ref>)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" kindref="member">OS_ERR_INVALID_PRIORITY</ref>;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>OSAL<sp/>priority<sp/>into<sp/>a<sp/>priority<sp/>that<sp/>will<sp/>work<sp/>for<sp/>this<sp/>OS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>os_priority<sp/>=<sp/><ref refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" kindref="member">OS_PriorityRemap</ref>(priority);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(possible_taskid<sp/>=<sp/>0;<sp/>possible_taskid<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>possible_taskid++)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_task_table[possible_taskid].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>id<sp/>is<sp/>out<sp/>of<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>possible_taskid<sp/>&gt;=<sp/>OS_MAX_TASKS<sp/>||<sp/>OS_task_table[possible_taskid].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref>;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>name<sp/>is<sp/>already<sp/>taken<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>i++)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OS_task_table[i].free<sp/>==<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>strcmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>task_name,<sp/>OS_task_table[i].name)<sp/>==<sp/>0))<sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Set<sp/>the<sp/>possible<sp/>task<sp/>Id<sp/>to<sp/>not<sp/>free<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>no<sp/>other<sp/>task<sp/>can<sp/>try<sp/>to<sp/>use<sp/>it<sp/></highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>stack_size<sp/>&lt;<sp/><ref refid="osapi_8c_1a8b3dc1c5c1a165d6143b1dce950e8266" kindref="member">PTHREAD_STACK_MIN</ref><sp/>)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_stack_size<sp/>=<sp/><ref refid="osapi_8c_1a8b3dc1c5c1a165d6143b1dce950e8266" kindref="member">PTHREAD_STACK_MIN</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_stack_size<sp/>=<sp/>stack_size;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>pthread_attr<sp/>structure.<sp/></highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>The<sp/>structure<sp/>is<sp/>used<sp/>to<sp/>set<sp/>the<sp/>stack<sp/>and<sp/>priority</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;custom_attr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(custom_attr));</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_attr_init(&amp;custom_attr))</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_init<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;pthread_attr_init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);<sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Test<sp/>to<sp/>see<sp/>if<sp/>the<sp/>user<sp/>is<sp/>running<sp/>as<sp/>root.</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>root<sp/>is<sp/>required<sp/>to<sp/>set<sp/>the<sp/>scheduling<sp/>policy,<sp/>stack,<sp/>and<sp/>priority</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geteuid()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Set<sp/>the<sp/>scheduling<sp/>inherit<sp/>attribute<sp/>to<sp/>EXPLICIT</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inheritsched<sp/>=<sp/>PTHREAD_EXPLICIT_SCHED;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_attr_setinheritsched(&amp;custom_attr,<sp/>inheritsched);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_setinheritsched<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d,<sp/>errno<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possible_taskid,strerror(errno));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Set<sp/>the<sp/>Stack<sp/>Size</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_attr_setstacksize(&amp;custom_attr,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)local_stack_size<sp/>))</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_setstacksize<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Set<sp/>the<sp/>scheduling<sp/>policy<sp/></highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>On<sp/>Linux,<sp/>the<sp/>schedpolity<sp/>must<sp/>be<sp/>SCHED_FIFO<sp/>or<sp/>SCHED_RR<sp/>to<sp/>set<sp/>the<sp/>priorty</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_attr_setschedpolicy(&amp;custom_attr,<sp/>SCHED_FIFO))</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_setschedpolity<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Set<sp/>priority</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;priority_holder,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(priority_holder));</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>priority_holder.sched_priority<sp/>=<sp/>os_priority;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_attr_setschedparam(&amp;custom_attr,<sp/>&amp;priority_holder);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>!=0)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>critical<sp/>error.<sp/><sp/>Terminate<sp/>the<sp/>newly<sp/>created<sp/>thread</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>return<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_setschedparam<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>End<sp/>if<sp/>user<sp/>is<sp/>root<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>core<sp/>affinity,<sp/>if<sp/>requested.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((flags<sp/>&amp;<sp/><ref refid="osapi-os-core_8h_1afcb708c02f94d8085e70091fa4d05dd2" kindref="member">OS_ENABLE_CORE_MASK</ref>)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>core<sp/>affinity<sp/>bits<sp/>of<sp/>the<sp/>flags<sp/>argument<sp/>has<sp/>values.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>reqCoreSet<sp/>=<sp/>(flags<sp/>&amp;<sp/><ref refid="osapi-os-core_8h_1afcb708c02f94d8085e70091fa4d05dd2" kindref="member">OS_ENABLE_CORE_MASK</ref>)<sp/>&gt;&gt;<sp/><ref refid="osapi-os-core_8h_1ad78f2c5dcda51411dae88fec12994c07" kindref="member">OS_ENABLE_CORE_OFFSET</ref>;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu_set_t<sp/>cpuset;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPU_ZERO(&amp;cpuset);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>++i)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>i;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cpuIdEnabled<sp/>=<sp/>reqCoreSet<sp/>&amp;<sp/>id;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cpuIdEnabled)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPU_SET(i,<sp/>&amp;cpuset);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_attr_setaffinity_np(&amp;custom_attr,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cpu_set_t),<sp/>&amp;cpuset);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=0)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>critical<sp/>error.<sp/><sp/>Terminate<sp/>the<sp/>newly<sp/>created<sp/>thread</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>return<sp/>an<sp/>error.</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cancel(OS_task_table[possible_taskid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_setaffinity_np<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>possible_taskid);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Create<sp/>thread</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_create(&amp;(OS_task_table[possible_taskid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;custom_attr,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*))function_pointer,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_create<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>thread<sp/>name<sp/>so<sp/>its<sp/>easier<sp/>to<sp/>identify<sp/>in<sp/>the<sp/>debugger.<sp/><sp/>No<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>check<sp/>for<sp/>errors.<sp/><sp/>If<sp/>it<sp/>fails,<sp/>just<sp/>keep<sp/>going.<sp/><sp/>No<sp/>big<sp/>deal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a668c19646d5c270107d0842e50cf8746" kindref="member">pthread_setname_np</ref>(OS_task_table[possible_taskid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>task_name);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Free<sp/>the<sp/>resources<sp/>that<sp/>are<sp/>no<sp/>longer<sp/>needed<sp/>when<sp/>the<sp/>thread<sp/>is<sp/>terminated.</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_detach(OS_task_table[possible_taskid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=0)</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>not<sp/>a<sp/>critical<sp/>error,<sp/>so<sp/>just<sp/>generate<sp/>a<sp/>debug<sp/>statement</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>continue.</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_detach<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_attr_destroy(&amp;custom_attr);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(return_code<sp/>!=0)</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>not<sp/>a<sp/>critical<sp/>error,<sp/>so<sp/>just<sp/>generate<sp/>a<sp/>debug<sp/>statement</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>and<sp/>continue.</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_attr_destroy<sp/>error<sp/>in<sp/>OS_TaskCreate,<sp/>Task<sp/>ID<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,possible_taskid);</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Assign<sp/>the<sp/>task<sp/>ID</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>*task_id<sp/>=<sp/>possible_taskid;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>table<sp/>entries<sp/></highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_task_table[*task_id].name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>task_name);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" kindref="member">stack_size</ref><sp/>=<sp/>stack_size;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>abstracted<sp/>priority,<sp/>not<sp/>the<sp/>OS<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[possible_taskid].<ref refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" kindref="member">priority</ref><sp/>=<sp/>priority;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskCreate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Name:<sp/>OS_TaskDelete</highlight></codeline>
<codeline lineno="821"><highlight class="comment"></highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Deletes<sp/>the<sp/>specified<sp/>Task<sp/>and<sp/>removes<sp/>it<sp/>from<sp/>the<sp/>OS_task_table.</highlight></codeline>
<codeline lineno="823"><highlight class="comment"></highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/>returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>ID<sp/>given<sp/>to<sp/>it<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERROR<sp/>if<sp/>the<sp/>OS<sp/>delete<sp/>call<sp/>fails</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="827"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828" refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a28ceef9ec6d344cb0569e1f5c105e59e" kindref="member">OS_TaskDelete</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>task_id)</highlight></codeline>
<codeline lineno="829"><highlight class="normal">{<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a7803d3e126ac029d142e78b3b28325fa" kindref="member">FuncPtr_t</ref><sp/>FunctionPointer;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>task_id<sp/>given<sp/>is<sp/>valid<sp/></highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_id<sp/>&gt;=<sp/>OS_MAX_TASKS<sp/>||<sp/>OS_task_table[task_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Call<sp/>the<sp/>thread<sp/>Delete<sp/>hook<sp/>if<sp/>there<sp/>is<sp/>one.</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_task_table[task_id].delete_hook_pointer<sp/>!=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FunctionPointer<sp/>=<sp/>(<ref refid="osapi_8c_1a7803d3e126ac029d142e78b3b28325fa" kindref="member">FuncPtr_t</ref>)(OS_task_table[task_id].delete_hook_pointer);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*FunctionPointer)();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Try<sp/>to<sp/>delete<sp/>the<sp/>task<sp/></highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cancel(OS_task_table[task_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;FAILED<sp/>PTHREAD<sp/>CANCEL<sp/>%d,<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,ret,<sp/>ESRCH);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Now<sp/>that<sp/>the<sp/>task<sp/>is<sp/>deleted,<sp/>remove<sp/>its<sp/></highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>&quot;presence&quot;<sp/>in<sp/>OS_task_table</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_task_table[task_id].name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" kindref="member">stack_size</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" kindref="member">priority</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a734a3f104a14fd52a0fa0d9adcfd8ba6" kindref="member">id</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" kindref="member">delete_hook_pointer</ref><sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskDelete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Name:<sp/>OS_TaskExit</highlight></codeline>
<codeline lineno="891"><highlight class="comment"></highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Exits<sp/>the<sp/>calling<sp/>task<sp/>and<sp/>removes<sp/>it<sp/>from<sp/>the<sp/>OS_task_table.</highlight></codeline>
<codeline lineno="893"><highlight class="comment"></highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/>returns:<sp/>Nothing<sp/></highlight></codeline>
<codeline lineno="895"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1a97875e0d03a15738f0cb81ccc94202c5" kindref="member">OS_TaskExit</ref>()</highlight></codeline>
<codeline lineno="898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>task_id;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>task_id<sp/>=<sp/><ref refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" kindref="member">OS_TaskGetId</ref>();</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a2cd541674c7a9edf615dda42483f8dad" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_task_table[task_id].name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" kindref="member">stack_size</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" kindref="member">priority</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a734a3f104a14fd52a0fa0d9adcfd8ba6" kindref="member">id</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" kindref="member">delete_hook_pointer</ref><sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_exit(<ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight><highlight class="comment">/*end<sp/>OS_TaskExit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_TaskDelay</highlight></codeline>
<codeline lineno="922"><highlight class="comment"></highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Delay<sp/>a<sp/>task<sp/>for<sp/>specified<sp/>amount<sp/>of<sp/>milliseconds</highlight></codeline>
<codeline lineno="924"><highlight class="comment"></highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/><sp/><sp/>returns:<sp/>OS_ERROR<sp/>if<sp/>sleep<sp/>fails<sp/>or<sp/>millisecond<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="927"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="osapi_8c_1a8f78bce95227e4e99fe6f0378835260e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a8f78bce95227e4e99fe6f0378835260e" kindref="member">OS_TaskDelay</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>millisecond<sp/>)</highlight></codeline>
<codeline lineno="929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>waittime;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms<sp/>=<sp/>millisecond;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleepstat;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>waittime.tv_sec<sp/><sp/>=<sp/>ms<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>waittime.tv_nsec<sp/>=<sp/>(ms<sp/>%<sp/>1000)<sp/>*<sp/>1000000;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Do<sp/>not<sp/>allow<sp/>signals<sp/>to<sp/>interrupt<sp/>nanosleep<sp/>until<sp/>the<sp/>requested<sp/>time<sp/></highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleepstat<sp/>=<sp/>nanosleep(&amp;waittime,<sp/>&amp;waittime);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>sleepstat<sp/>==<sp/>-1<sp/>&amp;&amp;<sp/>errno<sp/>==<sp/>EINTR<sp/>);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sleepstat<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="960"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskDelay<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_TaskSetPriority</highlight></codeline>
<codeline lineno="964"><highlight class="comment"></highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Sets<sp/>the<sp/>given<sp/>task<sp/>to<sp/>a<sp/>new<sp/>priority</highlight></codeline>
<codeline lineno="966"><highlight class="comment"></highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/><sp/><sp/><sp/>returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>ID<sp/>passed<sp/>to<sp/>it<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_PRIORITY<sp/>if<sp/>the<sp/>priority<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>max<sp/></highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERROR<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>to<sp/>change<sp/>the<sp/>priority<sp/>fails</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="972"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a4e29bcbe0ad198566d5fc5e264173c23" kindref="member">OS_TaskSetPriority</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>task_id,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>new_priority)</highlight></codeline>
<codeline lineno="974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os_priority;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_id<sp/>&gt;=<sp/>OS_MAX_TASKS<sp/>||<sp/>OS_task_table[task_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_priority<sp/>&gt;<sp/><ref refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" kindref="member">MAX_PRIORITY</ref>)</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" kindref="member">OS_ERR_INVALID_PRIORITY</ref>;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>OSAL<sp/>priority<sp/>into<sp/>a<sp/>priority<sp/>that<sp/>will<sp/>work<sp/>for<sp/>this<sp/>OS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>os_priority<sp/>=<sp/><ref refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" kindref="member">OS_PriorityRemap</ref>(new_priority);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geteuid()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Set<sp/>priority</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_setschedprio(OS_task_table[task_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>os_priority);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;pthread_setschedprio<sp/>err<sp/>in<sp/>OS_TaskSetPriority,<sp/>Task<sp/>ID<sp/>=<sp/>%lu,<sp/>prio<sp/>=<sp/>%d,<sp/>errno<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_id,os_priority<sp/>,strerror(errno));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>the<sp/>abstracted<sp/>priority,<sp/>not<sp/>the<sp/>OS<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Change<sp/>the<sp/>priority<sp/>in<sp/>the<sp/>table<sp/>as<sp/>well<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" kindref="member">priority</ref><sp/>=<sp/>new_priority;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskSetPriority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1021"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_TaskRegister</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Registers<sp/>the<sp/>calling<sp/>task<sp/>id<sp/>with<sp/>the<sp/>task<sp/>by<sp/>adding<sp/>the<sp/>var<sp/>to<sp/>the<sp/>tcb</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>searches<sp/>the<sp/>OS_task_table<sp/>to<sp/>find<sp/>the<sp/>task_id<sp/>corresponding<sp/>to<sp/>the<sp/>tcb_id</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>there<sp/>the<sp/>specified<sp/>ID<sp/>could<sp/>not<sp/>be<sp/>found</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERROR<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>fails</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1029"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030" refid="osapi_8c_1a2712303c67dda79b3f382101f2d5e547" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a2712303c67dda79b3f382101f2d5e547" kindref="member">OS_TaskRegister</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>task_id;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/><sp/><sp/><sp/>pthread_id;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Get<sp/>PTHREAD<sp/>Id</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_id<sp/>=<sp/>pthread_self();</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Look<sp/>our<sp/>task<sp/>ID<sp/>in<sp/>table<sp/></highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>i++)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OS_task_table[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>==<sp/>pthread_id)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>task_id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(task_id<sp/>==<sp/>OS_MAX_TASKS)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Add<sp/>pthread<sp/>variable</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_setspecific(<ref refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" kindref="member">thread_key</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)task_id);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;OS_TaskRegister<sp/>Failed<sp/>during<sp/>pthread_setspecific<sp/>function\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskRegister<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_TaskGetId</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"></highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>returns<sp/>the<sp/>#defined<sp/>task<sp/>id<sp/>of<sp/>the<sp/>calling<sp/>task</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"></highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/>Notes:<sp/>The<sp/>OS_task_key<sp/>is<sp/>initialized<sp/>by<sp/>the<sp/>task<sp/>switch<sp/>if<sp/>AND<sp/>ONLY<sp/>IF<sp/>the<sp/></highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_task_key<sp/>has<sp/>been<sp/>registered<sp/>via<sp/>OS_TaskRegister(..).<sp/><sp/>If<sp/>this<sp/>is<sp/>not<sp/></highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>prior<sp/>to<sp/>this<sp/>call,<sp/>the<sp/>value<sp/>will<sp/>be<sp/>old<sp/>and<sp/>wrong.</highlight></codeline>
<codeline lineno="1087"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088" refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" kindref="member">OS_TaskGetId</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/>task_id;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>task_id_int;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/>task_key;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/>task_key<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/>task_id<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)pthread_getspecific(<ref refid="osapi_8c_1a8f57932ffa3e6ede0cfdd67b1c08d6ff" kindref="member">thread_key</ref>);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/>memcpy(&amp;<sp/>task_id_int,&amp;task_id,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref>));</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/>task_key<sp/>=<sp/>task_id_int<sp/>&amp;<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(task_key);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskGetId<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_TaskGetIdByName</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"></highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>task<sp/>Id<sp/>given<sp/>the<sp/>name<sp/>of<sp/>a<sp/>task</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"></highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>pointers<sp/>passed<sp/>in<sp/>are<sp/>NULL</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>th<sp/>ename<sp/>to<sp/>found<sp/>is<sp/>too<sp/>long<sp/>to<sp/>begin<sp/>with</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_NOT_FOUND<sp/>if<sp/>the<sp/>name<sp/>wasn&apos;t<sp/>found<sp/>in<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>SUCCESS</highlight></codeline>
<codeline lineno="1112"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114" refid="osapi_8c_1a05df84f4e2a6f26b0985fd29941b5a2d" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a05df84f4e2a6f26b0985fd29941b5a2d" kindref="member">OS_TaskGetIdByName</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*task_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*task_name)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>task_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>allow<sp/>names<sp/>too<sp/>long<sp/>because<sp/>they<sp/>won&apos;t<sp/>be<sp/>found<sp/>at<sp/>all<sp/></highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(task_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>i++)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((OS_task_table[i].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp(OS_task_table[i].name,(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>task_name)<sp/>==<sp/>0<sp/>))</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*task_id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table,</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/><sp/>or<sp/>it<sp/>was,<sp/>and<sp/>the<sp/>task_id<sp/>isn&apos;t<sp/>valid<sp/>anymore<sp/></highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskGetIdByName<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_TaskGetInfo</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"></highlight></codeline>
<codeline lineno="1155"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>will<sp/>pass<sp/>back<sp/>a<sp/>pointer<sp/>to<sp/>structure<sp/>that<sp/>contains<sp/></highlight></codeline>
<codeline lineno="1156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>of<sp/>the<sp/>relevant<sp/>info<sp/>(creator,<sp/>stack<sp/>size,<sp/>priority,<sp/>name)<sp/>about<sp/>the<sp/></highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specified<sp/>task.<sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="comment"></highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>ID<sp/>passed<sp/>to<sp/>it<sp/>is<sp/>invalid</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>task_prop<sp/>pointer<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>it<sp/>copied<sp/>all<sp/>of<sp/>the<sp/>relevant<sp/>info<sp/>over</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164" refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a972b1ce7ff072290ff722439e6a8f538" kindref="member">OS_TaskGetInfo</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>task_id,<sp/><ref refid="struct_o_s__task__prop__t" kindref="compound">OS_task_prop_t</ref><sp/>*task_prop)<sp/><sp/></highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>to<sp/>see<sp/>that<sp/>the<sp/>id<sp/>given<sp/>is<sp/>valid<sp/></highlight></codeline>
<codeline lineno="1176"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(task_id<sp/>&gt;=<sp/>OS_MAX_TASKS<sp/>||<sp/>OS_task_table[task_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>task_prop<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>the<sp/>info<sp/>into<sp/>the<sp/>stucture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>task_prop<sp/>-&gt;<sp/>creator<sp/>=<sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a9e542edb00f632dfd5838d4d6c85f064" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/>task_prop<sp/>-&gt;<sp/>stack_size<sp/>=<sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a149c024dde8c067e023266470cc0a5c9" kindref="member">stack_size</ref>;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>task_prop<sp/>-&gt;<sp/>priority<sp/>=<sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1aaacc10dc5effedf893a59144cd80d4eb" kindref="member">priority</ref>;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>task_prop<sp/>-&gt;<sp/>OStask_id<sp/>=<sp/><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref>)<sp/>OS_task_table[task_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(task_prop-&gt;<sp/>name,<sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1addf7a5e5390a89c77a2dff039554e66f" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_TaskGetInfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Name:<sp/>OS_TaskInstallDeleteHandler</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"></highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Installs<sp/>a<sp/>handler<sp/>for<sp/>when<sp/>the<sp/>task<sp/>is<sp/>deleted.</highlight></codeline>
<codeline lineno="1207"><highlight class="comment"></highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/><sp/><sp/><sp/>returns:<sp/>status</highlight></codeline>
<codeline lineno="1209"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211" refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member">OS_TaskInstallDeleteHandler</ref>(osal_task_entry<sp/>function_pointer)</highlight></codeline>
<codeline lineno="1212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>task_id;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>task_id<sp/>=<sp/><ref refid="osapi_8c_1ad94e801e32c654ffa36c1c5f89c79d3f" kindref="member">OS_TaskGetId</ref>();</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>task_id<sp/>&gt;=<sp/>OS_MAX_TASKS<sp/>)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_task_table[task_id].free<sp/>!=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref><sp/>)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Somehow<sp/>the<sp/>calling<sp/>task<sp/>is<sp/>not<sp/>registered<sp/></highlight></codeline>
<codeline lineno="1235"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Install<sp/>the<sp/>pointer</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_task_table[task_id].<ref refid="struct_o_s__task__record__t_1a2cf31ebb1099f6bf7a2738848cbd4caa" kindref="member">delete_hook_pointer</ref><sp/>=<sp/>function_pointer;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a57fd4fd1e740e643b59cd1925b44537a" kindref="member">OS_task_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="normal">}</highlight><highlight class="comment">/*end<sp/>OS_TaskInstallDeleteHandler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------<sp/>POSIX<sp/>MESSAGE<sp/>QUEUE<sp/>IMPLEMENTATION<sp/>-------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_QueueCreate</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"></highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>Purpose:<sp/>Create<sp/>a<sp/>message<sp/>queue<sp/>which<sp/>can<sp/>be<sp/>refered<sp/>to<sp/>by<sp/>name<sp/>or<sp/>ID</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"></highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>a<sp/>pointer<sp/>passed<sp/>in<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>passed<sp/>in<sp/>is<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>OS_ERR_NO_FREE_IDS<sp/>if<sp/>there<sp/>are<sp/>already<sp/>the<sp/>max<sp/>queues<sp/>created</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>OS_ERR_NAME_TAKEN<sp/>if<sp/>the<sp/>name<sp/>is<sp/>already<sp/>being<sp/>used<sp/>on<sp/>another<sp/>queue</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>OS_ERROR<sp/>if<sp/>the<sp/>OS<sp/>create<sp/>call<sp/>fails</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"></highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/>Notes:<sp/>the<sp/>flags<sp/>parameter<sp/>is<sp/>unused.</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/>---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268" refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1ae3e72f5403b7e3cac2c20ac65a5bb511" kindref="member">OS_QueueCreate</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*queue_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*queue_name,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>queue_depth,</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>data_size,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possible_qid;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>queue_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>queue_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>allow<sp/>names<sp/>too<sp/>long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>truncated,<sp/>two<sp/>names<sp/>might<sp/>be<sp/>the<sp/>same<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(queue_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>queue<sp/>depth<sp/>isn&apos;t<sp/>larger<sp/>than<sp/>our<sp/>maximum<sp/>depth.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(queue_depth<sp/>&gt;<sp/>OS_MAX_QUEUE_DEPTH)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" kindref="member">OS_QUEUE_INVALID_SIZE</ref>;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(possible_qid<sp/>=<sp/>0;<sp/>possible_qid<sp/>&lt;<sp/>OS_MAX_QUEUES;<sp/>possible_qid++)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_queue_table[possible_qid].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>possible_qid<sp/>&gt;=<sp/>OS_MAX_QUEUES<sp/>||<sp/>OS_queue_table[possible_qid].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref>;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>name<sp/>is<sp/>already<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_QUEUES;<sp/>i++)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OS_queue_table[i].free<sp/>==<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>queue_name,<sp/>OS_queue_table[i].name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>possible<sp/>task<sp/>Id<sp/>to<sp/>not<sp/>free<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>no<sp/>other<sp/>task<sp/>can<sp/>try<sp/>to<sp/>use<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>*queue_id<sp/>=<sp/>possible_qid;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_init(&amp;(OS_queue_table[possible_qid].cv),<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1a4c9c635f5619d65fc86525869bc1d23c" kindref="member">max_size</ref><sp/>=<sp/>data_size;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(<sp/>OS_queue_table[*queue_id].name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>queue_name);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>();</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1ad0562998b3f595d2f140a94ff834d060" kindref="member">width</ref><sp/>=<sp/>data_size;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1af87577203ee088e6c684e79d590edcb2" kindref="member">depth</ref><sp/>=<sp/>queue_depth;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[*queue_id].<ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_QueueCreate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/>Name:<sp/>OS_QueueDelete</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"></highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>Purpose:<sp/>Deletes<sp/>the<sp/>specified<sp/>message<sp/>queue.</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"></highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>does<sp/>not<sp/>exist</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/>OS_ERROR<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>to<sp/>delete<sp/>the<sp/>queue<sp/>fails</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"></highlight></codeline>
<codeline lineno="1367"><highlight class="comment"><sp/>Notes:<sp/>If<sp/>There<sp/>are<sp/>messages<sp/>on<sp/>the<sp/>queue,<sp/>they<sp/>will<sp/>be<sp/>lost<sp/>and<sp/>any<sp/>subsequent</highlight></codeline>
<codeline lineno="1368"><highlight class="comment"><sp/>calls<sp/>to<sp/>QueueGet<sp/>or<sp/>QueuePut<sp/>to<sp/>this<sp/>queue<sp/>will<sp/>result<sp/>in<sp/>errors</highlight></codeline>
<codeline lineno="1369"><highlight class="comment"><sp/>---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370" refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a15f67f089080b67931eb4d91564b367e" kindref="member">OS_QueueDelete</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>queue_id)</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>queue_id<sp/>given<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue_id<sp/>&gt;=<sp/>OS_MAX_QUEUES<sp/>||<sp/>OS_queue_table[queue_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Now<sp/>that<sp/>the<sp/>queue<sp/>is<sp/>deleted,<sp/>remove<sp/>its<sp/>&quot;presence&quot;</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>in<sp/>OS_message_q_table<sp/>and<sp/>OS_message_q_name_table</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_destroy(&amp;(OS_queue_table[queue_id].cv));</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ad966a284b4b40328eaed26de6bdc1a7e" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_queue_table[queue_id].name,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a4c9c635f5619d65fc86525869bc1d23c" kindref="member">max_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_QueueDelete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/>Name:<sp/>OS_QueueGet</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"></highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>Purpose:<sp/>Receive<sp/>a<sp/>message<sp/>on<sp/>a<sp/>message<sp/>queue.<sp/><sp/>Will<sp/>pend<sp/>or<sp/>timeout<sp/>on<sp/>the<sp/>receive.</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>given<sp/>ID<sp/>does<sp/>not<sp/>exist</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>OS_ERR_INVALID_POINTER<sp/>if<sp/>a<sp/>pointer<sp/>passed<sp/>in<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>OS_QUEUE_EMPTY<sp/>if<sp/>the<sp/>Queue<sp/>has<sp/>no<sp/>messages<sp/>on<sp/>it<sp/>to<sp/>be<sp/>recieved</highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/>OS_QUEUE_TIMEOUT<sp/>if<sp/>the<sp/>timeout<sp/>was<sp/>OS_PEND<sp/>and<sp/>the<sp/>time<sp/>expired</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/>OS_QUEUE_INVALID_SIZE<sp/>if<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>big<sp/>enough<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maximum<sp/>size<sp/>message</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/>---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428" refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a6e563810965cdff38da7e4ec3347fce8" kindref="member">OS_QueueGet</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>queue_id,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>size,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*size_copied,<sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>timeout)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>ts;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>headIndex;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__data__t" kindref="compound">OS_queue_data_t</ref><sp/>*qData<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>Parameters</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(queue_id<sp/>&gt;=<sp/>OS_MAX_QUEUES<sp/>||<sp/>OS_queue_table[queue_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(data<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(size_copied<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>)</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>size<sp/>&lt;<sp/>OS_queue_table[queue_id].max_size<sp/>)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>The<sp/>buffer<sp/>that<sp/>the<sp/>user<sp/>is<sp/>passing<sp/>in<sp/>is<sp/>potentially<sp/>too<sp/>small</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>RTEMS<sp/>will<sp/>just<sp/>copy<sp/>into<sp/>a<sp/>buffer<sp/>that<sp/>is<sp/>too<sp/>small</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" kindref="member">OS_QUEUE_INVALID_SIZE</ref>;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OS_queue_table[queue_id].head<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/><ref refid="osapi_8h_1ab2b5288ed3f6994990eff6125202d4dd" kindref="member">OS_PEND</ref>)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>A<sp/>signal<sp/>can<sp/>interrupt<sp/>the<sp/>mq_receive<sp/>call,<sp/>so<sp/>the<sp/>call<sp/>has<sp/>to<sp/>be<sp/>done<sp/>with</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>a<sp/>loop</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_wait(&amp;OS_queue_table[queue_id].cv,<sp/>&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((OS_queue_table[queue_id].head<sp/>==<sp/>-1));</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeout<sp/>==<sp/><ref refid="osapi_8h_1a4a2422824f9b38df781a24d5905fe0ce" kindref="member">OS_CHECK</ref>)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>queue<sp/>is<sp/>empty<sp/>so<sp/>return<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a649aefc48b25fa31f54b59fe16fc501f" kindref="member">OS_QUEUE_EMPTY</ref>;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>timeout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" kindref="member">OS_CompAbsDelayTime</ref>(<sp/>timeout<sp/>,<sp/>&amp;ts)<sp/>;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_timedwait(&amp;OS_queue_table[queue_id].cv,<sp/>&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((OS_queue_table[queue_id].head<sp/>==<sp/>-1)<sp/>&amp;&amp;<sp/>(ret<sp/>!=<sp/>ETIMEDOUT));</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>==<sp/>ETIMEDOUT)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a11a8fcc6118adb5c801e6b84739af6a0" kindref="member">OS_QUEUE_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>queue<sp/>is<sp/>not<sp/>empty.<sp/><sp/>Pop<sp/>an<sp/>object<sp/>from<sp/>the<sp/>head.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>headIndex<sp/>=<sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>qData<sp/>=<sp/>&amp;OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1aa9bd150b576c2fa02661cfc8882d7506" kindref="member">qData</ref>[headIndex];</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(data,<sp/>&amp;qData-&gt;<ref refid="struct_o_s__queue__data__t_1af5941887a7ec6d0551fcee8b22720b7c" kindref="member">buffer</ref>[0],<sp/>qData-&gt;<ref refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(qData-&gt;<ref refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" kindref="member">size</ref><sp/>!=<sp/>size)</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OS_printf(&quot;3:<sp/>%u<sp/>%u\n&quot;,<sp/>qData-&gt;size,<sp/>size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" kindref="member">OS_QUEUE_INVALID_SIZE</ref>;</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>*size_copied<sp/>=<sp/>qData-&gt;<ref refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>there<sp/>are<sp/>more<sp/>objects<sp/>in<sp/>the<sp/>queue.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OS_queue_table[queue_id].tail<sp/>==<sp/>headIndex)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>no<sp/>more<sp/>objects<sp/>in<sp/>the<sp/>queue.<sp/><sp/>Set<sp/>the<sp/>queue<sp/>to<sp/>empty</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>setting<sp/>the<sp/>head<sp/>to<sp/>-1.</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>more<sp/>objects<sp/>in<sp/>the<sp/>queue.<sp/><sp/>Move<sp/>the<sp/>head<sp/>to<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((headIndex<sp/>+<sp/>1)<sp/>&gt;=<sp/>OS_queue_table[queue_id].depth)</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>head<sp/>is<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array.<sp/><sp/>Move<sp/>it<sp/>back<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>beginning.</highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref>++;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_QueueGet<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/>Name:<sp/>OS_QueuePut</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"></highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>Purpose:<sp/>Put<sp/>a<sp/>message<sp/>on<sp/>a<sp/>message<sp/>queue.</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"></highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>queue<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>queue</highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>data<sp/>pointer<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/>OS_QUEUE_FULL<sp/>if<sp/>the<sp/>queue<sp/>cannot<sp/>accept<sp/>another<sp/>message</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/>OS_ERROR<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>returns<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/>OS_SUCCESS<sp/>if<sp/>SUCCESS</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"></highlight></codeline>
<codeline lineno="1577"><highlight class="comment"><sp/>Notes:<sp/>The<sp/>flags<sp/>parameter<sp/>is<sp/>not<sp/>used.<sp/><sp/>The<sp/>message<sp/>put<sp/>is<sp/>always<sp/>configured<sp/>to</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/>immediately<sp/>return<sp/>an<sp/>error<sp/>if<sp/>the<sp/>receiving<sp/>message<sp/>queue<sp/>is<sp/>full.</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/>---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580" refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a514794c514fed167939e3bc870d50d44" kindref="member">OS_QueuePut</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>queue_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>size,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>flags)</highlight></codeline>
<codeline lineno="1581"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_o_s__queue__data__t" kindref="compound">OS_queue_data_t</ref><sp/>*qData;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1597"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>Parameters</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(queue_id<sp/>&gt;=<sp/>OS_MAX_QUEUES<sp/>||<sp/>OS_queue_table[queue_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(size<sp/>&gt;<sp/>OS_queue_table[queue_id].width)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" kindref="member">OS_QUEUE_INVALID_SIZE</ref>;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>if<sp/>queue<sp/>is<sp/>full.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(((OS_queue_table[queue_id].head<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>(OS_queue_table[queue_id].tail<sp/>==<sp/>(OS_queue_table[queue_id].depth-1)))<sp/>||</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(OS_queue_table[queue_id].tail<sp/>==<sp/>(OS_queue_table[queue_id].head<sp/>-<sp/>1)))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a1bb3ced7e39cd5e1ca6d4c45f153cbc2" kindref="member">OS_QUEUE_FULL</ref>;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(OS_queue_table[queue_id].head<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1ae87a08ac900956c7be6b9cc48fb8dbb1" kindref="member">head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>where<sp/>to<sp/>move<sp/>the<sp/>tail.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((OS_queue_table[queue_id].tail<sp/>+<sp/>1)<sp/>&gt;=<sp/>OS_queue_table[queue_id].depth)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>tail<sp/>is<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>array.<sp/><sp/>Move<sp/>it<sp/>back<sp/>to<sp/>the<sp/>beginning.</highlight></codeline>
<codeline lineno="1636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref>++;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>the<sp/>data<sp/>to<sp/>the<sp/>new<sp/>tail<sp/>object.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/>qData<sp/>=<sp/>&amp;OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1aa9bd150b576c2fa02661cfc8882d7506" kindref="member">qData</ref>[OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a432195ab591a32936f78b192e903c906" kindref="member">tail</ref>];</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;qData-&gt;<ref refid="struct_o_s__queue__data__t_1af5941887a7ec6d0551fcee8b22720b7c" kindref="member">buffer</ref>,<sp/>data,<sp/>size);</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/>qData-&gt;<ref refid="struct_o_s__queue__data__t_1a8e9dff0a0a9dc150abf263e5874c8550" kindref="member">size</ref><sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_signal(&amp;OS_queue_table[queue_id].cv);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_QueuePut<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_QueueGetIdByName</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"></highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>queue<sp/>Id<sp/>given<sp/>the<sp/>name<sp/>of<sp/>the<sp/>queue.<sp/>The</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>id<sp/>of<sp/>the<sp/>queue<sp/>is<sp/>passed<sp/>back<sp/>in<sp/>queue_id</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"></highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>name<sp/>or<sp/>id<sp/>pointers<sp/>are<sp/>NULL</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>the<sp/>name<sp/>passed<sp/>in<sp/>is<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_NOT_FOUND<sp/>the<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1672"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674" refid="osapi_8c_1ab5b6f35ad093859012d4d4d482cdfb9d" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1ab5b6f35ad093859012d4d4d482cdfb9d" kindref="member">OS_QueueGetIdByName</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*queue_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*queue_name)</highlight></codeline>
<codeline lineno="1675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(queue_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>queue_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>name<sp/>too<sp/>long<sp/>wouldn&apos;t<sp/>have<sp/>been<sp/>allowed<sp/>in<sp/>the<sp/>first<sp/>place</highlight></codeline>
<codeline lineno="1689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>we<sp/>definitely<sp/>won&apos;t<sp/>find<sp/>a<sp/>name<sp/>too<sp/>long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(queue_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_QUEUES;<sp/>i++)</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_queue_table[i].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp(OS_queue_table[i].name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>queue_name)<sp/>==<sp/>0<sp/>))</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*queue_id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table,</highlight></codeline>
<codeline lineno="1707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>or<sp/>it<sp/>was,<sp/>and<sp/>the<sp/>queue_id<sp/>isn&apos;t<sp/>valid<sp/>anymore<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_QueueGetIdByName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_QueueGetInfo</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"></highlight></codeline>
<codeline lineno="1715"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>will<sp/>pass<sp/>back<sp/>a<sp/>pointer<sp/>to<sp/>structure<sp/>that<sp/>contains<sp/></highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>of<sp/>the<sp/>relevant<sp/>info<sp/>(name<sp/>and<sp/>creator)<sp/>about<sp/>the<sp/>specified<sp/>queue.<sp/></highlight></codeline>
<codeline lineno="1717"><highlight class="comment"></highlight></codeline>
<codeline lineno="1718"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>queue_prop<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>ID<sp/>given<sp/>is<sp/>not<sp/><sp/>a<sp/>valid<sp/>queue</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>the<sp/>info<sp/>was<sp/>copied<sp/>over<sp/>correctly</highlight></codeline>
<codeline lineno="1721"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722" refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a90d4bcec6a9e2fa11374cfb6000d89db" kindref="member">OS_QueueGetInfo</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>queue_id,<sp/><ref refid="struct_o_s__queue__prop__t" kindref="compound">OS_queue_prop_t</ref><sp/>*queue_prop)<sp/><sp/></highlight></codeline>
<codeline lineno="1723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>that<sp/>the<sp/>id<sp/>given<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue_prop<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue_id<sp/>&gt;=<sp/>OS_MAX_QUEUES<sp/>||<sp/>OS_queue_table[queue_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>the<sp/>info<sp/>into<sp/>the<sp/>stucture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/>queue_prop<sp/>-&gt;<sp/>creator<sp/>=<sp/><sp/><sp/>OS_queue_table[queue_id].<ref refid="struct_o_s__queue__record__t_1a25d0be4ee07bb6c85a24002b3ba5c9e9" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(queue_prop<sp/>-&gt;<sp/>name,<sp/>OS_queue_table[queue_id].name);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1aeb705f8a5feb8fa625cbe587efa130d8" kindref="member">OS_queue_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1754"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_QueueGetInfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************************</highlight></codeline>
<codeline lineno="1757"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SEMAPHORE<sp/>API</highlight></codeline>
<codeline lineno="1758"><highlight class="comment">****************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1761"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_BinSemCreate</highlight></codeline>
<codeline lineno="1762"><highlight class="comment"></highlight></codeline>
<codeline lineno="1763"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Creates<sp/>a<sp/>binary<sp/>semaphore<sp/>with<sp/>initial<sp/>value<sp/>specified<sp/>by</highlight></codeline>
<codeline lineno="1764"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_initial_value<sp/>and<sp/>name<sp/>specified<sp/>by<sp/>sem_name.<sp/>sem_id<sp/>will<sp/>be<sp/></highlight></codeline>
<codeline lineno="1765"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>to<sp/>the<sp/>caller</highlight></codeline>
<codeline lineno="1766"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1767"><highlight class="comment"><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>sen<sp/>name<sp/>or<sp/>sem_id<sp/>are<sp/>NULL</highlight></codeline>
<codeline lineno="1768"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>given<sp/>is<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NO_FREE_IDS<sp/>if<sp/>all<sp/>of<sp/>the<sp/>semaphore<sp/>ids<sp/>are<sp/>taken</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TAKEN<sp/>if<sp/>this<sp/>is<sp/>already<sp/>the<sp/>name<sp/>of<sp/>a<sp/>binary<sp/>semaphore</highlight></codeline>
<codeline lineno="1771"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="1772"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1774"><highlight class="comment"></highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/><sp/><sp/>Notes:<sp/>options<sp/>is<sp/>an<sp/>unused<sp/>parameter<sp/></highlight></codeline>
<codeline lineno="1776"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777" refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a03750816f6dff3a2adfcebde8b07175d" kindref="member">OS_BinSemCreate</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*sem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sem_name,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_initial_value,</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>options)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possible_semid;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutexattr_t<sp/>mutex_attr;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>Parameters<sp/></highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sem_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>for<sp/>maximum<sp/>name<sp/>length<sp/></highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(sem_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(possible_semid<sp/>=<sp/>0;<sp/>possible_semid<sp/>&lt;<sp/>OS_MAX_BIN_SEMAPHORES;<sp/>possible_semid++)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_bin_sem_table[possible_semid].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((possible_semid<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES)<sp/>||<sp/><sp/></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(OS_bin_sem_table[possible_semid].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>))</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref>;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>name<sp/>is<sp/>already<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_BIN_SEMAPHORES;<sp/>i++)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OS_bin_sem_table[i].free<sp/>==<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name,<sp/>OS_bin_sem_table[i].name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref>;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>value<sp/>is<sp/>0<sp/>or<sp/>1<sp/></highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_initial_value<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_initial_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sem_initial_value<sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_initial_value<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>pthread<sp/>mutex<sp/>attribute<sp/>structure<sp/>with<sp/>default<sp/>values<sp/></highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_mutexattr_init(&amp;mutex_attr);</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Use<sp/>priority<sp/>inheritance<sp/><sp/></highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_mutexattr_setprotocol(&amp;mutex_attr,PTHREAD_PRIO_INHERIT);</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>mutex<sp/>that<sp/>is<sp/>used<sp/>with<sp/>the<sp/>condition<sp/>variable</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_mutex_init(&amp;(OS_bin_sem_table[possible_semid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mutex_attr);</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>condition<sp/>variable</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_cond_init(&amp;(OS_bin_sem_table[possible_semid].cv),<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1873"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>fill<sp/>out<sp/>the<sp/>proper<sp/>OSAL<sp/>table<sp/>fields</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sem_id<sp/>=<sp/>possible_semid;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_bin_sem_table[*sem_id].name<sp/>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[*sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>();</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[*sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" kindref="member">max_value</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[*sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>=<sp/>sem_initial_value;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[*sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>table<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_cond_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutex_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_setprotocol<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1925"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemCreate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Name:<sp/>OS_BinSemDelete</highlight></codeline>
<codeline lineno="1929"><highlight class="comment"></highlight></codeline>
<codeline lineno="1930"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Deletes<sp/>the<sp/>specified<sp/>Binary<sp/>Semaphore.</highlight></codeline>
<codeline lineno="1931"><highlight class="comment"></highlight></codeline>
<codeline lineno="1932"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>binary<sp/>semaphore</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1936"><highlight class="comment"><sp/><sp/><sp/><sp/>Notes:<sp/>Since<sp/>we<sp/>can&apos;t<sp/>delete<sp/>a<sp/>semaphore<sp/>which<sp/>is<sp/>currently<sp/>locked<sp/>by<sp/>some<sp/>task<sp/></highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(as<sp/>it<sp/>may<sp/>ber<sp/>crucial<sp/>to<sp/>completing<sp/>the<sp/>task),<sp/>the<sp/>semaphore<sp/>must<sp/>be<sp/>full<sp/>to</highlight></codeline>
<codeline lineno="1938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow<sp/>deletion.</highlight></codeline>
<codeline lineno="1939"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940" refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a4445a375ddc73d0200f10675496a5c4a" kindref="member">OS_BinSemDelete</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>sem_id<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES<sp/>||<sp/>OS_bin_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>Id<sp/>from<sp/>the<sp/>table,<sp/>and<sp/>its<sp/>name,<sp/>so<sp/>that<sp/>it<sp/>cannot<sp/>be<sp/>found<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_destroy(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_destroy(&amp;(OS_bin_sem_table[sem_id].cv));</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a57bb1927c8965de8110c34bebebf9e3b" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_bin_sem_table[sem_id].name<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" kindref="member">max_value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemDelete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_BinSemGive</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"></highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>function<sp/><sp/>unlocks<sp/>the<sp/>semaphore<sp/>referenced<sp/>by<sp/>sem_id<sp/>by<sp/>performing</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>semaphore<sp/>unlock<sp/>operation<sp/>on<sp/>that<sp/>semaphore.If<sp/>the<sp/>semaphore<sp/>value<sp/></highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resulting<sp/>from<sp/>this<sp/>operation<sp/>is<sp/>positive,<sp/>then<sp/>no<sp/>threads<sp/>were<sp/>blocked<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waiting<sp/>for<sp/>the<sp/>semaphore<sp/>to<sp/>become<sp/>unlocked;<sp/>the<sp/>semaphore<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simply<sp/>incremented<sp/>for<sp/>this<sp/>semaphore.</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"></highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SEM_FAILURE<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/><sp/>initialized<sp/>or<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>array<sp/>of<sp/>semaphores<sp/>defined<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>binary<sp/>semaphore</highlight></codeline>
<codeline lineno="1989"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="1990"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1991"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992" refid="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a6b163c7bbcfb7d7001be8b7fb5de7317" kindref="member">OS_BinSemGive</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id<sp/>)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES<sp/>||<sp/>OS_bin_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>(<sp/>not<sp/>the<sp/>table!<sp/>)<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>sem<sp/>value<sp/>is<sp/>not<sp/>full<sp/>(<sp/>1<sp/>)<sp/>then<sp/>increment<sp/>it.</highlight></codeline>
<codeline lineno="2018"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_bin_sem_table[sem_id].current_value<sp/><sp/>&lt;<sp/>OS_bin_sem_table[sem_id].max_value<sp/>)</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>++;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_signal(&amp;(OS_bin_sem_table[sem_id].cv));</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemGive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_BinSemFlush</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"></highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>function<sp/>unblocks<sp/>all<sp/>tasks<sp/>pending<sp/>on<sp/>the<sp/>specified<sp/>semaphore.<sp/>However,</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>function<sp/>does<sp/>not<sp/>change<sp/>the<sp/>state<sp/>of<sp/>the<sp/>semaphore.</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"></highlight></codeline>
<codeline lineno="2035"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SEM_FAILURE<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/><sp/>initialized<sp/>or<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>array<sp/>of<sp/>semaphores<sp/>defined<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>binary<sp/>semaphore</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2040"><highlight class="comment"></highlight></codeline>
<codeline lineno="2041"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2042" refid="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a1cecc6e34056dc4a119da98e021e1a80" kindref="member">OS_BinSemFlush</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="2043"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>ret_val;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES<sp/>||<sp/>OS_bin_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>(<sp/>not<sp/>the<sp/>table!<sp/>)<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Release<sp/>all<sp/>threads<sp/>waiting<sp/>on<sp/>the<sp/>binary<sp/>semaphore<sp/></highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_broadcast(&amp;(OS_bin_sem_table[sem_id].cv));</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref><sp/>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>=<sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a762ae9ac5cef7113bec346079807f543" kindref="member">max_value</ref>;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret_val);</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemFlush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2087"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/><sp/><sp/><sp/>OS_BinSemTake</highlight></codeline>
<codeline lineno="2088"><highlight class="comment"></highlight></codeline>
<codeline lineno="2089"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>locks<sp/>the<sp/>semaphore<sp/>referenced<sp/>by<sp/>sem_id<sp/>by<sp/>performing<sp/>a<sp/></highlight></codeline>
<codeline lineno="2090"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semaphore<sp/>lock<sp/>operation<sp/>on<sp/>that<sp/>semaphore.If<sp/>the<sp/>semaphore<sp/>value<sp/></highlight></codeline>
<codeline lineno="2091"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>currently<sp/>zero,<sp/>then<sp/>the<sp/>calling<sp/>thread<sp/>shall<sp/>not<sp/>return<sp/>from<sp/></highlight></codeline>
<codeline lineno="2092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>call<sp/>until<sp/>it<sp/>either<sp/>locks<sp/>the<sp/>semaphore<sp/>or<sp/>the<sp/>call<sp/>is<sp/></highlight></codeline>
<codeline lineno="2093"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupted<sp/>by<sp/>a<sp/>signal.</highlight></codeline>
<codeline lineno="2094"><highlight class="comment"></highlight></codeline>
<codeline lineno="2095"><highlight class="comment"><sp/><sp/><sp/><sp/>Return:<sp/><sp/>OS_ERR_INVALID_ID<sp/>the<sp/>Id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>binary<sp/>semaphore</highlight></codeline>
<codeline lineno="2096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="2097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2098"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2099"><highlight class="comment">----------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100" refid="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a5b325c1513b05c9fdb7b35849f1c1e95" kindref="member">OS_BinSemTake</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id<sp/>)</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>ret_val;</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES<sp/><sp/>||<sp/>OS_bin_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>less<sp/>than<sp/>the<sp/>max<sp/>(1)<sp/></highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>wait<sp/>until<sp/>it<sp/>is<sp/>available</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>max<sp/>(1),<sp/>then<sp/>grab<sp/>the<sp/>resource<sp/>without<sp/>waiting</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_bin_sem_table[sem_id].current_value<sp/>&lt;<sp/>OS_bin_sem_table[sem_id].max_value<sp/>)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Wait<sp/>on<sp/>the<sp/>condition<sp/>variable.<sp/>Calling<sp/>this<sp/>function<sp/>unlocks<sp/>the<sp/>mutex<sp/>and<sp/></highlight></codeline>
<codeline lineno="2134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>re-aquires<sp/>the<sp/>mutex<sp/>when<sp/>the<sp/>function<sp/>returns.<sp/>This<sp/>allows<sp/>the<sp/>function<sp/>that</highlight></codeline>
<codeline lineno="2135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>calls<sp/>the<sp/>pthread_cond_signal<sp/>or<sp/>pthread_cond_broadcast<sp/>to<sp/>aquire<sp/>the<sp/>mutex</highlight></codeline>
<codeline lineno="2136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_wait(&amp;(OS_bin_sem_table[sem_id].cv),&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Decrement<sp/>the<sp/>counter</highlight></codeline>
<codeline lineno="2143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret_val);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemTake<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_BinSemTimedWait</highlight></codeline>
<codeline lineno="2167"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>function<sp/>locks<sp/>the<sp/>semaphore<sp/>referenced<sp/>by<sp/>sem_id<sp/>.<sp/>However,</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>semaphore<sp/>cannot<sp/>be<sp/>locked<sp/>without<sp/>waiting<sp/>for<sp/>another<sp/>process</highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>thread<sp/>to<sp/>unlock<sp/>the<sp/>semaphore<sp/>,<sp/>this<sp/>wait<sp/>shall<sp/>be<sp/>terminated<sp/>when<sp/></highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>timeout<sp/>,msecs,<sp/>expires.</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"></highlight></codeline>
<codeline lineno="2173"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SEM_TIMEOUT<sp/>if<sp/>semaphore<sp/>was<sp/>not<sp/>relinquished<sp/>in<sp/>time</highlight></codeline>
<codeline lineno="2174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/>initialized<sp/>or<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2176"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>array<sp/>of<sp/>semaphores<sp/>defined<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="2177"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>ID<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>semaphore<sp/>ID</highlight></codeline>
<codeline lineno="2178"><highlight class="comment"></highlight></codeline>
<codeline lineno="2179"><highlight class="comment">----------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180" refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a780bf1ed9629b32f78560ad45a7853a0" kindref="member">OS_BinSemTimedWait</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>msecs<sp/>)</highlight></codeline>
<codeline lineno="2181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><sp/>ts;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES)<sp/>||<sp/>(OS_bin_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>)</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2199"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Compute<sp/>an<sp/>absolute<sp/>time<sp/>for<sp/>the<sp/>delay</highlight></codeline>
<codeline lineno="2200"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" kindref="member">OS_CompAbsDelayTime</ref>(msecs,<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2211"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>less<sp/>than<sp/>the<sp/>max<sp/>(1)<sp/></highlight></codeline>
<codeline lineno="2212"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>wait<sp/>until<sp/>it<sp/>is<sp/>available</highlight></codeline>
<codeline lineno="2213"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>max<sp/>(1),<sp/>then<sp/>grab<sp/>the<sp/>resource</highlight></codeline>
<codeline lineno="2214"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_bin_sem_table[sem_id].current_value<sp/>&lt;<sp/>OS_bin_sem_table[sem_id].max_value<sp/>)</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Wait<sp/>on<sp/>the<sp/>condition<sp/>variable.<sp/>Calling<sp/>this<sp/>function<sp/>unlocks<sp/>the<sp/>mutex<sp/>and<sp/></highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>re-aquires<sp/>the<sp/>mutex<sp/>when<sp/>the<sp/>function<sp/>returns.<sp/>This<sp/>allows<sp/>the<sp/>function<sp/>that</highlight></codeline>
<codeline lineno="2220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>calls<sp/>the<sp/>pthread_cond_signal<sp/>or<sp/>pthread_cond_broadcast<sp/>to<sp/>aquire<sp/>the<sp/>mutex</highlight></codeline>
<codeline lineno="2221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_timedwait(&amp;(OS_bin_sem_table[sem_id].cv),<sp/>&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>ETIMEDOUT<sp/>)</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" kindref="member">OS_SEM_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_bin_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_BinSemGetIdByName</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"></highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>binary<sp/>sem<sp/>Id<sp/>given<sp/>the<sp/>name<sp/>of<sp/>a<sp/>bin_sem</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>id<sp/>is<sp/>returned<sp/>through<sp/>sem_id</highlight></codeline>
<codeline lineno="2255"><highlight class="comment"></highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>is<sp/>semid<sp/>or<sp/>sem_name<sp/>are<sp/>NULL<sp/>pointers</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>given<sp/>is<sp/>to<sp/>long<sp/>to<sp/>have<sp/>been<sp/>stored</highlight></codeline>
<codeline lineno="2258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_NOT_FOUND<sp/>if<sp/>the<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="2259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2261"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262" refid="osapi_8c_1ae1f491ab305fd4d1386f20a4177cd2f3" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1ae1f491ab305fd4d1386f20a4177cd2f3" kindref="member">OS_BinSemGetIdByName</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*sem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sem_name)</highlight></codeline>
<codeline lineno="2263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sem_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2278"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>a<sp/>name<sp/>too<sp/>long<sp/>wouldn&apos;t<sp/>have<sp/>been<sp/>allowed<sp/>in<sp/>the<sp/>first<sp/>place</highlight></codeline>
<codeline lineno="2279"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>so<sp/>we<sp/>definitely<sp/>won&apos;t<sp/>find<sp/>a<sp/>name<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="2280"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(sem_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_BIN_SEMAPHORES;<sp/>i++)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_bin_sem_table[i].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp<sp/>(OS_bin_sem_table[i].name<sp/>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sem_id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>The<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table,</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>or<sp/>it<sp/>was,<sp/>and<sp/>the<sp/>sem_id<sp/>isn&apos;t<sp/>valid<sp/>anymore<sp/></highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2301"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemGetIdByName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2303"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_BinSemGetInfo</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"></highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>will<sp/>pass<sp/>back<sp/>a<sp/>pointer<sp/>to<sp/>structure<sp/>that<sp/>contains<sp/></highlight></codeline>
<codeline lineno="2306"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>of<sp/>the<sp/>relevant<sp/>info(<sp/>name<sp/>and<sp/>creator)<sp/>about<sp/>the<sp/>specified<sp/>binary</highlight></codeline>
<codeline lineno="2307"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semaphore.</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2309"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>semaphore<sp/></highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>bin_prop<sp/>pointer<sp/>is<sp/>null</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2312"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314" refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a2365a5fa367b3e3779fcd39a7e86f6ab" kindref="member">OS_BinSemGetInfo</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id,<sp/><ref refid="struct_o_s__bin__sem__prop__t" kindref="compound">OS_bin_sem_prop_t</ref><sp/>*bin_prop)<sp/><sp/></highlight></codeline>
<codeline lineno="2315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_BIN_SEMAPHORES<sp/>||<sp/>OS_bin_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_prop<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>the<sp/>info<sp/>into<sp/>the<sp/>stucture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/>bin_prop<sp/>-&gt;<ref refid="struct_o_s__bin__sem__prop__t_1ac018a025a8a87840c03b20f42901fb3c" kindref="member">creator</ref><sp/>=<sp/><sp/><sp/><sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a61f4aa4ba01bc85247837b22a4ec5dfd" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>bin_prop<sp/>-&gt;<sp/>value<sp/>=<sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a367e833ae3c53f50b51e1ddc6976c225" kindref="member">current_value</ref><sp/>;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(bin_prop-&gt;<sp/>name,<sp/>OS_bin_sem_table[sem_id].<ref refid="struct_o_s__bin__sem__record__t_1a2e6f79f675357b1a4dd3a048997e18f9" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abbcab5769eb8e745771cc2d5d879beae" kindref="member">OS_bin_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2345"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemGetInfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2348"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_CountSemCreate</highlight></codeline>
<codeline lineno="2349"><highlight class="comment"></highlight></codeline>
<codeline lineno="2350"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Creates<sp/>a<sp/>counting<sp/>semaphore<sp/>with<sp/>initial<sp/>value<sp/>specified<sp/>by</highlight></codeline>
<codeline lineno="2351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_initial_value<sp/>and<sp/>name<sp/>specified<sp/>by<sp/>sem_name.<sp/>sem_id<sp/>will<sp/>be<sp/></highlight></codeline>
<codeline lineno="2352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>returned<sp/>to<sp/>the<sp/>caller</highlight></codeline>
<codeline lineno="2353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2354"><highlight class="comment"><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>sen<sp/>name<sp/>or<sp/>sem_id<sp/>are<sp/>NULL</highlight></codeline>
<codeline lineno="2355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>given<sp/>is<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="2356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NO_FREE_IDS<sp/>if<sp/>all<sp/>of<sp/>the<sp/>semaphore<sp/>ids<sp/>are<sp/>taken</highlight></codeline>
<codeline lineno="2357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TAKEN<sp/>if<sp/>this<sp/>is<sp/>already<sp/>the<sp/>name<sp/>of<sp/>a<sp/>counting<sp/>semaphore</highlight></codeline>
<codeline lineno="2358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="2359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_INVALID_SEM_VALUE<sp/>if<sp/>the<sp/>semaphore<sp/>value<sp/>is<sp/>too<sp/>high</highlight></codeline>
<codeline lineno="2360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2362"><highlight class="comment"></highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/><sp/><sp/>Notes:<sp/>options<sp/>is<sp/>an<sp/>unused<sp/>parameter<sp/></highlight></codeline>
<codeline lineno="2364"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365" refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a078ac65c4cf2acda58fa915fbdb188f6" kindref="member">OS_CountSemCreate</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*sem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sem_name,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_initial_value,</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>options)</highlight></codeline>
<codeline lineno="2367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possible_semid;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutexattr_t<sp/>mutex_attr;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2381"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>Parameters<sp/></highlight></codeline>
<codeline lineno="2382"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sem_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2389"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>for<sp/>maximum<sp/>name<sp/>length<sp/></highlight></codeline>
<codeline lineno="2390"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(sem_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2397"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>value<sp/>is<sp/>between<sp/>0<sp/>and<sp/>SEM_VALUE_MAX<sp/></highlight></codeline>
<codeline lineno="2398"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_initial_value<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_initial_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>sem_initial_value<sp/>&gt;<sp/><ref refid="cfe__psp__start_8c_1a2961bb23950351c6b10976674c27ddaf" kindref="member">SEM_VALUE_MAX</ref><sp/>)</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1aaca29cda15d375e04dd23c099e652577" kindref="member">OS_INVALID_SEM_VALUE</ref>;</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(possible_semid<sp/>=<sp/>0;<sp/>possible_semid<sp/>&lt;<sp/>OS_MAX_COUNT_SEMAPHORES;<sp/>possible_semid++)</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_count_sem_table[possible_semid].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((possible_semid<sp/>&gt;=<sp/>OS_MAX_COUNT_SEMAPHORES)<sp/>||<sp/><sp/></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(OS_count_sem_table[possible_semid].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>))</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref>;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>name<sp/>is<sp/>already<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_COUNT_SEMAPHORES;<sp/>i++)</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OS_count_sem_table[i].free<sp/>==<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name,<sp/>OS_count_sem_table[i].name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref>;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2436"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>pthread<sp/>mutex<sp/>attribute<sp/>structure<sp/>with<sp/>default<sp/>values<sp/></highlight></codeline>
<codeline lineno="2437"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_mutexattr_init(&amp;mutex_attr);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2443"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Use<sp/>priority<sp/>inheritance<sp/><sp/></highlight></codeline>
<codeline lineno="2444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_mutexattr_setprotocol(&amp;mutex_attr,PTHREAD_PRIO_INHERIT);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>mutex<sp/>that<sp/>is<sp/>used<sp/>with<sp/>the<sp/>condition<sp/>variable</highlight></codeline>
<codeline lineno="2450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_mutex_init(&amp;(OS_count_sem_table[possible_semid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mutex_attr);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Initialize<sp/>the<sp/>condition<sp/>variable</highlight></codeline>
<codeline lineno="2456"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>pthread_cond_init(&amp;(OS_count_sem_table[possible_semid].cv),<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Status<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2461"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>fill<sp/>out<sp/>the<sp/>proper<sp/>OSAL<sp/>table<sp/>fields</highlight></codeline>
<codeline lineno="2462"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sem_id<sp/>=<sp/>possible_semid;</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_count_sem_table[*sem_id].name<sp/>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[*sem_id].<ref refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>();</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[*sem_id].<ref refid="struct_o_s__count__sem__record__t_1a27e7e20c856b25879a5f5b557f1b76ed" kindref="member">max_value</ref><sp/>=<sp/><ref refid="cfe__psp__start_8c_1a2961bb23950351c6b10976674c27ddaf" kindref="member">SEM_VALUE_MAX</ref>;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[*sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>=<sp/>sem_initial_value;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[*sem_id].<ref refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>table<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_cond_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutex_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_setprotocol<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>pthread_mutexattr_init<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_CountSemCreate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2516"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Name:<sp/>OS_CountSemDelete</highlight></codeline>
<codeline lineno="2517"><highlight class="comment"></highlight></codeline>
<codeline lineno="2518"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Deletes<sp/>the<sp/>specified<sp/>Countary<sp/>Semaphore.</highlight></codeline>
<codeline lineno="2519"><highlight class="comment"></highlight></codeline>
<codeline lineno="2520"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>counting<sp/>semaphore</highlight></codeline>
<codeline lineno="2521"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="2522"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2523"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2524"><highlight class="comment"><sp/><sp/><sp/><sp/>Notes:<sp/>Since<sp/>we<sp/>can&apos;t<sp/>delete<sp/>a<sp/>semaphore<sp/>which<sp/>is<sp/>currently<sp/>locked<sp/>by<sp/>some<sp/>task<sp/></highlight></codeline>
<codeline lineno="2525"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(as<sp/>it<sp/>may<sp/>ber<sp/>crucial<sp/>to<sp/>completing<sp/>the<sp/>task),<sp/>the<sp/>semaphore<sp/>must<sp/>be<sp/>full<sp/>to</highlight></codeline>
<codeline lineno="2526"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow<sp/>deletion.</highlight></codeline>
<codeline lineno="2527"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528" refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a33fe7baba857372fb0bb54b39403deee" kindref="member">OS_CountSemDelete</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>sem_id<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_COUNT_SEMAPHORES<sp/>||<sp/>OS_count_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>Id<sp/>from<sp/>the<sp/>table,<sp/>and<sp/>its<sp/>name,<sp/>so<sp/>that<sp/>it<sp/>cannot<sp/>be<sp/>found<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_destroy(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_destroy(&amp;(OS_count_sem_table[sem_id].cv));</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1abc2e043fe1a8a67d551d8f06f4e61234" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_count_sem_table[sem_id].name<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a27e7e20c856b25879a5f5b557f1b76ed" kindref="member">max_value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_CountSemDelete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2564"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_CountSemGive</highlight></codeline>
<codeline lineno="2565"><highlight class="comment"></highlight></codeline>
<codeline lineno="2566"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>function<sp/><sp/>unlocks<sp/>the<sp/>semaphore<sp/>referenced<sp/>by<sp/>sem_id<sp/>by<sp/>performing</highlight></codeline>
<codeline lineno="2567"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>semaphore<sp/>unlock<sp/>operation<sp/>on<sp/>that<sp/>semaphore.If<sp/>the<sp/>semaphore<sp/>value<sp/></highlight></codeline>
<codeline lineno="2568"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resulting<sp/>from<sp/>this<sp/>operation<sp/>is<sp/>positive,<sp/>then<sp/>no<sp/>threads<sp/>were<sp/>blocked<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waiting<sp/>for<sp/>the<sp/>semaphore<sp/>to<sp/>become<sp/>unlocked;<sp/>the<sp/>semaphore<sp/>value<sp/>is</highlight></codeline>
<codeline lineno="2570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>simply<sp/>incremented<sp/>for<sp/>this<sp/>semaphore.</highlight></codeline>
<codeline lineno="2571"><highlight class="comment"></highlight></codeline>
<codeline lineno="2572"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2573"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SEM_FAILURE<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/><sp/>initialized<sp/>or<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2574"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>array<sp/>of<sp/>semaphores<sp/>defined<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="2575"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>counting<sp/>semaphore</highlight></codeline>
<codeline lineno="2576"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2577"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2578"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579" refid="osapi_8c_1aa86572454ea836feb25ff46ed5962698" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1aa86572454ea836feb25ff46ed5962698" kindref="member">OS_CountSemGive</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id<sp/>)</highlight></codeline>
<codeline lineno="2580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_COUNT_SEMAPHORES<sp/>||<sp/>OS_count_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>(<sp/>not<sp/>the<sp/>table!<sp/>)<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2604"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>sem<sp/>value<sp/>is<sp/>less<sp/>than<sp/>or<sp/>equal<sp/>to<sp/>0,<sp/>there<sp/>are<sp/>waiters.</highlight></codeline>
<codeline lineno="2605"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>count<sp/>is<sp/>from<sp/>1<sp/>to<sp/>max,<sp/>there<sp/>are<sp/>no<sp/>waiters</highlight></codeline>
<codeline lineno="2606"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_count_sem_table[sem_id].current_value<sp/><sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>++;</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_cond_signal(&amp;(OS_count_sem_table[sem_id].cv));</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_count_sem_table[sem_id].current_value<sp/><sp/>&lt;<sp/>OS_count_sem_table[sem_id].max_value<sp/>)</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>++;</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_CountSemGive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2624"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/><sp/><sp/><sp/>OS_CountSemTake</highlight></codeline>
<codeline lineno="2625"><highlight class="comment"></highlight></codeline>
<codeline lineno="2626"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>locks<sp/>the<sp/>semaphore<sp/>referenced<sp/>by<sp/>sem_id<sp/>by<sp/>performing<sp/>a<sp/></highlight></codeline>
<codeline lineno="2627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semaphore<sp/>lock<sp/>operation<sp/>on<sp/>that<sp/>semaphore.If<sp/>the<sp/>semaphore<sp/>value<sp/></highlight></codeline>
<codeline lineno="2628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>currently<sp/>zero,<sp/>then<sp/>the<sp/>calling<sp/>thread<sp/>shall<sp/>not<sp/>return<sp/>from<sp/></highlight></codeline>
<codeline lineno="2629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>call<sp/>until<sp/>it<sp/>either<sp/>locks<sp/>the<sp/>semaphore<sp/>or<sp/>the<sp/>call<sp/>is<sp/></highlight></codeline>
<codeline lineno="2630"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interrupted<sp/>by<sp/>a<sp/>signal.</highlight></codeline>
<codeline lineno="2631"><highlight class="comment"></highlight></codeline>
<codeline lineno="2632"><highlight class="comment"><sp/><sp/><sp/><sp/>Return:<sp/><sp/>OS_ERR_INVALID_ID<sp/>the<sp/>Id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>counting<sp/>semaphore</highlight></codeline>
<codeline lineno="2633"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="2634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2636"><highlight class="comment">----------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637" refid="osapi_8c_1a5823afb4723b533c182c8493e93078ea" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a5823afb4723b533c182c8493e93078ea" kindref="member">OS_CountSemTake</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id<sp/>)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>ret_val;</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>parameters<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_COUNT_SEMAPHORES<sp/><sp/>||<sp/>OS_count_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2663"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>&lt;=<sp/>0,<sp/>then<sp/>wait<sp/>until<sp/>the<sp/>semaphore<sp/>is<sp/>available<sp/></highlight></codeline>
<codeline lineno="2664"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>&gt;<sp/>1,<sp/>then<sp/>grab<sp/>the<sp/>resource<sp/>without<sp/>waiting</highlight></codeline>
<codeline lineno="2665"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_count_sem_table[sem_id].current_value<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2669"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Wait<sp/>on<sp/>the<sp/>condition<sp/>variable.<sp/>Calling<sp/>this<sp/>function<sp/>unlocks<sp/>the<sp/>mutex<sp/>and<sp/></highlight></codeline>
<codeline lineno="2670"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>re-aquires<sp/>the<sp/>mutex<sp/>when<sp/>the<sp/>function<sp/>returns.<sp/>This<sp/>allows<sp/>the<sp/>function<sp/>that</highlight></codeline>
<codeline lineno="2671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>calls<sp/>the<sp/>pthread_cond_signal<sp/>or<sp/>pthread_cond_broadcast<sp/>to<sp/>aquire<sp/>the<sp/>mutex</highlight></codeline>
<codeline lineno="2672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_wait(&amp;(OS_count_sem_table[sem_id].cv),&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Decrement<sp/>the<sp/>counter</highlight></codeline>
<codeline lineno="2679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Grab<sp/>the<sp/>sem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ret_val);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_CountSemTake<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2702"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_CountSemTimedWait</highlight></codeline>
<codeline lineno="2703"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2704"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>function<sp/>locks<sp/>the<sp/>semaphore<sp/>referenced<sp/>by<sp/>sem_id<sp/>.<sp/>However,</highlight></codeline>
<codeline lineno="2705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>the<sp/>semaphore<sp/>cannot<sp/>be<sp/>locked<sp/>without<sp/>waiting<sp/>for<sp/>another<sp/>process</highlight></codeline>
<codeline lineno="2706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>or<sp/>thread<sp/>to<sp/>unlock<sp/>the<sp/>semaphore<sp/>,<sp/>this<sp/>wait<sp/>shall<sp/>be<sp/>terminated<sp/>when<sp/></highlight></codeline>
<codeline lineno="2707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>specified<sp/>timeout<sp/>,msecs,<sp/>expires.</highlight></codeline>
<codeline lineno="2708"><highlight class="comment"></highlight></codeline>
<codeline lineno="2709"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SEM_TIMEOUT<sp/>if<sp/>semaphore<sp/>was<sp/>not<sp/>relinquished<sp/>in<sp/>time</highlight></codeline>
<codeline lineno="2710"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/>initialized<sp/>or<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="2712"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>array<sp/>of<sp/>semaphores<sp/>defined<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="2713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>ID<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>semaphore<sp/>ID</highlight></codeline>
<codeline lineno="2714"><highlight class="comment"></highlight></codeline>
<codeline lineno="2715"><highlight class="comment">----------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716" refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a8b09f50a4c9f9f45e70dceb6e90b6b51" kindref="member">OS_CountSemTimedWait</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>msecs<sp/>)</highlight></codeline>
<codeline lineno="2717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val;</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><sp/>ts;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_COUNT_SEMAPHORES)<sp/>||<sp/>(OS_count_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>)</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2735"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Compute<sp/>an<sp/>absolute<sp/>time<sp/>for<sp/>the<sp/>delay</highlight></codeline>
<codeline lineno="2736"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" kindref="member">OS_CompAbsDelayTime</ref>(msecs,<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Lock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;mask,<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2747"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>&lt;=<sp/>0,<sp/>then<sp/>wait<sp/>until<sp/>the<sp/>semaphore<sp/>is<sp/>available<sp/></highlight></codeline>
<codeline lineno="2748"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>If<sp/>the<sp/>value<sp/>is<sp/>&gt;<sp/>1,<sp/>then<sp/>grab<sp/>the<sp/>resource<sp/>without<sp/>waiting</highlight></codeline>
<codeline lineno="2749"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OS_count_sem_table[sem_id].current_value<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2753"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Wait<sp/>on<sp/>the<sp/>condition<sp/>variable.<sp/>Calling<sp/>this<sp/>function<sp/>unlocks<sp/>the<sp/>mutex<sp/>and<sp/></highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>re-aquires<sp/>the<sp/>mutex<sp/>when<sp/>the<sp/>function<sp/>returns.<sp/>This<sp/>allows<sp/>the<sp/>function<sp/>that</highlight></codeline>
<codeline lineno="2755"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>calls<sp/>the<sp/>pthread_cond_signal<sp/>or<sp/>pthread_cond_broadcast<sp/>to<sp/>aquire<sp/>the<sp/>mutex</highlight></codeline>
<codeline lineno="2756"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>pthread_cond_timedwait(&amp;(OS_count_sem_table[sem_id].cv),<sp/>&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Decrement<sp/>the<sp/>counter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ret<sp/>==<sp/>ETIMEDOUT<sp/>)</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" kindref="member">OS_SEM_TIMEOUT</ref>;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Grab<sp/>the<sp/>sem<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref><sp/>--;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unlock<sp/>the<sp/>mutex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;(OS_count_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">),<sp/>&amp;previous);</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2787"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_CountSemGetIdByName</highlight></codeline>
<codeline lineno="2788"><highlight class="comment"></highlight></codeline>
<codeline lineno="2789"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>counting<sp/>sem<sp/>Id<sp/>given<sp/>the<sp/>name<sp/>of<sp/>a<sp/>count_sem</highlight></codeline>
<codeline lineno="2790"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>id<sp/>is<sp/>returned<sp/>through<sp/>sem_id</highlight></codeline>
<codeline lineno="2791"><highlight class="comment"></highlight></codeline>
<codeline lineno="2792"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>is<sp/>semid<sp/>or<sp/>sem_name<sp/>are<sp/>NULL<sp/>pointers</highlight></codeline>
<codeline lineno="2793"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>given<sp/>is<sp/>to<sp/>long<sp/>to<sp/>have<sp/>been<sp/>stored</highlight></codeline>
<codeline lineno="2794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_NOT_FOUND<sp/>if<sp/>the<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="2795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2797"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798" refid="osapi_8c_1a63acea7d9ce7e35a48486cd46398f718" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a63acea7d9ce7e35a48486cd46398f718" kindref="member">OS_CountSemGetIdByName</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*sem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sem_name)</highlight></codeline>
<codeline lineno="2799"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sem_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2813"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>a<sp/>name<sp/>too<sp/>long<sp/>wouldn&apos;t<sp/>have<sp/>been<sp/>allowed<sp/>in<sp/>the<sp/>first<sp/>place</highlight></codeline>
<codeline lineno="2814"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>so<sp/>we<sp/>definitely<sp/>won&apos;t<sp/>find<sp/>a<sp/>name<sp/>too<sp/>long</highlight></codeline>
<codeline lineno="2815"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(sem_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_COUNT_SEMAPHORES;<sp/>i++)</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_count_sem_table[i].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp<sp/>(OS_count_sem_table[i].name<sp/>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name)<sp/>==<sp/>0))</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sem_id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2831"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>The<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table,</highlight></codeline>
<codeline lineno="2832"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>or<sp/>it<sp/>was,<sp/>and<sp/>the<sp/>sem_id<sp/>isn&apos;t<sp/>valid<sp/>anymore<sp/></highlight></codeline>
<codeline lineno="2833"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2836"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_CountSemGetIdByName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2838"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_CountSemGetInfo</highlight></codeline>
<codeline lineno="2839"><highlight class="comment"></highlight></codeline>
<codeline lineno="2840"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>will<sp/>pass<sp/>back<sp/>a<sp/>pointer<sp/>to<sp/>structure<sp/>that<sp/>contains<sp/></highlight></codeline>
<codeline lineno="2841"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>of<sp/>the<sp/>relevant<sp/>info(<sp/>name<sp/>and<sp/>creator)<sp/>about<sp/>the<sp/>specified<sp/>counting</highlight></codeline>
<codeline lineno="2842"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semaphore.</highlight></codeline>
<codeline lineno="2843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2844"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>semaphore<sp/></highlight></codeline>
<codeline lineno="2845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>count_prop<sp/>pointer<sp/>is<sp/>null</highlight></codeline>
<codeline lineno="2846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2847"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"></highlight></codeline>
<codeline lineno="2849" refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a787782fbaa735c7631f6b11c3c42081e" kindref="member">OS_CountSemGetInfo</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id,<sp/><ref refid="struct_o_s__count__sem__prop__t" kindref="compound">OS_count_sem_prop_t</ref><sp/>*count_prop)<sp/><sp/></highlight></codeline>
<codeline lineno="2850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2860"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>to<sp/>see<sp/>that<sp/>the<sp/>id<sp/>given<sp/>is<sp/>valid<sp/></highlight></codeline>
<codeline lineno="2861"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_COUNT_SEMAPHORES<sp/>||<sp/>OS_count_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count_prop<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2873"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Lock</highlight></codeline>
<codeline lineno="2874"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>the<sp/>info<sp/>into<sp/>the<sp/>stucture<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/>count_prop<sp/>-&gt;<sp/>value<sp/>=<sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a7f2465d64357244f590e1547d365b878" kindref="member">current_value</ref>;</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/>count_prop<sp/>-&gt;<sp/>creator<sp/>=<sp/><sp/><sp/><sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1adac975548edf14613bdee84ad29d6ca3" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(count_prop-&gt;<sp/>name,<sp/>OS_count_sem_table[sem_id].<ref refid="struct_o_s__count__sem__record__t_1a28735ffa02d5908a2432837e08366f79" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2884"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Unlock</highlight></codeline>
<codeline lineno="2885"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1abd78630693a6531a22ab5b07d9643438" kindref="member">OS_count_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2890"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_CountSemGetInfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************************</highlight></codeline>
<codeline lineno="2892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MUTEX<sp/>API</highlight></codeline>
<codeline lineno="2893"><highlight class="comment">****************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="2896"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_MutSemCreate</highlight></codeline>
<codeline lineno="2897"><highlight class="comment"></highlight></codeline>
<codeline lineno="2898"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Creates<sp/>a<sp/>mutex<sp/>semaphore<sp/>initially<sp/>full.</highlight></codeline>
<codeline lineno="2899"><highlight class="comment"></highlight></codeline>
<codeline lineno="2900"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>if<sp/>sem_id<sp/>or<sp/>sem_name<sp/>are<sp/>NULL</highlight></codeline>
<codeline lineno="2901"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>sem_name<sp/>is<sp/>too<sp/>long<sp/>to<sp/>be<sp/>stored</highlight></codeline>
<codeline lineno="2902"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NO_FREE_IDS<sp/>if<sp/>there<sp/>are<sp/>no<sp/>more<sp/>free<sp/>mutex<sp/>Ids</highlight></codeline>
<codeline lineno="2903"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TAKEN<sp/>if<sp/>there<sp/>is<sp/>already<sp/>a<sp/>mutex<sp/>with<sp/>the<sp/>same<sp/>name</highlight></codeline>
<codeline lineno="2904"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="2905"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="2906"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2907"><highlight class="comment"><sp/><sp/><sp/><sp/>Notes:<sp/>the<sp/>options<sp/>parameter<sp/>is<sp/>not<sp/>used<sp/>in<sp/>this<sp/>implementation</highlight></codeline>
<codeline lineno="2908"><highlight class="comment"></highlight></codeline>
<codeline lineno="2909"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910" refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a1cec40bf769e2db8614c1ef6d9906a8d" kindref="member">OS_MutSemCreate</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*sem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sem_name,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>options)</highlight></codeline>
<codeline lineno="2911"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code;</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutexattr_t<sp/>mutex_attr<sp/>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>possible_semid;</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>previous;</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask;</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sem_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>allow<sp/>names<sp/>too<sp/>long*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>truncated,<sp/>two<sp/>names<sp/>might<sp/>be<sp/>the<sp/>same<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(sem_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(possible_semid<sp/>=<sp/>0;<sp/>possible_semid<sp/>&lt;<sp/>OS_MAX_MUTEXES;<sp/>possible_semid++)</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OS_mut_sem_table[possible_semid].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(possible_semid<sp/>==<sp/>OS_MAX_MUTEXES)<sp/>||</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(OS_mut_sem_table[possible_semid].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>)</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref>;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>name<sp/>is<sp/>already<sp/>taken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_MUTEXES;<sp/>i++)</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OS_mut_sem_table[i].free<sp/>==<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcmp<sp/>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name,<sp/>OS_mut_sem_table[i].name)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref>;</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>the<sp/>free<sp/>flag<sp/>to<sp/>false<sp/>to<sp/>make<sp/>sure<sp/>no<sp/>other<sp/>task<sp/>grabs<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_mut_sem_table[possible_semid].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="2968"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>initialize<sp/>the<sp/>attribute<sp/>with<sp/>default<sp/>values<sp/></highlight></codeline>
<codeline lineno="2969"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_mutexattr_init(&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>call<sp/>failed,<sp/>set<sp/>free<sp/>back<sp/>to<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[possible_semid].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Mutex<sp/>could<sp/>not<sp/>be<sp/>created.<sp/>pthread_mutexattr_init<sp/>failed<sp/>ID<sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,possible_semid);</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2985"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Allow<sp/>the<sp/>mutex<sp/>to<sp/>use<sp/>priority<sp/>inheritance<sp/><sp/></highlight></codeline>
<codeline lineno="2986"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_mutexattr_setprotocol(&amp;mutex_attr,PTHREAD_PRIO_INHERIT)<sp/>;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>call<sp/>failed,<sp/>set<sp/>free<sp/>back<sp/>to<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[possible_semid].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Mutex<sp/>could<sp/>not<sp/>be<sp/>created.<sp/>pthread_mutexattr_setprotocol<sp/>failed<sp/>ID<sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,possible_semid);</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3000"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/><sp/>Set<sp/>the<sp/>mutex<sp/>type<sp/>to<sp/>RECURSIVE<sp/>so<sp/>a<sp/>thread<sp/>can<sp/>do<sp/>nested<sp/>locks</highlight></codeline>
<codeline lineno="3001"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/>pthread_mutexattr_settype(&amp;mutex_attr,<sp/>PTHREAD_MUTEX_RECURSIVE);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>call<sp/>failed,<sp/>set<sp/>free<sp/>back<sp/>to<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[possible_semid].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Mutex<sp/>could<sp/>not<sp/>be<sp/>created.<sp/>pthread_mutexattr_settype<sp/>failed<sp/>ID<sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,possible_semid);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3016"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>create<sp/>the<sp/>mutex<sp/></highlight></codeline>
<codeline lineno="3017"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>upon<sp/>successful<sp/>initialization,<sp/>the<sp/>state<sp/>of<sp/>the<sp/>mutex<sp/>becomes<sp/>initialized<sp/>and<sp/>unlocked<sp/></highlight></codeline>
<codeline lineno="3018"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><sp/>pthread_mutex_init((pthread_mutex_t<sp/>*)<sp/>&amp;OS_mut_sem_table[possible_semid].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,&amp;mutex_attr);<sp/></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>return_code<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>call<sp/>failed,<sp/>set<sp/>free<sp/>back<sp/>to<sp/>true<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[possible_semid].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>OS_DEBUG_PRINTF<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error:<sp/>Mutex<sp/>could<sp/>not<sp/>be<sp/>created.<sp/>ID<sp/>=<sp/>%lu\n&quot;</highlight><highlight class="normal">,possible_semid);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Mark<sp/>mutex<sp/>as<sp/>initialized</highlight></codeline>
<codeline lineno="3035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sem_id<sp/>=<sp/>possible_semid;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(OS_mut_sem_table[*sem_id].name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[*sem_id].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_mut_sem_table[*sem_id].<ref refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>();</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"></highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_MutexSemCreate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3050"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>Name:<sp/>OS_MutSemDelete</highlight></codeline>
<codeline lineno="3051"><highlight class="comment"></highlight></codeline>
<codeline lineno="3052"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>Deletes<sp/>the<sp/>specified<sp/>Mutex<sp/>Semaphore.</highlight></codeline>
<codeline lineno="3053"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3054"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>mutex</highlight></codeline>
<codeline lineno="3055"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>OS<sp/>call<sp/>failed</highlight></codeline>
<codeline lineno="3056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="3057"><highlight class="comment"></highlight></codeline>
<codeline lineno="3058"><highlight class="comment"><sp/><sp/><sp/><sp/>Notes:<sp/>The<sp/>mutex<sp/>must<sp/>be<sp/>full<sp/>to<sp/>take<sp/>it,<sp/>so<sp/>we<sp/>have<sp/>to<sp/>check<sp/>for<sp/>fullness</highlight></codeline>
<codeline lineno="3059"><highlight class="comment"></highlight></codeline>
<codeline lineno="3060"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062" refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a4be56a807779019aad0c84e439906d11" kindref="member">OS_MutSemDelete</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id)</highlight></codeline>
<codeline lineno="3063"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status=-1;</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>sem_id<sp/>is<sp/>valid<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_MUTEXES<sp/>||<sp/>OS_mut_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pthread_mutex_destroy(<sp/>&amp;(OS_mut_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>=<sp/>success<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>status<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>;</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Delete<sp/>its<sp/>presence<sp/>in<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_mut_sem_table[sem_id].<ref refid="struct_o_s__mut__sem__record__t_1afba8f37fe5ebd23b87e48a987aafa0d6" kindref="member">free</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(OS_mut_sem_table[sem_id].name<sp/>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/>OS_mut_sem_table[sem_id].<ref refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" kindref="member">creator</ref><sp/>=<sp/><ref refid="osapi_8c_1ac84b46f1f855c691d8d2c95a23768ad5" kindref="member">UNINITIALIZED</ref>;</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_MutSemDelete<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3100"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_MutSemGive</highlight></codeline>
<codeline lineno="3101"><highlight class="comment"></highlight></codeline>
<codeline lineno="3102"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>function<sp/>releases<sp/>the<sp/>mutex<sp/>object<sp/>referenced<sp/>by<sp/>sem_id.The<sp/></highlight></codeline>
<codeline lineno="3103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manner<sp/>in<sp/>which<sp/>a<sp/>mutex<sp/>is<sp/>released<sp/>is<sp/>dependent<sp/>upon<sp/>the<sp/>mutex&apos;s<sp/>type<sp/></highlight></codeline>
<codeline lineno="3104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attribute.<sp/><sp/>If<sp/>there<sp/>are<sp/>threads<sp/>blocked<sp/>on<sp/>the<sp/>mutex<sp/>object<sp/>referenced<sp/>by<sp/></highlight></codeline>
<codeline lineno="3105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mutex<sp/>when<sp/>this<sp/>function<sp/>is<sp/>called,<sp/>resulting<sp/>in<sp/>the<sp/>mutex<sp/>becoming<sp/></highlight></codeline>
<codeline lineno="3106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>available,<sp/>the<sp/>scheduling<sp/>policy<sp/>shall<sp/>determine<sp/>which<sp/>thread<sp/>shall<sp/></highlight></codeline>
<codeline lineno="3107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>acquire<sp/>the<sp/>mutex.</highlight></codeline>
<codeline lineno="3108"><highlight class="comment"></highlight></codeline>
<codeline lineno="3109"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="3110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/><sp/>initialized<sp/></highlight></codeline>
<codeline lineno="3111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>mutex</highlight></codeline>
<codeline lineno="3112"><highlight class="comment"></highlight></codeline>
<codeline lineno="3113"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115" refid="osapi_8c_1a48964b6567f9ceda86a51ebc02fb88c5" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id<sp/>)</highlight></codeline>
<codeline lineno="3116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>ret_val<sp/>;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>Parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_MUTEXES<sp/>||<sp/>OS_mut_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3132"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Unlock<sp/>the<sp/>mutex</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_mutex_unlock(&amp;(OS_mut_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref><sp/>;</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret_val<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref><sp/>;</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret_val;</highlight></codeline>
<codeline lineno="3144"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_MutSemGive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3147"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_MutSemTake</highlight></codeline>
<codeline lineno="3148"><highlight class="comment"></highlight></codeline>
<codeline lineno="3149"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>The<sp/>mutex<sp/>object<sp/>referenced<sp/>by<sp/>sem_id<sp/>shall<sp/>be<sp/>locked<sp/>by<sp/>calling<sp/>this</highlight></codeline>
<codeline lineno="3150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function.<sp/>If<sp/>the<sp/>mutex<sp/>is<sp/>already<sp/>locked,<sp/>the<sp/>calling<sp/>thread<sp/>shall</highlight></codeline>
<codeline lineno="3151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>until<sp/>the<sp/>mutex<sp/>becomes<sp/>available.<sp/>This<sp/>operation<sp/>shall<sp/>return</highlight></codeline>
<codeline lineno="3152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>mutex<sp/>object<sp/>referenced<sp/>by<sp/>mutex<sp/>in<sp/>the<sp/>locked<sp/>state<sp/>with<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calling<sp/>thread<sp/>as<sp/>its<sp/>owner.</highlight></codeline>
<codeline lineno="3154"><highlight class="comment"></highlight></codeline>
<codeline lineno="3155"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="3156"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SEM_FAILURE<sp/>if<sp/>the<sp/>semaphore<sp/>was<sp/>not<sp/>previously<sp/>initialized<sp/>or<sp/>is<sp/></highlight></codeline>
<codeline lineno="3157"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>in<sp/>the<sp/>array<sp/>of<sp/>semaphores<sp/>defined<sp/>by<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="3158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_INVALID_ID<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>mutex</highlight></codeline>
<codeline lineno="3159"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3160" refid="osapi_8c_1a77239ad1acd87f235cdc45142cc0d39f" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a77239ad1acd87f235cdc45142cc0d39f" kindref="member">OS_MutSemTake</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id<sp/>)</highlight></codeline>
<codeline lineno="3161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3170"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>Parameters</highlight></codeline>
<codeline lineno="3171"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>&gt;=<sp/>OS_MAX_MUTEXES<sp/>||<sp/>OS_mut_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3178"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Lock<sp/>the<sp/>mutex<sp/>-<sp/>unlike<sp/>the<sp/>sem<sp/>calls,<sp/>the<sp/>pthread<sp/>mutex<sp/>call</highlight></codeline>
<codeline lineno="3179"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>should<sp/>not<sp/>be<sp/>interrupted<sp/>by<sp/>a<sp/>signal</highlight></codeline>
<codeline lineno="3180"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>pthread_mutex_lock(&amp;(OS_mut_sem_table[sem_id].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>status<sp/>==<sp/>EINVAL<sp/>)</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref><sp/>;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>EDEADLK<sp/>)</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#ifdef<sp/>OS_DEBUG_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Task<sp/>would<sp/>deadlock--nested<sp/>mutex<sp/>call!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref><sp/>;</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3200"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_MutSemGetIdByName</highlight></codeline>
<codeline lineno="3201"><highlight class="comment"></highlight></codeline>
<codeline lineno="3202"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>mutex<sp/>sem<sp/>Id<sp/>given<sp/>the<sp/>name<sp/>of<sp/>a<sp/>mut_sem</highlight></codeline>
<codeline lineno="3203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>id<sp/>is<sp/>returned<sp/>through<sp/>sem_id</highlight></codeline>
<codeline lineno="3204"><highlight class="comment"></highlight></codeline>
<codeline lineno="3205"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_INVALID_POINTER<sp/>is<sp/>semid<sp/>or<sp/>sem_name<sp/>are<sp/>NULL<sp/>pointers</highlight></codeline>
<codeline lineno="3206"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_TOO_LONG<sp/>if<sp/>the<sp/>name<sp/>given<sp/>is<sp/>to<sp/>long<sp/>to<sp/>have<sp/>been<sp/>stored</highlight></codeline>
<codeline lineno="3207"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_ERR_NAME_NOT_FOUND<sp/>if<sp/>the<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="3208"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="3209"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3210"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3211" refid="osapi_8c_1a3132d8fcb5c3dfc4f152c567d9c39756" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a3132d8fcb5c3dfc4f152c567d9c39756" kindref="member">OS_MutSemGetIdByName</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*sem_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sem_name)</highlight></codeline>
<codeline lineno="3212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sem_id<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>sem_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3226"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Check<sp/>parameters<sp/></highlight></codeline>
<codeline lineno="3227"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(sem_name)<sp/>&gt;=<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>)</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_MUTEXES;<sp/>i++)</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((OS_mut_sem_table[i].free<sp/>!=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strcmp<sp/>(OS_mut_sem_table[i].name,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>sem_name)<sp/>==<sp/>0)<sp/>)</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sem_id<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3244"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>The<sp/>name<sp/>was<sp/>not<sp/>found<sp/>in<sp/>the<sp/>table,</highlight></codeline>
<codeline lineno="3245"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/><sp/>or<sp/>it<sp/>was,<sp/>and<sp/>the<sp/>sem_id<sp/>isn&apos;t<sp/>valid<sp/>anymore<sp/></highlight></codeline>
<codeline lineno="3246"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_MutSemGetIdByName<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"></highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3252"><highlight class="comment"><sp/><sp/><sp/><sp/>Name:<sp/>OS_MutSemGetInfo</highlight></codeline>
<codeline lineno="3253"><highlight class="comment"></highlight></codeline>
<codeline lineno="3254"><highlight class="comment"><sp/><sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>will<sp/>pass<sp/>back<sp/>a<sp/>pointer<sp/>to<sp/>structure<sp/>that<sp/>contains<sp/></highlight></codeline>
<codeline lineno="3255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all<sp/>of<sp/>the<sp/>relevant<sp/>info(<sp/>name<sp/>and<sp/>creator)<sp/>about<sp/>the<sp/>specified<sp/>mutex</highlight></codeline>
<codeline lineno="3256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>semaphore.</highlight></codeline>
<codeline lineno="3257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3258"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns:<sp/>OS_ERR_INVALID_ID<sp/>if<sp/>the<sp/>id<sp/>passed<sp/>in<sp/>is<sp/>not<sp/>a<sp/>valid<sp/>semaphore<sp/></highlight></codeline>
<codeline lineno="3259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>mut_prop<sp/>pointer<sp/>is<sp/>null</highlight></codeline>
<codeline lineno="3260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>if<sp/>success</highlight></codeline>
<codeline lineno="3261"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3263" refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a8a82fc59d1bfc3dda2be4cddeb8f5ae4" kindref="member">OS_MutSemGetInfo</ref><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>sem_id,<sp/><ref refid="struct_o_s__mut__sem__prop__t" kindref="compound">OS_mut_sem_prop_t</ref><sp/>*mut_prop)<sp/><sp/></highlight></codeline>
<codeline lineno="3264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>previous;</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/>sigset_t<sp/><sp/>mask;</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>the<sp/>OSAL<sp/>API<sp/>is<sp/>initialized<sp/>first.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="osapi_8c_1a422e2c80225e5df4ea056063a5069192" kindref="member">OS_API_Initialized</ref><sp/>!=<sp/><ref refid="osapi_8c_1ac2875a295f7e498ebab911964c92d5a4" kindref="member">OS_API_INITIALIZED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>that<sp/>the<sp/>id<sp/>given<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sem_id<sp/>&gt;=<sp/>OS_MAX_MUTEXES<sp/>||<sp/>OS_mut_sem_table[sem_id].free<sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>;</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mut_prop<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>the<sp/>info<sp/>into<sp/>the<sp/>stucture<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;mask,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>mut_prop<sp/>-&gt;<sp/>creator<sp/>=<sp/><sp/><sp/>OS_mut_sem_table[sem_id].<ref refid="struct_o_s__mut__sem__record__t_1a34d360855700cc07f61af63f9408d44c" kindref="member">creator</ref>;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(mut_prop-&gt;<sp/>name,<sp/>OS_mut_sem_table[sem_id].<ref refid="struct_o_s__mut__sem__record__t_1ac086ecd5d233a39198ca546e21715f81" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(&amp;<ref refid="osapi_8c_1a7604941197a755a7fe1166532ada3f53" kindref="member">OS_mut_sem_table_mut</ref>,<sp/>&amp;previous);<sp/></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3296"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>end<sp/>OS_BinSemGetInfo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight></codeline>
<codeline lineno="3299"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************************</highlight></codeline>
<codeline lineno="3300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INT<sp/>API</highlight></codeline>
<codeline lineno="3301"><highlight class="comment">****************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3304"><highlight class="comment">**<sp/>Name:<sp/>OS_IntAttachHandler</highlight></codeline>
<codeline lineno="3305"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3306"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3307"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>call<sp/>associates<sp/>a<sp/>specified<sp/>C<sp/>routine<sp/>to<sp/>a<sp/>specified<sp/>interrupt<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3308"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>number.Upon<sp/>occurring<sp/>of<sp/>the<sp/>InterruptNumber<sp/>,<sp/>the<sp/>InerruptHandler<sp/></highlight></codeline>
<codeline lineno="3309"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>routine<sp/>will<sp/>be<sp/>called<sp/>and<sp/>passed<sp/>the<sp/>parameter.<sp/></highlight></codeline>
<codeline lineno="3310"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3311"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3312"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3313"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3314"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>InterruptNumber<sp/>:<sp/>The<sp/>Interrupt<sp/>Number<sp/>that<sp/>will<sp/>cause<sp/>the<sp/>start<sp/>of</highlight></codeline>
<codeline lineno="3315"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>ISR</highlight></codeline>
<codeline lineno="3316"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>InerruptHandler<sp/>:<sp/>The<sp/>ISR<sp/>associatd<sp/>with<sp/>this<sp/>interrupt</highlight></codeline>
<codeline lineno="3317"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>parameter<sp/>:The<sp/>parameter<sp/>that<sp/>is<sp/>passed<sp/>to<sp/>the<sp/>ISR</highlight></codeline>
<codeline lineno="3318"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3319"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3320"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3321"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3322"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3323"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3324"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3325"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>OS_SUCCESS<sp/>on<sp/>success</highlight></codeline>
<codeline lineno="3326"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>OS_INVALID_POINTER<sp/>if<sp/>the<sp/>Interrupt<sp/>handler<sp/>pointer<sp/>is<sp/>NULL</highlight></codeline>
<codeline lineno="3327"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3328" refid="osapi_8c_1a239f4cd57ad58e7bfea2c3cda68033cd" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a239f4cd57ad58e7bfea2c3cda68033cd" kindref="member">OS_IntAttachHandler</ref><sp/><sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>InterruptNumber,<sp/>osal_task_entry<sp/>InterruptHandler,<sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>parameter)</highlight></codeline>
<codeline lineno="3329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InterruptHandler<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>);</highlight></codeline>
<codeline lineno="3335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3338"><highlight class="comment">**<sp/>Name:<sp/>OS_IntUnlock</highlight></codeline>
<codeline lineno="3339"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3340"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Enable<sp/>the<sp/>interrupts.<sp/></highlight></codeline>
<codeline lineno="3341"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3342"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3343"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3344"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3345"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3346"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3347"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3348"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3349"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3350"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3351"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3352"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS</highlight></codeline>
<codeline lineno="3353"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3354" refid="osapi_8c_1acb62c03bed251941a2fdda1e38810ff9" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1acb62c03bed251941a2fdda1e38810ff9" kindref="member">OS_IntUnlock</ref><sp/>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>IntLevel)</highlight></codeline>
<codeline lineno="3355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>);</highlight></codeline>
<codeline lineno="3357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3360"><highlight class="comment">**<sp/>Name:<sp/>OS_Intlock</highlight></codeline>
<codeline lineno="3361"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3362"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Disable<sp/>the<sp/>interrupts.<sp/></highlight></codeline>
<codeline lineno="3363"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3364"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3365"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3366"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3367"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3368"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3369"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3370"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3371"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3372"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3373"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3374"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS</highlight></codeline>
<codeline lineno="3375"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3376" refid="osapi_8c_1a1471ac0918a1861965e4e2d3a0027895" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a1471ac0918a1861965e4e2d3a0027895" kindref="member">OS_IntLock</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/></highlight></codeline>
<codeline lineno="3377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>)<sp/>;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3381"><highlight class="comment">**<sp/>Name:<sp/>OS_IntEnable</highlight></codeline>
<codeline lineno="3382"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3383"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Enables<sp/>interrupts<sp/>through<sp/>Level<sp/></highlight></codeline>
<codeline lineno="3384"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3385"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3386"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3387"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3388"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Level<sp/>-<sp/>the<sp/>interrupts<sp/>to<sp/>enable</highlight></codeline>
<codeline lineno="3389"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3390"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3391"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3392"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3393"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3394"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3395"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3396"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS</highlight></codeline>
<codeline lineno="3397"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398" refid="osapi_8c_1a5fcc5cc5d5904230d78912370cda144e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a5fcc5cc5d5904230d78912370cda144e" kindref="member">OS_IntEnable</ref>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>Level)</highlight></codeline>
<codeline lineno="3399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3404"><highlight class="comment">**<sp/>Name:<sp/>OS_IntDisable</highlight></codeline>
<codeline lineno="3405"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3406"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Disables<sp/>interrupts<sp/>through<sp/>Level<sp/></highlight></codeline>
<codeline lineno="3407"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3408"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3409"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3410"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3411"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Level<sp/>-<sp/>the<sp/>interrupts<sp/>to<sp/>disable</highlight></codeline>
<codeline lineno="3412"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3413"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3414"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3415"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3416"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3417"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3418"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3419"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS</highlight></codeline>
<codeline lineno="3420"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"></highlight></codeline>
<codeline lineno="3422" refid="osapi_8c_1ab785c4015754249084b3c0d98bf4ef77" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1ab785c4015754249084b3c0d98bf4ef77" kindref="member">OS_IntDisable</ref>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>Level)</highlight></codeline>
<codeline lineno="3423"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>);</highlight></codeline>
<codeline lineno="3425"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3428"><highlight class="comment"><sp/><sp/><sp/>Name:<sp/>OS_HeapGetInfo</highlight></codeline>
<codeline lineno="3429"><highlight class="comment"></highlight></codeline>
<codeline lineno="3430"><highlight class="comment"><sp/><sp/><sp/>Purpose:<sp/>Return<sp/>current<sp/>info<sp/>on<sp/>the<sp/>heap</highlight></codeline>
<codeline lineno="3431"><highlight class="comment"></highlight></codeline>
<codeline lineno="3432"><highlight class="comment"><sp/><sp/><sp/>Parameters:</highlight></codeline>
<codeline lineno="3433"><highlight class="comment"></highlight></codeline>
<codeline lineno="3434"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3435" refid="osapi_8c_1a4f8322d29e9f7bc6e877abdf50f6ab68" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a4f8322d29e9f7bc6e877abdf50f6ab68" kindref="member">OS_HeapGetInfo</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_o_s__heap__prop__t" kindref="compound">OS_heap_prop_t</ref><sp/>*heap_prop)</highlight></codeline>
<codeline lineno="3436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap_prop<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3442"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Not<sp/>implemented<sp/>yet</highlight></codeline>
<codeline lineno="3443"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>);</highlight></codeline>
<codeline lineno="3445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3447"><highlight class="comment">**<sp/>Name:<sp/>OS_Tick2Micros</highlight></codeline>
<codeline lineno="3448"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3449"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3450"><highlight class="comment">**<sp/>This<sp/>function<sp/>returns<sp/>the<sp/>duration<sp/>of<sp/>a<sp/>system<sp/>tick<sp/>in<sp/>micro<sp/>seconds.</highlight></codeline>
<codeline lineno="3451"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3452"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3453"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3454"><highlight class="comment">**<sp/>Parameters:<sp/>None</highlight></codeline>
<codeline lineno="3455"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3456"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3457"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3458"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3459"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3460"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3461"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3462"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/>duration<sp/>of<sp/>a<sp/>system<sp/>tick<sp/>in<sp/>microseconds</highlight></codeline>
<codeline lineno="3463"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464" refid="osapi_8c_1ae2f2184d4adaaa229e6f6b6b82661fa9" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1ae2f2184d4adaaa229e6f6b6b82661fa9" kindref="member">OS_Tick2Micros</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3467"><highlight class="comment"><sp/><sp/><sp/>**<sp/>sysconf(_SC_CLK_TCK)<sp/>returns<sp/>ticks/second.</highlight></codeline>
<codeline lineno="3468"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref>)(1000000)<sp/>/<sp/>sysconf(_SC_CLK_TCK));</highlight></codeline>
<codeline lineno="3470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3473"><highlight class="comment">**<sp/>Name:<sp/>OS_Milli2Ticks</highlight></codeline>
<codeline lineno="3474"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3475"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3476"><highlight class="comment">**<sp/>This<sp/>function<sp/>accepts<sp/>a<sp/>time<sp/>interval<sp/>in<sp/>milliseconds,<sp/>as<sp/>an<sp/>input<sp/>and<sp/></highlight></codeline>
<codeline lineno="3477"><highlight class="comment">**<sp/>returns<sp/>the<sp/>tick<sp/>equivalent<sp/><sp/>for<sp/>this<sp/>time<sp/>period.<sp/>The<sp/>tick<sp/>value<sp/>is<sp/></highlight></codeline>
<codeline lineno="3478"><highlight class="comment">**<sp/><sp/>rounded<sp/>up.</highlight></codeline>
<codeline lineno="3479"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3480"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3481"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3482"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3483"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>milli_seconds<sp/>:<sp/>the<sp/>time<sp/>interval<sp/>,in<sp/>milli<sp/>second<sp/>,<sp/>to<sp/>be<sp/>translated</highlight></codeline>
<codeline lineno="3484"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>ticks</highlight></codeline>
<codeline lineno="3485"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3486"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3487"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3488"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3489"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3490"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3491"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/>the<sp/>number<sp/>of<sp/>ticks<sp/>rounded<sp/>up.</highlight></codeline>
<codeline lineno="3492"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3493" refid="osapi_8c_1aae782a9497f0630739740e4fc9121f8b" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1aae782a9497f0630739740e4fc9121f8b" kindref="member">OS_Milli2Ticks</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>milli_seconds)</highlight></codeline>
<codeline lineno="3494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>num_of_ticks;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>tick_duration_usec;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>tick_duration_usec<sp/>=<sp/><ref refid="osapi_8c_1ae2f2184d4adaaa229e6f6b6b82661fa9" kindref="member">OS_Tick2Micros</ref>();</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/>num_of_ticks<sp/>=<sp/>((milli_seconds<sp/>*<sp/>1000)<sp/>+<sp/>tick_duration_usec<sp/>-<sp/>1)/tick_duration_usec;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(num_of_ticks);</highlight></codeline>
<codeline lineno="3502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3504"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_GetLocalTime</highlight></codeline>
<codeline lineno="3505"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3506"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>This<sp/>functions<sp/>get<sp/>the<sp/>local<sp/>time<sp/>of<sp/>the<sp/>machine<sp/>its<sp/>on</highlight></codeline>
<codeline lineno="3507"><highlight class="comment"><sp/>*<sp/>------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"></highlight></codeline>
<codeline lineno="3509" refid="osapi_8c_1a810b1f61b670190cbdbd8f89e4d5fb95" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a810b1f61b670190cbdbd8f89e4d5fb95" kindref="member">OS_GetLocalTime</ref>(<ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref><sp/>*time_struct)</highlight></codeline>
<codeline lineno="3510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status;</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReturnCode;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_struct<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>clock_gettime(CLOCK_REALTIME,<sp/>&amp;time);</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Status<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_struct<sp/>-&gt;<sp/>seconds<sp/>=<sp/>time.tv_sec;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_struct<sp/>-&gt;<sp/>microsecs<sp/>=<sp/>time.tv_nsec<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReturnCode<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>calling<sp/>clock_gettime!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReturnCode<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReturnCode;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight></codeline>
<codeline lineno="3536"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_GetLocalTime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3539"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_SetLocalTime</highlight></codeline>
<codeline lineno="3540"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3541"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>This<sp/>functions<sp/>set<sp/>the<sp/>local<sp/>time<sp/>of<sp/>the<sp/>machine<sp/>its<sp/>on</highlight></codeline>
<codeline lineno="3542"><highlight class="comment"><sp/>*<sp/>------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544" refid="osapi_8c_1a5baf58abd88bf84fe15016d9649cca39" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a5baf58abd88bf84fe15016d9649cca39" kindref="member">OS_SetLocalTime</ref>(<ref refid="struct_o_s__time__t" kindref="compound">OS_time_t</ref><sp/>*time_struct)</highlight></codeline>
<codeline lineno="3545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReturnCode;</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>time;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_struct<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>;</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>we&apos;re<sp/>running<sp/>as<sp/>root.<sp/><sp/>Only<sp/>root<sp/>has<sp/>access<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="3556"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>local<sp/>time.</highlight></codeline>
<codeline lineno="3557"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geteuid()<sp/>!=<sp/>0<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>not<sp/>running<sp/>as<sp/>root.<sp/><sp/>Return<sp/>Not<sp/>Implemented<sp/>since<sp/>we<sp/>can&apos;t</highlight></codeline>
<codeline lineno="3560"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>time.</highlight></codeline>
<codeline lineno="3561"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1aa30edee25a7a55c6a02c085c8526a1cf" kindref="member">OS_ERR_NOT_IMPLEMENTED</ref>;</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/>time.tv_sec<sp/>=<sp/>time_struct<sp/>-&gt;<sp/>seconds;</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/>time.tv_nsec<sp/>=<sp/>(time_struct<sp/>-&gt;<sp/>microsecs<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/>Status<sp/>=<sp/>clock_settime(CLOCK_REALTIME,<sp/>&amp;time);</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%u\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Status<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReturnCode<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReturnCode<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ReturnCode;</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*end<sp/>OS_SetLocalTime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3584"><highlight class="comment">**<sp/>Name:<sp/>OS_SetMask</highlight></codeline>
<codeline lineno="3585"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3586"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>the<sp/>masking<sp/>register<sp/>to<sp/>mask<sp/>and<sp/>unmask<sp/>interrupts<sp/></highlight></codeline>
<codeline lineno="3587"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3588"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3589"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3590"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3591"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>MaskSetting<sp/>:the<sp/>value<sp/>to<sp/>be<sp/>written<sp/>into<sp/>the<sp/>mask<sp/>register</highlight></codeline>
<codeline lineno="3592"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3593"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3594"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3595"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3596"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3597"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3598"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3599"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS</highlight></codeline>
<codeline lineno="3600"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601" refid="osapi_8c_1a5ad1eefc0aec8ec6eccd623d5bff735e" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a5ad1eefc0aec8ec6eccd623d5bff735e" kindref="member">OS_SetMask</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>MaskSetting<sp/>)<sp/></highlight></codeline>
<codeline lineno="3602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>)<sp/>;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3607"><highlight class="comment">**<sp/>Name:<sp/>OS_GetMask</highlight></codeline>
<codeline lineno="3608"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3609"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>and<sp/>report<sp/>the<sp/>setting<sp/>of<sp/>the<sp/>cpu<sp/>mask<sp/>register.</highlight></codeline>
<codeline lineno="3610"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3611"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3612"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3613"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3614"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>MaskSettingPtr<sp/>:<sp/>pointer<sp/>to<sp/>a<sp/>location<sp/>where<sp/>the<sp/>function<sp/>store<sp/>the</highlight></codeline>
<codeline lineno="3615"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reading<sp/>of<sp/>the<sp/>cpu<sp/>mask<sp/>register.</highlight></codeline>
<codeline lineno="3616"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3617"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3618"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3619"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3620"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3621"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3622"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/></highlight></codeline>
<codeline lineno="3623"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>OS_SUCCESS</highlight></codeline>
<codeline lineno="3624"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3625" refid="osapi_8c_1a6bcff47d124b33e78e054029afe0d1b9" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a6bcff47d124b33e78e054029afe0d1b9" kindref="member">OS_GetMask</ref><sp/>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*<sp/>MaskSettingPtr<sp/>)<sp/></highlight></codeline>
<codeline lineno="3626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>)<sp/>;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"></highlight><highlight class="comment">/*--------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3630"><highlight class="comment"><sp/>*<sp/>uint32<sp/>FindCreator</highlight></codeline>
<codeline lineno="3631"><highlight class="comment"><sp/>*<sp/>purpose:<sp/>Finds<sp/>the<sp/>creator<sp/>of<sp/>the<sp/>calling<sp/>thread</highlight></codeline>
<codeline lineno="3632"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633" refid="ostimer_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="osapi_8c_1a2ff08b5c7f5d4c51b32f0ba1089cec28" kindref="member">OS_FindCreator</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/><sp/><sp/><sp/>pthread_id;</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i;<sp/><sp/></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_id<sp/>=<sp/>pthread_self();</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="3640"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Get<sp/>PTHREAD<sp/>Id</highlight></codeline>
<codeline lineno="3641"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>OS_MAX_TASKS;<sp/>i++)</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_equal(pthread_id,<sp/>OS_task_table[i].</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3654"><highlight class="comment">**<sp/>Name:<sp/>OS_CompAbsDelayTime</highlight></codeline>
<codeline lineno="3655"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3656"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="3657"><highlight class="comment">**<sp/>This<sp/>function<sp/>accept<sp/>time<sp/>interval,<sp/>msecs,<sp/>as<sp/>an<sp/>input<sp/>and<sp/></highlight></codeline>
<codeline lineno="3658"><highlight class="comment">**<sp/>computes<sp/>the<sp/>absolute<sp/>time<sp/>at<sp/>which<sp/>this<sp/>time<sp/>interval<sp/>will<sp/>expire.<sp/></highlight></codeline>
<codeline lineno="3659"><highlight class="comment">**<sp/>The<sp/>absolute<sp/>time<sp/>is<sp/>programmed<sp/>into<sp/>a<sp/>struct.</highlight></codeline>
<codeline lineno="3660"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3661"><highlight class="comment">**<sp/>Assumptions<sp/>and<sp/>Notes:</highlight></codeline>
<codeline lineno="3662"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3663"><highlight class="comment">**<sp/>Parameters:</highlight></codeline>
<codeline lineno="3664"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3665"><highlight class="comment">**<sp/>Global<sp/>Inputs:<sp/>None</highlight></codeline>
<codeline lineno="3666"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3667"><highlight class="comment">**<sp/>Global<sp/>Outputs:<sp/>None</highlight></codeline>
<codeline lineno="3668"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3669"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3670"><highlight class="comment">**<sp/>Return<sp/>Values:<sp/>OS_SUCCESS,<sp/></highlight></codeline>
<codeline lineno="3671"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672" refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="osapi_8c_1a67f23d307644d4ffefe19971f99b4f6f" kindref="member">OS_CompAbsDelayTime</ref>(<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>msecs,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timespec<sp/>*<sp/>tm)</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/>clock_gettime(<sp/>CLOCK_REALTIME,<sp/><sp/>tm<sp/>);<sp/></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>the<sp/>delay<sp/>to<sp/>the<sp/>current<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/>tm-&gt;tv_sec<sp/><sp/>+=<sp/>(time_t)<sp/>(msecs<sp/>/<sp/>1000)<sp/>;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>residue<sp/>(<sp/>msecs<sp/>)<sp/><sp/>to<sp/>nanoseconds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/>tm-&gt;tv_nsec<sp/>+=<sp/><sp/>(msecs<sp/>%<sp/>1000)<sp/>*<sp/>1000000L<sp/>;</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tm-&gt;tv_nsec<sp/><sp/>&gt;=<sp/>1000000000L<sp/>)</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm-&gt;tv_nsec<sp/>-=<sp/>1000000000L<sp/>;</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm-&gt;tv_sec<sp/>++<sp/>;</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3688"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_printf<sp/></highlight></codeline>
<codeline lineno="3689"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3690"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>This<sp/>function<sp/>abstracts<sp/>out<sp/>the<sp/>printf<sp/>type<sp/>statements.<sp/>This<sp/>is<sp/></highlight></codeline>
<codeline lineno="3691"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useful<sp/>for<sp/>using<sp/>OS-<sp/>specific<sp/>thats<sp/>that<sp/>will<sp/>allow<sp/>non-polled</highlight></codeline>
<codeline lineno="3692"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>statements<sp/>for<sp/>the<sp/>real<sp/>time<sp/>systems.<sp/></highlight></codeline>
<codeline lineno="3693"><highlight class="comment"><sp/>---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694" refid="osapi_8c_1ae2f28612973b2d1a818b55015b2d8650" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1ae2f28612973b2d1a818b55015b2d8650" kindref="member">OS_printf</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*String,<sp/>...)</highlight></codeline>
<codeline lineno="3695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/>ptr;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg_buffer<sp/>[<ref refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" kindref="member">OS_BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" kindref="member">OS_printf_enabled</ref><sp/>==<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>)</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_start(ptr,String);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vsnprintf(&amp;msg_buffer[0],<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="stubs_8c_1a0647abe5b4f34f84f55d45e25f8dd5c4" kindref="member">OS_BUFFER_SIZE</ref>,<sp/>String,<sp/>ptr);</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(ptr);</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_buffer[OS_BUFFER_SIZE<sp/>-1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>&amp;msg_buffer[0]);</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3710"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_printf*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3713"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_printf_disable</highlight></codeline>
<codeline lineno="3714"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3715"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>This<sp/>function<sp/>disables<sp/>the<sp/>output<sp/>to<sp/>the<sp/>UART<sp/>from<sp/>OS_printf.<sp/><sp/></highlight></codeline>
<codeline lineno="3716"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3717"><highlight class="comment"><sp/>---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718" refid="osapi_8c_1a14d3e2839a46e39012b78d7f15eae65a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1a14d3e2839a46e39012b78d7f15eae65a" kindref="member">OS_printf_disable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><ref refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" kindref="member">OS_printf_enabled</ref><sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_printf_disable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"></highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3724"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_printf_enable</highlight></codeline>
<codeline lineno="3725"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3726"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>This<sp/>function<sp/>enables<sp/>the<sp/>output<sp/>to<sp/>the<sp/>UART<sp/>through<sp/>OS_printf.<sp/><sp/></highlight></codeline>
<codeline lineno="3727"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3728"><highlight class="comment"><sp/>---------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729" refid="osapi_8c_1afefa8925b46d03434c71daa5b6c42601" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1afefa8925b46d03434c71daa5b6c42601" kindref="member">OS_printf_enable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><ref refid="osapi_8c_1a1a912eb271c6b81683f4e900189d7d48" kindref="member">OS_printf_enabled</ref><sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="3732"><highlight class="normal">}</highlight><highlight class="comment">/*<sp/>end<sp/>OS_printf_enable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="comment">/*---------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3735"><highlight class="comment"><sp/>*<sp/><sp/>Name:<sp/>OS_GetErrorName()</highlight></codeline>
<codeline lineno="3736"><highlight class="comment">---------------------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737" refid="osapi_8c_1aa07b6d0e1839d2a933c3aa2c15e1642c" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1aa07b6d0e1839d2a933c3aa2c15e1642c" kindref="member">OS_GetErrorName</ref>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/>error_num,<sp/><ref refid="osapi-os-core_8h_1aed3c1c7817e2cd621069f2272d3fd277" kindref="member">os_err_name_t</ref><sp/>*<sp/>err_name)</highlight></codeline>
<codeline lineno="3738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1aed3c1c7817e2cd621069f2272d3fd277" kindref="member">os_err_name_t</ref><sp/>local_name;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>err_name<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(error_num)</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>:</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_SUCCESS&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>:</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERROR&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a209ba379f822b4879ed566808ed07f17" kindref="member">OS_INVALID_POINTER</ref>:</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_INVALID_POINTER&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a982377be8c79b305b9658ecbfd77cf3b" kindref="member">OS_ERROR_ADDRESS_MISALIGNED</ref>:</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ADDRESS_MISALIGNED&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ac760cd5e5e0f4cfeb7b5cc1c1522d8ef" kindref="member">OS_ERROR_TIMEOUT</ref>:</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERROR_TIMEOUT&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a710e9e56b589e8dedbd2b308ea464d30" kindref="member">OS_INVALID_INT_NUM</ref>:</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_INVALID_INT_NUM&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a6d87a94eb3eefb1bb65524f6ab1b0caf" kindref="member">OS_SEM_FAILURE</ref>:</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_SEM_FAILURE&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a35554fb81bd9d5f3522affba282f4f42" kindref="member">OS_SEM_TIMEOUT</ref>:</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_SEM_TIMEOUT&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a649aefc48b25fa31f54b59fe16fc501f" kindref="member">OS_QUEUE_EMPTY</ref>:</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_QUEUE_EMPTY&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a1bb3ced7e39cd5e1ca6d4c45f153cbc2" kindref="member">OS_QUEUE_FULL</ref>:</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_QUEUE_FULL&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a11a8fcc6118adb5c801e6b84739af6a0" kindref="member">OS_QUEUE_TIMEOUT</ref>:</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_QUEUE_TIMEOUT&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab6e87a032d04168d8bab19d8a7584064" kindref="member">OS_QUEUE_INVALID_SIZE</ref>:</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_QUEUE_INVALID_SIZE&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1aa2d9e0ae1d71d3b57e0c4d8663344c50" kindref="member">OS_QUEUE_ID_ERROR</ref>:</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_QUEUE_ID_ERROR&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab3fa672527cd54a2dad5c1cc0a2a8011" kindref="member">OS_ERR_NAME_TOO_LONG</ref>:</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_NAME_TOO_LONG&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a4acf115a82cd8d9180779106832972e9" kindref="member">OS_ERR_NO_FREE_IDS</ref>:</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_NO_FREE_IDS&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1ab8ee9d9583a0911e5d758a0fc542b637" kindref="member">OS_ERR_NAME_TAKEN</ref>:</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_NAME_TAKEN&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a3e18cb03df913bcc1522b61a29df3929" kindref="member">OS_ERR_INVALID_ID</ref>:</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_INVALID_ID&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a76c3d4d8ae21e0067520d538db8dab18" kindref="member">OS_ERR_NAME_NOT_FOUND</ref>:</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_NAME_NOT_FOUND&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a148a6801434043813c3a0e4695e20e5e" kindref="member">OS_ERR_SEM_NOT_FULL</ref>:</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_SEM_NOT_FULL&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="osapi_8h_1a42b6fa16d090d4fd0366a48b008515da" kindref="member">OS_ERR_INVALID_PRIORITY</ref>:</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;OS_ERR_INVALID_PRIORITY&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>strcpy(local_name,</highlight><highlight class="stringliteral">&quot;ERROR_UNKNOWN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_code<sp/>=<sp/><ref refid="osapi_8h_1af41e7a381cb414280c4d7f64be56228e" kindref="member">OS_ERROR</ref>;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>err_name,<sp/>local_name);</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>return_code;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3799"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_PriorityRemap</highlight></codeline>
<codeline lineno="3800"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3801"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>Remaps<sp/>the<sp/>OSAL<sp/>priority<sp/>into<sp/>one<sp/>that<sp/>is<sp/>viable<sp/>for<sp/>this<sp/>OS</highlight></codeline>
<codeline lineno="3802"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight></codeline>
<codeline lineno="3804" refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a5a4aad89ad1b7db2b5bc3dffb103b4a2" kindref="member">OS_PriorityRemap</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>InputPri)</highlight></codeline>
<codeline lineno="3805"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>OutputPri;</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pmax<sp/>=<sp/>sched_get_priority_max(<sp/>SCHED_FIFO<sp/>);</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pmin<sp/>=<sp/>sched_get_priority_min(<sp/>SCHED_FIFO<sp/>);</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prange<sp/>=<sp/>abs((pmax<sp/>-<sp/>pmin)<sp/><sp/>+1);</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numbins,<sp/>offset;</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsMinNegative<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MinNegOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>IsMaxNegative<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxNegOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>InputRev;</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>an<sp/>end<sp/>point<sp/>is<sp/>negative,<sp/>adjust<sp/>the<sp/>range<sp/>upward<sp/>so<sp/>that<sp/>there<sp/>is<sp/>no<sp/>negative<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pmin<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMinNegative<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinNegOffset<sp/>=<sp/>-pmin;</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmin<sp/>+=<sp/>MinNegOffset;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmax<sp/>+=<sp/>MinNegOffset;</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pmax<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsMaxNegative<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MaxNegOffset<sp/>=<sp/>-pmax;</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmin<sp/>+=<sp/>MaxNegOffset;</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pmax<sp/>+=<sp/>MaxNegOffset;</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>number<sp/>of<sp/>&apos;bins&apos;<sp/>to<sp/>map<sp/>the<sp/>OSAL<sp/>priorities<sp/>into.</highlight></codeline>
<codeline lineno="3835"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Since<sp/>the<sp/>Underlying<sp/>OS<sp/>will<sp/>have<sp/>AT<sp/>MOST<sp/>as<sp/>many<sp/>priority<sp/>levels<sp/>as</highlight></codeline>
<codeline lineno="3836"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>OSAL<sp/>(256<sp/>values),<sp/>then<sp/>we<sp/>will<sp/>be<sp/>pigeon-holing<sp/>a<sp/>larger<sp/>range<sp/></highlight></codeline>
<codeline lineno="3837"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(OSAL<sp/>priorities)<sp/>into<sp/>a<sp/>small<sp/>range<sp/>(OS<sp/>priorities),<sp/>or<sp/>the<sp/>ranges<sp/>are</highlight></codeline>
<codeline lineno="3838"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>equal,<sp/>which<sp/>is<sp/>OK<sp/>too.</highlight></codeline>
<codeline lineno="3839"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/>numbins<sp/>=<sp/><ref refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" kindref="member">MAX_PRIORITY</ref>/prange;</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>we<sp/>are<sp/>more<sp/>than<sp/>half<sp/>way<sp/>to<sp/>making<sp/>a<sp/>new<sp/>bin,<sp/>add<sp/>another<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" kindref="member">MAX_PRIORITY</ref><sp/>%<sp/>prange<sp/>&gt;<sp/>prange/2)</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numbins++;</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Since<sp/>the<sp/>OSAL<sp/>priorities<sp/>have<sp/>0<sp/>as<sp/>the<sp/>highest<sp/>and<sp/>255<sp/>as<sp/>the<sp/>lowest,</highlight></codeline>
<codeline lineno="3851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>to<sp/>reverse<sp/>this<sp/>so<sp/>that<sp/>the<sp/>numerically<sp/>higher<sp/>number<sp/>is<sp/>a<sp/>higher<sp/>priority</highlight></codeline>
<codeline lineno="3852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>work<sp/>with<sp/>the<sp/>OS&apos;s</highlight></codeline>
<codeline lineno="3853"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"></highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>InputRev<sp/>=<sp/><ref refid="osapi_8c_1a81e3b7a44caf87cdffee98fe20cd45da" kindref="member">MAX_PRIORITY</ref><sp/>-<sp/>InputPri;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>offset<sp/>from<sp/>the<sp/>min<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>InputRev<sp/>/<sp/>numbins<sp/>;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>OutputPri<sp/>=<sp/>pmin<sp/>+<sp/>offset<sp/>;<sp/><sp/></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>care<sp/>of<sp/>extraneous<sp/>cases<sp/>at<sp/>ends,<sp/>if<sp/>they<sp/>occur.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(OutputPri<sp/>&gt;<sp/>pmax)</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPri<sp/>=<sp/>pmax;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>OutputPri<sp/>&lt;<sp/>pmin)</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPri<sp/>=<sp/>pmin;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>an<sp/>end<sp/>point<sp/>was<sp/>negative,<sp/>shift<sp/>it<sp/>back<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsMinNegative<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPri<sp/>-=<sp/>MinNegOffset;</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsMaxNegative<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OutputPri<sp/>-=<sp/>MaxNegOffset;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>OutputPri;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal">}</highlight><highlight class="comment">/*end<sp/>OS_PriortyRemap*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3889"><highlight class="comment"><sp/>*<sp/>Name:<sp/>OS_ThreadKillHandler</highlight></codeline>
<codeline lineno="3890"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="3891"><highlight class="comment"><sp/>*<sp/>Purpose:<sp/>This<sp/>function<sp/>allows<sp/>for<sp/>a<sp/>task<sp/>to<sp/>be<sp/>deleted<sp/>when<sp/>OS_TaskDelete</highlight></codeline>
<codeline lineno="3892"><highlight class="comment"><sp/>*<sp/>is<sp/>called<sp/><sp/></highlight></codeline>
<codeline lineno="3893"><highlight class="comment">----------------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"></highlight></codeline>
<codeline lineno="3895" refid="osapi_8c_1aac4d6adb633b44a489ac9f3344db7e2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="osapi_8c_1aac4d6adb633b44a489ac9f3344db7e2a" kindref="member">OS_ThreadKillHandler</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sig)</highlight></codeline>
<codeline lineno="3896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_exit(<ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal">}</highlight><highlight class="comment">/*end<sp/>OS_ThreadKillHandler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3903"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3904"><highlight class="comment">**<sp/><sp/><sp/>Name:<sp/>OS_FPUExcSetMask</highlight></codeline>
<codeline lineno="3905"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3906"><highlight class="comment">**<sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>sets<sp/>the<sp/>FPU<sp/>exception<sp/>mask</highlight></codeline>
<codeline lineno="3907"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3908"><highlight class="comment">**<sp/><sp/><sp/>Notes:<sp/>The<sp/>exception<sp/>environment<sp/>is<sp/>local<sp/>to<sp/>each<sp/>task<sp/>Therefore<sp/>this<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="3909"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>for<sp/>each<sp/>task<sp/>that<sp/>that<sp/>wants<sp/>to<sp/>do<sp/>floating<sp/>point<sp/>and<sp/>catch<sp/>exceptions.</highlight></codeline>
<codeline lineno="3910"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3911" refid="osapi_8c_1a676d53165f7739e5e08315e812fd7c95" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a676d53165f7739e5e08315e812fd7c95" kindref="member">OS_FPUExcSetMask</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>mask)</highlight></codeline>
<codeline lineno="3912"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3914"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Not<sp/>implemented<sp/>in<sp/>linux.</highlight></codeline>
<codeline lineno="3915"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3920"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3921"><highlight class="comment">**<sp/><sp/><sp/>Name:<sp/>OS_FPUExcGetMask</highlight></codeline>
<codeline lineno="3922"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3923"><highlight class="comment">**<sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>gets<sp/>the<sp/>FPU<sp/>exception<sp/>mask</highlight></codeline>
<codeline lineno="3924"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3925"><highlight class="comment">**<sp/><sp/><sp/>Notes:<sp/>The<sp/>exception<sp/>environment<sp/>is<sp/>local<sp/>to<sp/>each<sp/>task<sp/>Therefore<sp/>this<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="3926"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>called<sp/>for<sp/>each<sp/>task<sp/>that<sp/>that<sp/>wants<sp/>to<sp/>do<sp/>floating<sp/>point<sp/>and<sp/>catch<sp/>exceptions.</highlight></codeline>
<codeline lineno="3927"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3928" refid="osapi_8c_1a10da399290cb465c95adb084ae8911b8" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="osapi_8c_1a10da399290cb465c95adb084ae8911b8" kindref="member">OS_FPUExcGetMask</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*mask)</highlight></codeline>
<codeline lineno="3929"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3931"><highlight class="comment"><sp/><sp/><sp/><sp/>**<sp/>Not<sp/>implemented<sp/>in<sp/>linux.</highlight></codeline>
<codeline lineno="3932"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="osapi_8h_1a35b2b8984c2833372a467771063b05be" kindref="member">OS_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="3934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3937"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3938"><highlight class="comment">**<sp/><sp/><sp/>Name:<sp/>OS_InterruptSafeLock</highlight></codeline>
<codeline lineno="3939"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3940"><highlight class="comment">**<sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>masks<sp/>signals<sp/>and<sp/>locks<sp/>a<sp/>mutex<sp/>for<sp/>mutual<sp/>exclusion<sp/></highlight></codeline>
<codeline lineno="3941"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3942"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3943" refid="ostimer_8c_1ab56838cd7dddc5d97af742c4937bb751" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1ab56838cd7dddc5d97af742c4937bb751" kindref="member">OS_InterruptSafeLock</ref>(pthread_mutex_t<sp/>*lock,<sp/>sigset_t<sp/>*</highlight><highlight class="keyword">set</highlight><highlight class="normal">,<sp/>sigset_t<sp/>*previous)</highlight></codeline>
<codeline lineno="3944"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Block<sp/>all<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(</highlight><highlight class="keyword">set</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(previous);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>sigfillset(</highlight><highlight class="keyword">set</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_sigmask(SIG_SETMASK,<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">,<sp/>previous)<sp/>==<sp/>0)<sp/></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Acquire<sp/>the<sp/>lock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pthread_mutex_lock(lock);</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EINVAL;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3962"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3963"><highlight class="comment">**<sp/><sp/><sp/>Name:<sp/>OS_InterruptSafeUnlock</highlight></codeline>
<codeline lineno="3964"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3965"><highlight class="comment">**<sp/><sp/><sp/>Purpose:<sp/>This<sp/>function<sp/>unlocks<sp/>the<sp/>mutex<sp/>and<sp/>restores<sp/>the<sp/>signal<sp/>mask<sp/></highlight></codeline>
<codeline lineno="3966"><highlight class="comment">**</highlight></codeline>
<codeline lineno="3967"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3968" refid="ostimer_8c_1af597a2d48bba739085dbf6cb8670e1c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="osapi_8c_1af597a2d48bba739085dbf6cb8670e1c3" kindref="member">OS_InterruptSafeUnlock</ref>(pthread_mutex_t<sp/>*lock,<sp/>sigset_t<sp/>*previous)</highlight></codeline>
<codeline lineno="3969"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>the<sp/>lock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(lock);</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Restore<sp/>previous<sp/>signals<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_sigmask(SIG_SETMASK,<sp/>previous,<sp/>0);</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/>sigdelset(previous,<sp/>0);</highlight></codeline>
<codeline lineno="3976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/vagrant/airliner/core/osal/src/os/posix-fast/osapi.c"/>
  </compounddef>
</doxygen>
