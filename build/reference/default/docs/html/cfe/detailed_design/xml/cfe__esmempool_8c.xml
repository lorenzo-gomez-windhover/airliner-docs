<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cfe__esmempool_8c" kind="file" language="C++">
    <compoundname>cfe_esmempool.c</compoundname>
    <includes refid="cfe__private_8h" local="yes">private/cfe_private.h</includes>
    <includes refid="cfe__esmempool_8h" local="yes">cfe_esmempool.h</includes>
    <includes refid="cfe__es_8h" local="yes">cfe_es.h</includes>
    <includes refid="cfe__es__task_8h" local="yes">cfe_es_task.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="5772">
        <label>sys/stat.h</label>
      </node>
      <node id="5766">
        <label>stdarg.h</label>
      </node>
      <node id="5760">
        <label>common_types.h</label>
        <link refid="common__types_8h"/>
      </node>
      <node id="5786">
        <label>cfe_psp.h</label>
      </node>
      <node id="5770">
        <label>stdlib.h</label>
      </node>
      <node id="5758">
        <label>es/cfe_esmempool.c</label>
        <link refid="cfe_esmempool.c"/>
        <childnode refid="5759" relation="include">
        </childnode>
        <childnode refid="5790" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
        <childnode refid="5791" relation="include">
        </childnode>
        <childnode refid="5769" relation="include">
        </childnode>
      </node>
      <node id="5790">
        <label>cfe_esmempool.h</label>
        <link refid="cfe__esmempool_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
      </node>
      <node id="5787">
        <label>ccsds.h</label>
        <link refid="ccsds_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5776" relation="include">
        </childnode>
      </node>
      <node id="5778">
        <label>cfe_msgids.h</label>
      </node>
      <node id="5793">
        <label>cfe_es_events.h</label>
        <link refid="cfe__es__events_8h"/>
      </node>
      <node id="5767">
        <label>osapi-os-rtm.h</label>
        <link refid="osapi-os-rtm_8h"/>
      </node>
      <node id="5781">
        <label>cfe_es_perfids.h</label>
        <link refid="cfe__es__perfids_8h"/>
      </node>
      <node id="5791">
        <label>cfe_es_task.h</label>
        <link refid="cfe__es__task_8h"/>
        <childnode refid="5761" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
        <childnode refid="5792" relation="include">
        </childnode>
        <childnode refid="5793" relation="include">
        </childnode>
        <childnode refid="5794" relation="include">
        </childnode>
      </node>
      <node id="5783">
        <label>cfe_time.h</label>
        <link refid="cfe__time_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
      </node>
      <node id="5784">
        <label>cfe_evs_msg.h</label>
        <link refid="cfe__evs__msg_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5762" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
      </node>
      <node id="5768">
        <label>osapi-os-filesys.h</label>
        <link refid="osapi-os-filesys_8h"/>
        <childnode refid="5769" relation="include">
        </childnode>
        <childnode refid="5770" relation="include">
        </childnode>
        <childnode refid="5771" relation="include">
        </childnode>
        <childnode refid="5772" relation="include">
        </childnode>
      </node>
      <node id="5763">
        <label>osapi-version.h</label>
        <link refid="osapi-version_8h"/>
      </node>
      <node id="5762">
        <label>osapi.h</label>
        <link refid="osapi_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5763" relation="include">
        </childnode>
        <childnode refid="5764" relation="include">
        </childnode>
        <childnode refid="5765" relation="include">
        </childnode>
        <childnode refid="5768" relation="include">
        </childnode>
        <childnode refid="5773" relation="include">
        </childnode>
        <childnode refid="5774" relation="include">
        </childnode>
        <childnode refid="5775" relation="include">
        </childnode>
        <childnode refid="5767" relation="include">
        </childnode>
      </node>
      <node id="5775">
        <label>osapi-os-timer.h</label>
        <link refid="osapi-os-timer_8h"/>
      </node>
      <node id="5792">
        <label>cfe_es_apps.h</label>
        <link refid="cfe__es__apps_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5762" relation="include">
        </childnode>
      </node>
      <node id="5776">
        <label>cfe_mission_cfg.h</label>
        <link refid="cfe__mission__cfg_8h"/>
      </node>
      <node id="5777">
        <label>cfe_platform_cfg.h</label>
      </node>
      <node id="5764">
        <label>osconfig.h</label>
      </node>
      <node id="5773">
        <label>osapi-os-net.h</label>
        <link refid="osapi-os-net_8h"/>
      </node>
      <node id="5785">
        <label>cfe_sb.h</label>
        <link refid="cfe__sb_8h"/>
        <childnode refid="5764" relation="include">
        </childnode>
        <childnode refid="5786" relation="include">
        </childnode>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5777" relation="include">
        </childnode>
        <childnode refid="5787" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
      </node>
      <node id="5780">
        <label>cfe_es.h</label>
        <link refid="cfe__es_8h"/>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5781" relation="include">
        </childnode>
      </node>
      <node id="5761">
        <label>cfe.h</label>
        <link refid="cfe_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5762" relation="include">
        </childnode>
        <childnode refid="5776" relation="include">
        </childnode>
        <childnode refid="5777" relation="include">
        </childnode>
        <childnode refid="5778" relation="include">
        </childnode>
        <childnode refid="5779" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
        <childnode refid="5782" relation="include">
        </childnode>
        <childnode refid="5788" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5789" relation="include">
        </childnode>
        <childnode refid="5786" relation="include">
        </childnode>
      </node>
      <node id="5782">
        <label>cfe_evs.h</label>
        <link refid="cfe__evs_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5784" relation="include">
        </childnode>
        <childnode refid="5762" relation="include">
        </childnode>
        <childnode refid="5785" relation="include">
        </childnode>
      </node>
      <node id="5774">
        <label>osapi-os-loader.h</label>
        <link refid="osapi-os-loader_8h"/>
      </node>
      <node id="5788">
        <label>cfe_fs.h</label>
        <link refid="cfe__fs_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
      </node>
      <node id="5759">
        <label>private/cfe_private.h</label>
        <link refid="cfe__private_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5761" relation="include">
        </childnode>
        <childnode refid="5777" relation="include">
        </childnode>
      </node>
      <node id="5789">
        <label>cfe_tbl.h</label>
        <link refid="cfe__tbl_8h"/>
        <childnode refid="5760" relation="include">
        </childnode>
        <childnode refid="5783" relation="include">
        </childnode>
        <childnode refid="5764" relation="include">
        </childnode>
      </node>
      <node id="5779">
        <label>cfe_error.h</label>
        <link refid="cfe__error_8h"/>
        <childnode refid="5762" relation="include">
        </childnode>
      </node>
      <node id="5769">
        <label>stdio.h</label>
      </node>
      <node id="5794">
        <label>cfe_es_msg.h</label>
        <link refid="cfe__es__msg_8h"/>
        <childnode refid="5761" relation="include">
        </childnode>
        <childnode refid="5780" relation="include">
        </childnode>
      </node>
      <node id="5765">
        <label>osapi-os-core.h</label>
        <link refid="osapi-os-core_8h"/>
        <childnode refid="5766" relation="include">
        </childnode>
        <childnode refid="5767" relation="include">
        </childnode>
      </node>
      <node id="5771">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" prot="public" static="no">
        <name>CFE_ES_CHECK_PATTERN</name>
        <initializer>0x5a5a</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="83" column="9" bodyfile="es/cfe_esmempool.c" bodystart="83" bodyend="-1"/>
        <referencedby refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" compoundref="cfe__esmempool_8c" startline="305" endline="404">CFE_ES_GetPoolBuf</referencedby>
        <referencedby refid="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" compoundref="cfe__esmempool_8c" startline="409" endline="463">CFE_ES_GetPoolBufInfo</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" compoundref="cfe__esmempool_8c" startline="468" endline="551">CFE_ES_PutPoolBuf</referencedby>
      </memberdef>
      <memberdef kind="define" id="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" prot="public" static="no">
        <name>CFE_ES_MEMORY_ALLOCATED</name>
        <initializer>0xaaaa</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="84" column="9" bodyfile="es/cfe_esmempool.c" bodystart="84" bodyend="-1"/>
        <referencedby refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" compoundref="cfe__esmempool_8c" startline="305" endline="404">CFE_ES_GetPoolBuf</referencedby>
        <referencedby refid="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" compoundref="cfe__esmempool_8c" startline="409" endline="463">CFE_ES_GetPoolBufInfo</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" compoundref="cfe__esmempool_8c" startline="468" endline="551">CFE_ES_PutPoolBuf</referencedby>
      </memberdef>
      <memberdef kind="define" id="cfe__esmempool_8c_1a4ea9fc431cc29215a08677d3bb660722" prot="public" static="no">
        <name>CFE_ES_MEMORY_DEALLOCATED</name>
        <initializer>0xdddd</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="85" column="9" bodyfile="es/cfe_esmempool.c" bodystart="85" bodyend="-1"/>
        <referencedby refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" compoundref="cfe__esmempool_8c" startline="468" endline="551">CFE_ES_PutPoolBuf</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>uint32 CFE_ES_MemPoolDefSize[CFE_ES_MAX_MEMPOOL_BLOCK_SIZES]</definition>
        <argsstring>[CFE_ES_MAX_MEMPOOL_BLOCK_SIZES]</argsstring>
        <name>CFE_ES_MemPoolDefSize</name>
        <initializer>=
{
    CFE_ES_MAX_BLOCK_SIZE,
    CFE_ES_MEM_BLOCK_SIZE_16,
    CFE_ES_MEM_BLOCK_SIZE_15,
    CFE_ES_MEM_BLOCK_SIZE_14,
    CFE_ES_MEM_BLOCK_SIZE_13,
    CFE_ES_MEM_BLOCK_SIZE_12,
    CFE_ES_MEM_BLOCK_SIZE_11,
    CFE_ES_MEM_BLOCK_SIZE_10,
    CFE_ES_MEM_BLOCK_SIZE_09,
    CFE_ES_MEM_BLOCK_SIZE_08,
    CFE_ES_MEM_BLOCK_SIZE_07,
    CFE_ES_MEM_BLOCK_SIZE_06,
    CFE_ES_MEM_BLOCK_SIZE_05,
    CFE_ES_MEM_BLOCK_SIZE_04,
    CFE_ES_MEM_BLOCK_SIZE_03,
    CFE_ES_MEM_BLOCK_SIZE_02,
    CFE_ES_MEM_BLOCK_SIZE_01
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="92" column="1" bodyfile="es/cfe_esmempool.c" bodystart="92" bodyend="-1"/>
        <referencedby refid="cfe__esmempool_8c_1af0248c9918a7c6907d8d1f4fa3b99160" compoundref="cfe__esmempool_8c" startline="138" endline="144">CFE_ES_PoolCreate</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</referencedby>
        <referencedby refid="cfe__esmempool_8c_1adb1afd1d7fe494cf0e0a214c6da3a4a8" compoundref="cfe__esmempool_8c" startline="127" endline="133">CFE_ES_PoolCreateNoSem</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
        <definition>uint32 CFE_ES_GetBlockSize</definition>
        <argsstring>(Pool_t *PoolPtr, uint32 Size)</argsstring>
        <name>CFE_ES_GetBlockSize</name>
        <param>
          <type>Pool_t *</type>
          <declname>PoolPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="117" column="1" bodyfile="es/cfe_esmempool.c" bodystart="560" bodyend="582"/>
        <references refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" compoundref="cfe__es_8h" startline="154">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <referencedby refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" compoundref="cfe__esmempool_8c" startline="305" endline="404">CFE_ES_GetPoolBuf</referencedby>
        <referencedby refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" compoundref="cfe__esmempool_8c" startline="468" endline="551">CFE_ES_PutPoolBuf</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1adb1afd1d7fe494cf0e0a214c6da3a4a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_PoolCreateNoSem</definition>
        <argsstring>(CFE_ES_MemHandle_t *HandlePtr, uint8 *MemPtr, uint32 Size)</argsstring>
        <name>CFE_ES_PoolCreateNoSem</name>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref> *</type>
          <declname>HandlePtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref> *</type>
          <declname>MemPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Size</declname>
        </param>
        <briefdescription>
<para>Initializes a memory pool created by an application without using a semaphore during processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine initializes a pool of memory supplied by the calling application. When a memory pool created by this routine is processed, no mutex handling is performed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>The size of the pool must be an integral number of 32-bit words</para></listitem><listitem><para>The start address of the pool must be 32-bit aligned</para></listitem><listitem><para>168 bytes are used for internal bookkeeping, therefore, they will not be available for allocation.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the variable the caller wishes to have the memory pool handle kept in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MemPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A Pointer to the pool of memory created by the calling application. This address must be on a 32-bit boundary.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the pool of memory. Note that this must be an integral number of 32 bit words.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory pool handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref> </para></entry><entry thead="no"><para>Bad parameter passed into an ES API.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>, <ref refid="cfe__es_8h_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>, <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>, <ref refid="cfe__es_8h_1a87bcb4ee33a996e6219607b629e595fd" kindref="member">CFE_ES_PutPoolBuf</ref>, <ref refid="cfe__es_8h_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="127" column="1" bodyfile="es/cfe_esmempool.c" bodystart="127" bodyend="133"/>
        <references refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" compoundref="cfe__es_8h" startline="154">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</references>
        <references refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" compoundref="cfe__esmempool_8c" startline="92">CFE_ES_MemPoolDefSize</references>
        <references refid="cfe__es_8h_1a46c1b23ca468cf628194c0a564e1a416" compoundref="cfe__es_8h" startline="202">CFE_ES_NO_MUTEX</references>
        <references refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</references>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1af0248c9918a7c6907d8d1f4fa3b99160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_PoolCreate</definition>
        <argsstring>(CFE_ES_MemHandle_t *HandlePtr, uint8 *MemPtr, uint32 Size)</argsstring>
        <name>CFE_ES_PoolCreate</name>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref> *</type>
          <declname>HandlePtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref> *</type>
          <declname>MemPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Size</declname>
        </param>
        <briefdescription>
<para>Initializes a memory pool created by an application while using a semaphore during processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine initializes a pool of memory supplied by the calling application. When a memory pool created by this routine is processed, mutex handling will be performed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>The size of the pool must be an integral number of 32-bit words</para></listitem><listitem><para>The start address of the pool must be 32-bit aligned</para></listitem><listitem><para>168 bytes are used for internal bookkeeping, therefore, they will not be available for allocation.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the variable the caller wishes to have the memory pool handle kept in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MemPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A Pointer to the pool of memory created by the calling application. This address must be on a 32-bit boundary.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the pool of memory. Note that this must be an integral number of 32 bit words.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory pool handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref> </para></entry><entry thead="no"><para>Bad parameter passed into an ES API.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>, <ref refid="cfe__es_8h_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>, <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>, <ref refid="cfe__es_8h_1a87bcb4ee33a996e6219607b629e595fd" kindref="member">CFE_ES_PutPoolBuf</ref>, <ref refid="cfe__es_8h_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="138" column="1" bodyfile="es/cfe_esmempool.c" bodystart="138" bodyend="144"/>
        <references refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" compoundref="cfe__es_8h" startline="154">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</references>
        <references refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" compoundref="cfe__esmempool_8c" startline="92">CFE_ES_MemPoolDefSize</references>
        <references refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" compoundref="cfe__esmempool_8c" startline="147" endline="296">CFE_ES_PoolCreateEx</references>
        <references refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" compoundref="cfe__es_8h" startline="203">CFE_ES_USE_MUTEX</references>
        <referencedby refid="cfe__tbl__internal_8c_1a6b6bd14ad2156d4d1ca50748a5d49c8f" compoundref="cfe__tbl__internal_8c" startline="102" endline="293">CFE_TBL_EarlyInit</referencedby>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_PoolCreateEx</definition>
        <argsstring>(CFE_ES_MemHandle_t *HandlePtr, uint8 *MemPtr, uint32 Size, uint32 NumBlockSizes, uint32 *BlockSizes, uint16 UseMutex)</argsstring>
        <name>CFE_ES_PoolCreateEx</name>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref> *</type>
          <declname>HandlePtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref> *</type>
          <declname>MemPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Size</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>NumBlockSizes</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>BlockSizes</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref></type>
          <declname>UseMutex</declname>
        </param>
        <briefdescription>
<para>Initializes a memory pool created by an application with application specified block sizes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine initializes a pool of memory supplied by the calling application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>The size of the pool must be an integral number of 32-bit words</para></listitem><listitem><para>The start address of the pool must be 32-bit aligned</para></listitem><listitem><para>168 bytes are used for internal bookkeeping, therefore, they will not be available for allocation.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the variable the caller wishes to have the memory pool handle kept in.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MemPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A Pointer to the pool of memory created by the calling application. This address must be on a 32-bit boundary.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the pool of memory. Note that this must be an integral number of 32 bit words.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">NumBlockSizes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of different block sizes specified in the <computeroutput>BlockSizes</computeroutput> array. If set equal to zero or if greater than 17, then default block sizes are used.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">BlockSizes</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an array of sizes to be used instead of the default block sizes specified by #CFE_ES_MEM_BLOCK_SIZE_01 through #CFE_ES_MAX_BLOCK_SIZE. If the pointer is equal to NULL, the default block sizes are used.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">UseMutex</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag indicating whether the new memory pool will be processing with mutex handling or not. Valid parameter values are <ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref> and <ref refid="cfe__es_8h_1a46c1b23ca468cf628194c0a564e1a416" kindref="member">CFE_ES_NO_MUTEX</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The memory pool handle.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref> </para></entry><entry thead="no"><para>Bad parameter passed into an ES API.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>, <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>, <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>, <ref refid="cfe__es_8h_1a87bcb4ee33a996e6219607b629e595fd" kindref="member">CFE_ES_PutPoolBuf</ref>, <ref refid="cfe__es_8h_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="147" column="1" bodyfile="es/cfe_esmempool.c" bodystart="147" bodyend="296"/>
        <references refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" compoundref="cfe__error_8h" startline="281">CFE_ES_BAD_ARGUMENT</references>
        <references refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" compoundref="cfe__es_8h" startline="154">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</references>
        <references refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" compoundref="cfe__esmempool_8c" startline="92">CFE_ES_MemPoolDefSize</references>
        <references refid="cfe__es_8h_1a46c1b23ca468cf628194c0a564e1a416" compoundref="cfe__es_8h" startline="202">CFE_ES_NO_MUTEX</references>
        <references refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" compoundref="cfe__es_8h" startline="203">CFE_ES_USE_MUTEX</references>
        <references refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" compoundref="cfe__error_8h" startline="162">CFE_SUCCESS</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" compoundref="stubs_8c" startline="36">OS_MAX_API_NAME</references>
        <references refid="osapi-os-core_8h_1a1cec40bf769e2db8614c1ef6d9906a8d" compoundref="osapi_8c" startline="2910" endline="3047">OS_MutSemCreate</references>
        <references refid="osapi-os-core_8h_1a4be56a807779019aad0c84e439906d11" compoundref="stubs_8c" startline="106" endline="109">OS_MutSemDelete</references>
        <references refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" compoundref="osapi_8c" startline="3115" endline="3144">OS_MutSemGive</references>
        <references refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" compoundref="osapi_8c" startline="3160" endline="3198">OS_MutSemTake</references>
        <referencedby refid="cfe__esmempool_8c_1af0248c9918a7c6907d8d1f4fa3b99160" compoundref="cfe__esmempool_8c" startline="138" endline="144">CFE_ES_PoolCreate</referencedby>
        <referencedby refid="cfe__esmempool_8c_1adb1afd1d7fe494cf0e0a214c6da3a4a8" compoundref="cfe__esmempool_8c" startline="127" endline="133">CFE_ES_PoolCreateNoSem</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1acaab249a878acdab893837f3ff7a584c" compoundref="cfe__sb__init_8c" startline="181" endline="200">CFE_SB_InitBuffers</referencedby>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_GetPoolBuf</definition>
        <argsstring>(uint32 **BufPtr, CFE_ES_MemHandle_t Handle, uint32 Size)</argsstring>
        <name>CFE_ES_GetPoolBuf</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> **</type>
          <declname>BufPtr</declname>
        </param>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref></type>
          <declname>HandlePtr</declname>
          <defname>Handle</defname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref></type>
          <declname>Size</declname>
        </param>
        <briefdescription>
<para>Gets a buffer from the memory pool created by <ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref> or <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine obtains a block of memory from the memory pool supplied by the calling application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><orderedlist>
<listitem><para>The size allocated from the memory pool is, at a minimum, 12 bytes more than requested.</para></listitem></orderedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">BufPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the Application&apos;s pointer in which will be stored the address of the allocated memory buffer.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the memory pool as returned by <ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref> or <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the buffer requested. NOTE: The size allocated may be larger.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*BufPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the requested buffer.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para>When successful, the return value is a positive number and is the number of bytes actually allocated for the buffer.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref> </para></entry><entry thead="no"><para>The Memory Pool handle is invalid.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1abff64d238de12f227aed77814fd26aef" kindref="member">CFE_ES_ERR_MEM_BLOCK_SIZE</ref> </para></entry><entry thead="no"><para>The block size requested is invalid.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>, <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>, <ref refid="cfe__es_8h_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>, <ref refid="cfe__es_8h_1a87bcb4ee33a996e6219607b629e595fd" kindref="member">CFE_ES_PutPoolBuf</ref>, <ref refid="cfe__es_8h_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref>, <ref refid="cfe__es_8h_1aeaa3f8a8dda7fea627ec56500b01d272" kindref="member">CFE_ES_GetPoolBufInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="305" column="1" bodyfile="es/cfe_esmempool.c" bodystart="305" bodyend="404"/>
        <references refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" compoundref="cfe__esmempool_8c" startline="83">CFE_ES_CHECK_PATTERN</references>
        <references refid="cfe__error_8h_1abff64d238de12f227aed77814fd26aef" compoundref="cfe__error_8h" startline="269">CFE_ES_ERR_MEM_BLOCK_SIZE</references>
        <references refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" compoundref="cfe__error_8h" startline="263">CFE_ES_ERR_MEM_HANDLE</references>
        <references refid="cfe__es_8h_1a76ee880d8ee4f632420507997779c1aa" compoundref="cfe__es__api_8c" startline="784" endline="810">CFE_ES_GetAppID</references>
        <references refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" compoundref="cfe__esmempool_8c" startline="560" endline="582">CFE_ES_GetBlockSize</references>
        <references refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" compoundref="cfe__esmempool_8c" startline="84">CFE_ES_MEMORY_ALLOCATED</references>
        <references refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" compoundref="cfe__es_8h" startline="203">CFE_ES_USE_MUTEX</references>
        <references refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d">CFE_ES_WriteToSysLog</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" compoundref="osapi_8c" startline="3115" endline="3144">OS_MutSemGive</references>
        <references refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" compoundref="osapi_8c" startline="3160" endline="3198">OS_MutSemTake</references>
        <referencedby refid="cfe__sb__task_8c_1a4802e15e16324c6129743be7aa076917" compoundref="cfe__sb__task_8c" startline="192" endline="352">CFE_SB_AppInit</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a3631c5d384e8ab87887049380c319607" compoundref="cfe__sb__buf_8c" startline="108" endline="146">CFE_SB_GetBufferFromPool</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a03935efec131d0b26d05c1410d4e4d45" compoundref="cfe__sb__buf_8c" startline="257" endline="277">CFE_SB_GetDestinationBlk</referencedby>
        <referencedby refid="cfe__sb__api_8c_1a40630a2f5465cf30206a45c970bb4cc4" compoundref="cfe__sb__api_8c" startline="1672" endline="1756">CFE_SB_ZeroCopyGetPtr</referencedby>
        <referencedby refid="cfe__tbl__internal_8c_1a6b6bd14ad2156d4d1ca50748a5d49c8f" compoundref="cfe__tbl__internal_8c" startline="102" endline="293">CFE_TBL_EarlyInit</referencedby>
        <referencedby refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" compoundref="cfe__tbl__api_8c" startline="90" endline="539">CFE_TBL_Register</referencedby>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_GetPoolBufInfo</definition>
        <argsstring>(CFE_ES_MemHandle_t Handle, uint32 *BufPtr)</argsstring>
        <name>CFE_ES_GetPoolBufInfo</name>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref></type>
          <declname>HandlePtr</declname>
          <defname>Handle</defname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>BufPtr</declname>
        </param>
        <briefdescription>
<para>Gets info on a buffer previously allocated via <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine gets info on a buffer in the memory pool.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the memory pool as returned by <ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref> or <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">BufPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the memory buffer to provide status for.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para>When successful, the return value is a positive number and is the number of bytes actually allocated.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref> </para></entry><entry thead="no"><para>The Memory Pool handle is invalid.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab336b3622b10319efd13b78ec455ce8c" kindref="member">CFE_ES_BUFFER_NOT_IN_POOL</ref> </para></entry><entry thead="no"><para>The specified address is not in the memory pool.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>, <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>, <ref refid="cfe__es_8h_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>, <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>, <ref refid="cfe__es_8h_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref>, <ref refid="cfe__es_8h_1a87bcb4ee33a996e6219607b629e595fd" kindref="member">CFE_ES_PutPoolBuf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="409" column="1" bodyfile="es/cfe_esmempool.c" bodystart="409" bodyend="463"/>
        <references refid="cfe__error_8h_1ab336b3622b10319efd13b78ec455ce8c" compoundref="cfe__error_8h" startline="477">CFE_ES_BUFFER_NOT_IN_POOL</references>
        <references refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" compoundref="cfe__esmempool_8c" startline="83">CFE_ES_CHECK_PATTERN</references>
        <references refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" compoundref="cfe__error_8h" startline="263">CFE_ES_ERR_MEM_HANDLE</references>
        <references refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" compoundref="cfe__esmempool_8c" startline="84">CFE_ES_MEMORY_ALLOCATED</references>
        <references refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" compoundref="cfe__es_8h" startline="203">CFE_ES_USE_MUTEX</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" compoundref="osapi_8c" startline="3115" endline="3144">OS_MutSemGive</references>
        <references refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" compoundref="osapi_8c" startline="3160" endline="3198">OS_MutSemTake</references>
        <referencedby refid="cfe__sb__priv_8h_1ae1d9e7bb8e5de4226bd0a3a220a707a9" compoundref="cfe__sb__api_8c" startline="1835" endline="1872">CFE_SB_ZeroCopyReleaseDesc</referencedby>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_PutPoolBuf</definition>
        <argsstring>(CFE_ES_MemHandle_t Handle, uint32 *BufPtr)</argsstring>
        <name>CFE_ES_PutPoolBuf</name>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref></type>
          <declname>HandlePtr</declname>
          <defname>Handle</defname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref> *</type>
          <declname>BufPtr</declname>
        </param>
        <briefdescription>
<para>Releases a buffer from the memory pool that was previously allocated via <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine releases a buffer back into the memory pool.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">HandlePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the memory pool as returned by <ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref> or <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">BufPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the memory buffer to be released.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>When successful, the return value is a positive number and is the number of bytes actually released.  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref> </para></entry><entry thead="no"><para>The Memory Pool handle is invalid.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>, <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>, <ref refid="cfe__es_8h_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>, <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>, <ref refid="cfe__es_8h_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref>, <ref refid="cfe__es_8h_1aeaa3f8a8dda7fea627ec56500b01d272" kindref="member">CFE_ES_GetPoolBufInfo</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="468" column="1" bodyfile="es/cfe_esmempool.c" bodystart="468" bodyend="551"/>
        <references refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" compoundref="cfe__esmempool_8c" startline="83">CFE_ES_CHECK_PATTERN</references>
        <references refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" compoundref="cfe__error_8h" startline="263">CFE_ES_ERR_MEM_HANDLE</references>
        <references refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" compoundref="cfe__esmempool_8c" startline="560" endline="582">CFE_ES_GetBlockSize</references>
        <references refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" compoundref="cfe__esmempool_8c" startline="84">CFE_ES_MEMORY_ALLOCATED</references>
        <references refid="cfe__esmempool_8c_1a4ea9fc431cc29215a08677d3bb660722" compoundref="cfe__esmempool_8c" startline="85">CFE_ES_MEMORY_DEALLOCATED</references>
        <references refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" compoundref="cfe__es_8h" startline="203">CFE_ES_USE_MUTEX</references>
        <references refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d">CFE_ES_WriteToSysLog</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" compoundref="osapi_8c" startline="3115" endline="3144">OS_MutSemGive</references>
        <references refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" compoundref="osapi_8c" startline="3160" endline="3198">OS_MutSemTake</references>
        <referencedby refid="cfe__sb__task_8c_1a4802e15e16324c6129743be7aa076917" compoundref="cfe__sb__task_8c" startline="192" endline="352">CFE_SB_AppInit</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1aab809c8ca01290b3a8041571e856f1f0" compoundref="cfe__sb__buf_8c" startline="292" endline="309">CFE_SB_PutDestinationBlk</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1a552e677aa1e0275a0328db08b6fd4a5a" compoundref="cfe__sb__buf_8c" startline="191" endline="204">CFE_SB_ReturnBufferToPool</referencedby>
        <referencedby refid="cfe__sb__api_8c_1a40630a2f5465cf30206a45c970bb4cc4" compoundref="cfe__sb__api_8c" startline="1672" endline="1756">CFE_SB_ZeroCopyGetPtr</referencedby>
        <referencedby refid="cfe__sb__priv_8h_1ae1d9e7bb8e5de4226bd0a3a220a707a9" compoundref="cfe__sb__api_8c" startline="1835" endline="1872">CFE_SB_ZeroCopyReleaseDesc</referencedby>
        <referencedby refid="cfe__sb__api_8c_1a89ec51d1986bec33c5a3b6605f92b04a" compoundref="cfe__sb__api_8c" startline="1784" endline="1809">CFE_SB_ZeroCopyReleasePtr</referencedby>
        <referencedby refid="cfe__tbl__internal_8h_1ae7ef66bdc979baab7e4e2549e104ac9f" compoundref="cfe__tbl__internal_8c" startline="480" endline="562">CFE_TBL_RemoveAccessLink</referencedby>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1a7df8809f546ab01315423672c43a5e22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref></type>
        <definition>int32 CFE_ES_GetMemPoolStats</definition>
        <argsstring>(CFE_ES_MemPoolStats_t *BufPtr, CFE_ES_MemHandle_t Handle)</argsstring>
        <name>CFE_ES_GetMemPoolStats</name>
        <param>
          <type><ref refid="struct_c_f_e___e_s___mem_pool_stats__t" kindref="compound">CFE_ES_MemPoolStats_t</ref> *</type>
          <declname>BufPtr</declname>
        </param>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref></type>
          <declname>Handle</declname>
        </param>
        <briefdescription>
<para>Extracts the statistics maintained by the memory pool software. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This routine fills the <ref refid="struct_c_f_e___e_s___mem_pool_stats__t" kindref="compound">CFE_ES_MemPoolStats_t</ref> data structure with the statistics maintained by the memory pool software. These statistics can then be telemetered by the calling Application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">BufPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to <ref refid="struct_c_f_e___e_s___mem_pool_stats__t" kindref="compound">CFE_ES_MemPoolStats_t</ref> data structure to be filled with memory statistics.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Handle</parametername>
</parameternamelist>
<parameterdescription>
<para>The handle to the memory pool whose statistics are desired.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*BufPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory Pool Statistics stored in given data structure.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para>Operation was performed successfully  </para></entry></row>
<row>
<entry thead="no"><para><ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref> </para></entry><entry thead="no"><para>The Memory Pool handle is invalid.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="cfe__es_8h_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>, <ref refid="cfe__es_8h_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>, <ref refid="cfe__es_8h_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>, <ref refid="cfe__es_8h_1ad1d355290c15c7c22ee78c1117ec5016" kindref="member">CFE_ES_GetPoolBuf</ref>, <ref refid="cfe__es_8h_1a87bcb4ee33a996e6219607b629e595fd" kindref="member">CFE_ES_PutPoolBuf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="592" column="1" bodyfile="es/cfe_esmempool.c" bodystart="592" bodyend="621"/>
        <references refid="struct_c_f_e___e_s___block_stats__t_1ac6120381e4351f06de4694bd7d99db8c" compoundref="cfe__es_8h" startline="340">CFE_ES_BlockStats_t::BlockSize</references>
        <references refid="struct_c_f_e___e_s___mem_pool_stats__t_1aced690686603d6887e4ae8d465176f58" compoundref="cfe__es_8h" startline="355">CFE_ES_MemPoolStats_t::BlockStats</references>
        <references refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" compoundref="cfe__error_8h" startline="263">CFE_ES_ERR_MEM_HANDLE</references>
        <references refid="cfe__es_8h_1a76ee880d8ee4f632420507997779c1aa" compoundref="cfe__es__api_8c" startline="784" endline="810">CFE_ES_GetAppID</references>
        <references refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" compoundref="cfe__es_8h" startline="154">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</references>
        <references refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" compoundref="cfe__error_8h" startline="162">CFE_SUCCESS</references>
        <references refid="struct_c_f_e___e_s___mem_pool_stats__t_1a450087787a798b79cd1fdaa01b23e5f4" compoundref="cfe__es_8h" startline="351">CFE_ES_MemPoolStats_t::CheckErrCtr</references>
        <references refid="struct_c_f_e___e_s___mem_pool_stats__t_1a02f9bbbaef9cb8a459251c5ddf414e07" compoundref="cfe__es_8h" startline="349">CFE_ES_MemPoolStats_t::NumBlocksRequested</references>
        <references refid="struct_c_f_e___e_s___block_stats__t_1ad1b17b82835c78886f2bac8616acc3ab" compoundref="cfe__es_8h" startline="341">CFE_ES_BlockStats_t::NumCreated</references>
        <references refid="struct_c_f_e___e_s___block_stats__t_1a09e33cdc585722cbf785cf81734d646a" compoundref="cfe__es_8h" startline="342">CFE_ES_BlockStats_t::NumFree</references>
        <references refid="struct_c_f_e___e_s___mem_pool_stats__t_1a2dcd04ad145677a80c7d81ac2f89781a" compoundref="cfe__es_8h" startline="353">CFE_ES_MemPoolStats_t::NumFreeBytes</references>
        <references refid="struct_c_f_e___e_s___mem_pool_stats__t_1a91bdbd454ce42e14a3fb7094155e6fdc" compoundref="cfe__es_8h" startline="347">CFE_ES_MemPoolStats_t::PoolSize</references>
        <referencedby refid="cfe__es__task_8h_1ab8e2c0622ff73040123dda6b243bc08d" compoundref="cfe__es__task_8c" startline="2038" endline="2083">CFE_ES_TlmPoolStatsCmd</referencedby>
        <referencedby refid="cfe__es_8h_1aaf3332369bf6b991d26a1a6b87ad9a90" compoundref="cfe__es_8h" startline="453" endline="457">OS_ConvertToArrayIndex</referencedby>
      </memberdef>
      <memberdef kind="function" id="cfe__esmempool_8c_1ae886a73a4ca49883a0e26b1386c1dd5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member">boolean</ref></type>
        <definition>boolean CFE_ES_ValidateHandle</definition>
        <argsstring>(CFE_ES_MemHandle_t Handle)</argsstring>
        <name>CFE_ES_ValidateHandle</name>
        <param>
          <type><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref></type>
          <declname>Handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="es/cfe_esmempool.c" line="631" column="1" bodyfile="es/cfe_esmempool.c" bodystart="631" bodyend="684"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="common__types_8h" startline="318">FALSE</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="common__types_8h" startline="310">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="common__types_8h" startline="314">TRUE</references>
        <referencedby refid="cfe__es__task_8h_1ab8e2c0622ff73040123dda6b243bc08d" compoundref="cfe__es__task_8c" startline="2038" endline="2083">CFE_ES_TlmPoolStatsCmd</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/><sp/>File:</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/><sp/>cfe_esmempool.c</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2004-2012,<sp/>United<sp/>States<sp/>government<sp/>as<sp/>represented<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>administrator<sp/>of<sp/>the<sp/>National<sp/>Aeronautics<sp/>Space<sp/>Administration.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved.<sp/>This<sp/>software(cFE)<sp/>was<sp/>created<sp/>at<sp/>NASA&apos;s<sp/>Goddard</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>Space<sp/>Flight<sp/>Center<sp/>pursuant<sp/>to<sp/>government<sp/>contracts.</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>NASA<sp/>Open<sp/>Source<sp/>Agreement<sp/>and<sp/>may<sp/>be<sp/>used,</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/>distributed<sp/>and<sp/>modified<sp/>only<sp/>pursuant<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>that<sp/>agreement.</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/>Purpose:</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/>Set<sp/>of<sp/>services<sp/>for<sp/>management<sp/>of<sp/>discrete<sp/>sized<sp/>memory<sp/>pools.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/><sp/>References:</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>Flight<sp/>Software<sp/>Branch<sp/>C<sp/>Coding<sp/>Standard<sp/>Version<sp/>1.0a</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>cFE<sp/>Flight<sp/>Software<sp/>Application<sp/>Developers<sp/>Guide</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/><sp/>$Log:<sp/>cfe_esmempool.c<sp/><sp/>$</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.12<sp/>2014/07/07<sp/>10:57:32GMT-05:00<sp/>acudmore<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="comment">**<sp/><sp/>Modified<sp/>CFE_ES_ValidateHandle<sp/>to<sp/>conditionally<sp/>compile<sp/>alignment<sp/>check.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.11<sp/>2012/01/13<sp/>11:50:17GMT-05:00<sp/>acudmore<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/><sp/>Changed<sp/>license<sp/>text<sp/>to<sp/>reflect<sp/>open<sp/>source</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.10<sp/>2011/03/18<sp/>11:41:54EDT<sp/>lwalling<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/><sp/>Add<sp/>memory<sp/>range<sp/>test<sp/>to<sp/>pool<sp/>handle<sp/>verification<sp/>function</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.9<sp/>2010/11/23<sp/>13:22:43EST<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/><sp/>Corrected<sp/>getPoolBuf<sp/>and<sp/>putPoolBuf<sp/>error<sp/>messages.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.8<sp/>2010/11/04<sp/>14:17:32EDT<sp/>acudmore<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/><sp/>Added<sp/>option<sp/>to<sp/>disable<sp/>memory<sp/>pool<sp/>alignment<sp/>check.</highlight></codeline>
<codeline lineno="33"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.7<sp/>2010/10/25<sp/>15:02:12EDT<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="comment">**<sp/><sp/>Corrected<sp/>bad<sp/>apostrophe<sp/>in<sp/>prologue.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.6<sp/>2010/10/20<sp/>12:34:54EDT<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment">**<sp/><sp/>Major<sp/>revision<sp/>to<sp/>make<sp/>semaphore<sp/>use<sp/>for<sp/>memory<sp/>pool<sp/>creation<sp/>optional.<sp/><sp/>Also<sp/>added<sp/>NULL<sp/>pointer<sp/>tests.</highlight></codeline>
<codeline lineno="37"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.5<sp/>2010/10/04<sp/>15:37:57EDT<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment">**<sp/><sp/>Cleaned<sp/>up<sp/>copyright<sp/>symbol.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.4<sp/>2010/09/21<sp/>16:26:21EDT<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="comment">**<sp/><sp/>Moved<sp/>calls<sp/>to<sp/>CFE_ES_GetAppID()<sp/>to<sp/>inside<sp/>error<sp/>condition<sp/>blocks.</highlight></codeline>
<codeline lineno="41"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.3<sp/>2010/09/21<sp/>16:09:20EDT<sp/>jmdagost<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment">**<sp/><sp/>Added<sp/>cfe_es_task.h.</highlight></codeline>
<codeline lineno="43"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.2<sp/>2009/07/29<sp/>15:55:42EDT<sp/>aschoeni<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="comment">**<sp/><sp/>Added<sp/>GetPoolBufInfo<sp/>function<sp/>to<sp/>return<sp/>size<sp/>or<sp/>invalidity<sp/>of<sp/>a<sp/>buffer<sp/>in<sp/>a<sp/>pool</highlight></codeline>
<codeline lineno="45"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.1<sp/>2008/04/17<sp/>08:05:11EDT<sp/>ruperera<sp/></highlight></codeline>
<codeline lineno="46"><highlight class="comment">**<sp/><sp/>Initial<sp/>revision</highlight></codeline>
<codeline lineno="47"><highlight class="comment">**<sp/><sp/>Member<sp/>added<sp/>to<sp/>project<sp/>c:/MKSDATA/MKS-REPOSITORY/MKS-CFE-PROJECT/fsw/cfe-core/src/es/project.pj</highlight></codeline>
<codeline lineno="48"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.30<sp/>2007/08/07<sp/>12:52:44EDT<sp/>David<sp/>Kobe<sp/>(dlkobe)<sp/></highlight></codeline>
<codeline lineno="49"><highlight class="comment">**<sp/><sp/>Modified<sp/>CFE_ES_GetPoolBuf<sp/>API&apos;s<sp/>first<sp/>parameter<sp/>to<sp/>be<sp/>of<sp/>type<sp/>uint32**</highlight></codeline>
<codeline lineno="50"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.29<sp/>2007/05/04<sp/>20:07:53EDT<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment">**<sp/><sp/>Added<sp/>command<sp/>to<sp/>telemeter<sp/>memory<sp/>pool<sp/>statistics</highlight></codeline>
<codeline lineno="52"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.28<sp/>2007/04/04<sp/>16:27:58EDT<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment">**<sp/><sp/>Syntax<sp/>errors</highlight></codeline>
<codeline lineno="54"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.26<sp/>2007/04/04<sp/>16:06:37EDT<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="comment">**<sp/><sp/>Made<sp/>numerous<sp/>changes<sp/>to<sp/>correct<sp/>issues<sp/>identified<sp/>during<sp/>ES<sp/>code<sp/>walkthrough</highlight></codeline>
<codeline lineno="56"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.25<sp/>2006/11/13<sp/>10:55:33GMT-05:00<sp/>njyanchik<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment">**<sp/><sp/>This<sp/>CP<sp/>fixes<sp/>the<sp/>errors<sp/>that<sp/>were<sp/>found<sp/>in<sp/>the<sp/>LDRA<sp/>testing.<sp/>The<sp/>list<sp/>of<sp/>specific<sp/>errors<sp/>fixed<sp/>is</highlight></codeline>
<codeline lineno="58"><highlight class="comment">**<sp/><sp/>in<sp/>the<sp/>solution<sp/>to<sp/>this<sp/>DCR</highlight></codeline>
<codeline lineno="59"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.24<sp/>2006/11/07<sp/>11:29:00GMT-05:00<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="comment">**<sp/><sp/>Changed<sp/>CFE_ES_MIN_BLOCK_SIZE<sp/>to<sp/>CFE_ES_MEM_BLOCK_SIZE_01</highlight></codeline>
<codeline lineno="61"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.21<sp/>2006/10/31<sp/>13:44:10GMT-05:00<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment">**<sp/><sp/>Replaced<sp/>memory<sp/>pool<sp/>block<sp/>sizes<sp/>with<sp/>symbols<sp/>that<sp/>are<sp/>defined<sp/>in<sp/>the<sp/>cfe_platform_cfg.h<sp/>file</highlight></codeline>
<codeline lineno="63"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.20<sp/>2006/10/31<sp/>10:35:31GMT-05:00<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="comment">**<sp/><sp/>Modified<sp/>parameters<sp/>to<sp/>CFE_ES_GetBlockSize<sp/>to<sp/>be<sp/>of<sp/>correct<sp/>uint32<sp/>type</highlight></codeline>
<codeline lineno="65"><highlight class="comment">**<sp/><sp/>Revision<sp/>1.19<sp/>2006/10/31<sp/>10:28:54GMT-05:00<sp/>dlkobe<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="comment">**<sp/><sp/>Added<sp/>&quot;Allocated&quot;<sp/>flag<sp/>to<sp/>memory<sp/>block<sp/>descriptor<sp/>to<sp/>prevent<sp/>multiple<sp/>deallocations</highlight></codeline>
<codeline lineno="67"><highlight class="comment">**</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="71"><highlight class="comment">**<sp/>Includes</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfe__private_8h" kindref="compound">private/cfe_private.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfe__esmempool_8h" kindref="compound">cfe_esmempool.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfe__es_8h" kindref="compound">cfe_es.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfe__es__task_8h" kindref="compound">cfe_es_task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="81"><highlight class="comment">**<sp/>Local<sp/>Macro<sp/>Definitions</highlight></codeline>
<codeline lineno="82"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_ES_CHECK_PATTERN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x5a5a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_ES_MEMORY_ALLOCATED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xaaaa</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="cfe__esmempool_8c_1a4ea9fc431cc29215a08677d3bb660722" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CFE_ES_MEMORY_DEALLOCATED<sp/><sp/><sp/><sp/><sp/><sp/>0xdddd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment">**<sp/>Type<sp/>Definitions</highlight></codeline>
<codeline lineno="89"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" kindref="member">CFE_ES_MemPoolDefSize</ref>[<ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>]<sp/>=</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MAX_BLOCK_SIZE,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_16,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_15,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_14,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_13,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_12,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_11,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_10,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_09,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_08,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_07,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_06,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_05,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_04,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_03,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_02,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>CFE_ES_MEM_BLOCK_SIZE_01</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="115"><highlight class="comment">**<sp/>Local<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" kindref="member">CFE_ES_GetBlockSize</ref>(Pool_t<sp/><sp/>*PoolPtr,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>Size);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="121"><highlight class="comment">**<sp/>Functions</highlight></codeline>
<codeline lineno="122"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment">**<sp/>CFE_ES_PoolCreateNoSem<sp/>will<sp/>initialize<sp/>a<sp/>pre-allocated<sp/>memory<sp/>pool<sp/>without<sp/>using<sp/>a<sp/>mutex.</highlight></codeline>
<codeline lineno="126"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="cfe__esmempool_8c_1adb1afd1d7fe494cf0e0a214c6da3a4a8" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1adb1afd1d7fe494cf0e0a214c6da3a4a8" kindref="member">CFE_ES_PoolCreateNoSem</ref>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/>*HandlePtr,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*MemPtr,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>(HandlePtr,<sp/>MemPtr,<sp/>Size,<sp/><ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>,<sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" kindref="member">CFE_ES_MemPoolDefSize</ref>[0],<ref refid="cfe__es_8h_1a46c1b23ca468cf628194c0a564e1a416" kindref="member">CFE_ES_NO_MUTEX</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="136"><highlight class="comment">**<sp/>CFE_ES_PoolCreate<sp/>will<sp/>initialize<sp/>a<sp/>pre-allocated<sp/>memory<sp/>pool<sp/>while<sp/>using<sp/>a<sp/>mutex.</highlight></codeline>
<codeline lineno="137"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="cfe__esmempool_8c_1af0248c9918a7c6907d8d1f4fa3b99160" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1af0248c9918a7c6907d8d1f4fa3b99160" kindref="member">CFE_ES_PoolCreate</ref>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/>*HandlePtr,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*MemPtr,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>(HandlePtr,<sp/>MemPtr,<sp/>Size,<sp/><ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>,<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" kindref="member">CFE_ES_MemPoolDefSize</ref>[0],<ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1ae096a654808a468170036a1207f813f3" kindref="member">CFE_ES_PoolCreateEx</ref>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/>*HandlePtr,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*MemPtr,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NumBlockSizes,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*BlockSizes,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member">uint16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UseMutex<sp/>)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>MutexName[<ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref><sp/><sp/>MemAddr;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/>j;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/>k;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/>*BlockSizeArrayPtr;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/>BlockSizeArraySize;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/>MinBlockSize;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/>**<sp/>Local<sp/>Variables</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>Pool_t<sp/>*PoolPtr<sp/>=<sp/>(Pool_t<sp/>*)MemPtr;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>MemAddr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref>)MemPtr;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>*HandlePtr<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>MemAddr;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Force<sp/>the<sp/>size<sp/>given<sp/>to<sp/>be<sp/>32<sp/>bit<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>Size<sp/>&amp;=<sp/>0xFFFFFFFC;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CFE_ES_MEMPOOL_ALIGNED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>if<sp/>the<sp/>memory<sp/>pool<sp/>address<sp/>is<sp/>32-bit<sp/>aligned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((MemAddr<sp/>&amp;<sp/>0x00000003)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:poolCreate<sp/>Pool<sp/>Address(0x%08lX)<sp/>is<sp/>not<sp/>32-bit<sp/>aligned.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)MemAddr);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>too<sp/>many<sp/>sizes<sp/>are<sp/>specified,<sp/>return<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NumBlockSizes<sp/>&gt;<sp/><ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:poolCreate<sp/>Num<sp/>Block<sp/>Sizes<sp/>(%d)<sp/>greater<sp/>than<sp/>max<sp/>(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)NumBlockSizes,<sp/><ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((UseMutex<sp/>!=<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)<sp/>&amp;&amp;<sp/>(UseMutex<sp/>!=<sp/><ref refid="cfe__es_8h_1a46c1b23ca468cf628194c0a564e1a416" kindref="member">CFE_ES_NO_MUTEX</ref>))</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:poolCreate<sp/>Invalid<sp/>Mutex<sp/>Usage<sp/>Option<sp/>(%d),<sp/>must<sp/>be<sp/>%d<sp/>or<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UseMutex,<sp/><ref refid="cfe__es_8h_1a46c1b23ca468cf628194c0a564e1a416" kindref="member">CFE_ES_NO_MUTEX</ref>,<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Construct<sp/>a<sp/>name<sp/>for<sp/>the<sp/>Mutex<sp/>from<sp/>the<sp/>address</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>This<sp/>is<sp/>needed<sp/>only<sp/>because<sp/>OS_MutSemCreate<sp/>requires</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>a<sp/>unique<sp/>name<sp/>for<sp/>each<sp/>semaphore<sp/>created.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(MutexName,<sp/><ref refid="stubs_8c_1a8419474683cbd73c491a3688a0b661c1" kindref="member">OS_MAX_API_NAME</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%08lX&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)MemPtr);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>a<sp/>semphore<sp/>to<sp/>protect<sp/>this<sp/>memory<sp/>pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a1cec40bf769e2db8614c1ef6d9906a8d" kindref="member">OS_MutSemCreate</ref>(&amp;(PoolPtr-&gt;MutexId),<sp/>MutexName,<sp/>0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>the<sp/>semaphore<sp/>to<sp/>ensure<sp/>the<sp/>mem<sp/>pool<sp/>is<sp/>not<sp/>being<sp/>used<sp/>during<sp/>its<sp/>creation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" kindref="member">OS_MutSemTake</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;Start<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref><sp/>*)*HandlePtr;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;End<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>MemAddr<sp/>+<sp/>Size;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;Size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Size;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;Current<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*)(MemAddr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Pool_t));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;SizeDescPtr<sp/><sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;CheckErrCntr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;RequestCntr<sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>PoolPtr-&gt;UseMutex<sp/><sp/><sp/><sp/><sp/>=<sp/>UseMutex;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDesc[i].NumCreated<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDesc[i].NumFree<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDesc[i].MaxSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDesc[i].Top<sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>default<sp/>block<sp/>sizes<sp/>if<sp/>none<sp/>or<sp/>too<sp/>many<sp/>sizes<sp/>are<sp/>specified<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((NumBlockSizes<sp/>==<sp/>0)<sp/>||<sp/>(BlockSizes<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockSizeArrayPtr<sp/>=<sp/>&amp;<ref refid="cfe__esmempool_8c_1aa00f9a0c127aa1534cb67f06baec2a81" kindref="member">CFE_ES_MemPoolDefSize</ref>[0];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockSizeArraySize<sp/>=<sp/><ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockSizeArrayPtr<sp/>=<sp/>BlockSizes;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BlockSizeArraySize<sp/>=<sp/>NumBlockSizes;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>specified<sp/>block<sp/>sizes<sp/>but<sp/>make<sp/>sure<sp/>they<sp/>are<sp/>ordered<sp/>largest<sp/>to<sp/>smallest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>MinBlockSize<sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;BlockSizeArraySize;<sp/>i++)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((BlockSizeArrayPtr[i]<sp/>&lt;<sp/>MinBlockSize)<sp/>&amp;&amp;<sp/>(BlockSizeArrayPtr[i]<sp/>!=<sp/>0))</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MinBlockSize<sp/>=<sp/>BlockSizeArrayPtr[i];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j&lt;CFE_ES_MAX_MEMPOOL_BLOCK_SIZES)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BlockSizeArrayPtr[i]<sp/>&gt;<sp/>PoolPtr-&gt;SizeDesc[j].MaxSize)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Make<sp/>space<sp/>for<sp/>new<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k=i;<sp/>k&gt;j;<sp/>k--)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDesc[k].MaxSize<sp/>=<sp/>PoolPtr-&gt;SizeDesc[k-1].MaxSize;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Insert<sp/>the<sp/>size<sp/>in<sp/>the<sp/>correct<sp/>location<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDesc[j].MaxSize<sp/>=<sp/>BlockSizeArrayPtr[i];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/><ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Size<sp/>&lt;=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Pool_t)<sp/>+<sp/>MinBlockSize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>must<sp/>be<sp/>able<sp/>make<sp/>Pool<sp/>management<sp/>structure<sp/>and<sp/>at<sp/>least<sp/>one<sp/>of<sp/>the<sp/>smallest<sp/>blocks<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:poolCreate<sp/>Pool<sp/>size(%d)<sp/>too<sp/>small<sp/>for<sp/>management<sp/>structure,<sp/>need<sp/>&gt;=(%d)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Size,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Pool_t)<sp/>+<sp/>MinBlockSize<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t))<sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Mutex<sp/>is<sp/>no<sp/>longer<sp/>needed<sp/>with<sp/>error<sp/>in<sp/>initialization.<sp/><sp/>Give<sp/>it<sp/>and<sp/>delete<sp/>it<sp/>*/</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a4be56a807779019aad0c84e439906d11" kindref="member">OS_MutSemDelete</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1a1ffe30dedc953afd73e74b5231db8877" kindref="member">CFE_ES_BAD_ARGUMENT</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="299"><highlight class="comment">**<sp/>Function:</highlight></codeline>
<codeline lineno="300"><highlight class="comment">**<sp/><sp/><sp/>CFE_ES_GetPoolBuf</highlight></codeline>
<codeline lineno="301"><highlight class="comment">**</highlight></codeline>
<codeline lineno="302"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="303"><highlight class="comment">**<sp/><sp/><sp/>CFE_ES_GetPoolBuf<sp/>allocates<sp/>a<sp/>block<sp/>from<sp/>the<sp/>memory<sp/>pool.</highlight></codeline>
<codeline lineno="304"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1ad6c6982e9aff882aea477114894a4094" kindref="member">CFE_ES_GetPoolBuf</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**BufPtr,</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/><sp/>Handle,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>Pool_t<sp/><sp/>*<sp/>PoolPtr<sp/>=<sp/>(Pool_t<sp/>*)Handle;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>Block;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>BD_t<sp/><sp/><sp/><sp/>*<sp/>BdPtr;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>AppId=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr<sp/>!=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Handle<sp/>!=<sp/>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref>)PoolPtr-&gt;Start)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a76ee880d8ee4f632420507997779c1aa" kindref="member">CFE_ES_GetAppID</ref>(&amp;AppId);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:getPoolBuf<sp/>err:Bad<sp/>handle(0x%08lX)<sp/>AppId=%d\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)Handle,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)AppId);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a76ee880d8ee4f632420507997779c1aa" kindref="member">CFE_ES_GetAppID</ref>(&amp;AppId);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:getPoolBuf<sp/>err:Bad<sp/>handle(0x%08lX)<sp/>AppId=%d\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)Handle,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)AppId);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" kindref="member">OS_MutSemTake</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/>*BufPtr<sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>Block<sp/>=<sp/><ref refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" kindref="member">CFE_ES_GetBlockSize</ref>(PoolPtr,<sp/>Size);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Block<sp/>==<sp/>0xFFFFFFFF)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:getPoolBuf<sp/>err:size(%d)<sp/>&gt;<sp/>max(%d).\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)Size,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)PoolPtr-&gt;SizeDesc[0].MaxSize);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1abff64d238de12f227aed77814fd26aef" kindref="member">CFE_ES_ERR_MEM_BLOCK_SIZE</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/>**<sp/>Check<sp/>if<sp/>any<sp/>of<sp/>the<sp/>requested<sp/>size<sp/>are<sp/>available</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;SizeDescPtr-&gt;Top<sp/>!=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>by<sp/>GetBlockSize<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Get<sp/>it<sp/>off<sp/>the<sp/>top<sp/>on<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr<sp/>=<sp/>PoolPtr-&gt;SizeDescPtr-&gt;Top;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;CheckBits<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" kindref="member">CFE_ES_CHECK_PATTERN</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;Allocated<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" kindref="member">CFE_ES_MEMORY_ALLOCATED</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>memory<sp/>block<sp/>as<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;Size<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Block;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDescPtr-&gt;Top<sp/>=<sp/>(BD_t<sp/>*)BdPtr-&gt;Next;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDescPtr-&gt;NumFree--;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;Next<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*BufPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*)(BdPtr<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>go<sp/>make<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr<sp/>=<sp/>(BD_t<sp/>*)PoolPtr-&gt;Current;<sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>new<sp/>memory<sp/>block<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>((<ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref>)BdPtr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t)<sp/>+<sp/>Block<sp/>)<sp/>&gt;=<sp/>PoolPtr-&gt;End<sp/>){<sp/></highlight><highlight class="comment">/*<sp/>can&apos;t<sp/>fit<sp/>in<sp/>remaing<sp/>mem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:getPoolBuf<sp/>err:Request<sp/>won&apos;t<sp/>fit<sp/>in<sp/>remaining<sp/>memory\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1abff64d238de12f227aed77814fd26aef" kindref="member">CFE_ES_ERR_MEM_BLOCK_SIZE</ref>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;SizeDescPtr-&gt;NumCreated++;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;RequestCntr++;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>create<sp/>the<sp/>buffer<sp/>descriptor<sp/>at<sp/>the<sp/>front<sp/>of<sp/>it</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;CheckBits<sp/>=<sp/><ref refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" kindref="member">CFE_ES_CHECK_PATTERN</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;Allocated<sp/>=<sp/><ref refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" kindref="member">CFE_ES_MEMORY_ALLOCATED</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Flag<sp/>memory<sp/>block<sp/>as<sp/>allocated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;Size<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>Block;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BdPtr-&gt;Next<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*BufPtr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*)(BdPtr<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>adjust<sp/>pool<sp/>current<sp/>pointer</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;Current<sp/>=<sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*)(<sp/>(<ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>*)PoolPtr-&gt;Current</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Block</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t)<sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref>)Block;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="407"><highlight class="comment">**<sp/>CFE_ES_GetPoolBufInfo<sp/>gets<sp/>the<sp/>size<sp/>of<sp/>the<sp/>specified<sp/>block<sp/>(if<sp/>it<sp/>exists).</highlight></codeline>
<codeline lineno="408"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1abf12f915e70e912b1875be2448e57081" kindref="member">CFE_ES_GetPoolBufInfo</ref>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/><sp/>Handle,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>BufPtr)</highlight></codeline>
<codeline lineno="411"><highlight class="normal">{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/>Pool_t<sp/><sp/><sp/>*PoolPtr<sp/>=<sp/><sp/>(Pool_t<sp/>*)Handle;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/>BD_t<sp/><sp/><sp/><sp/><sp/>*BdPtr<sp/><sp/><sp/><sp/>=<sp/>(BD_t<sp/>*)<sp/>((<ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>*)BufPtr<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr<sp/>!=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>((<ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref>)BdPtr<sp/>&lt;<sp/>Handle)<sp/>||<sp/>((cpuaddr)BdPtr<sp/>&gt;=<sp/>(PoolPtr-&gt;End<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t)))<sp/>)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1ab336b3622b10319efd13b78ec455ce8c" kindref="member">CFE_ES_BUFFER_NOT_IN_POOL</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bad<sp/>handle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" kindref="member">OS_MutSemTake</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/>**<sp/>Simple<sp/>sanity<sp/>checks<sp/>for<sp/>descriptor</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>a<sp/>block<sp/>is<sp/>no<sp/>longer<sp/>allocated,<sp/>report<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BdPtr-&gt;Allocated<sp/>!=<sp/><ref refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" kindref="member">CFE_ES_MEMORY_ALLOCATED</ref>)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BdPtr-&gt;CheckBits<sp/>!=<sp/><ref refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" kindref="member">CFE_ES_CHECK_PATTERN</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref>)<sp/>(BdPtr-&gt;Size));</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="466"><highlight class="comment">**<sp/>CFE_ES_putPoolBuf<sp/>returns<sp/>a<sp/>block<sp/>back<sp/>to<sp/>the<sp/>memory<sp/>pool.</highlight></codeline>
<codeline lineno="467"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1ac078549803a17cab3a2acc4c3d1bc139" kindref="member">CFE_ES_PutPoolBuf</ref>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/><sp/>Handle,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>BufPtr)</highlight></codeline>
<codeline lineno="470"><highlight class="normal">{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>Pool_t<sp/><sp/><sp/>*PoolPtr<sp/>=<sp/><sp/>(Pool_t<sp/>*)Handle;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>BD_t<sp/><sp/><sp/><sp/><sp/>*BdPtr<sp/><sp/><sp/><sp/>=<sp/>(BD_t<sp/>*)<sp/>((<ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member">uint8</ref><sp/>*)BufPtr<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>Block;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref><sp/><sp/><sp/>BdAddr;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>BdAddr<sp/>=<sp/>(<ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref>)BdPtr;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr<sp/>!=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(BdAddr<sp/>&lt;<sp/>Handle)<sp/>||<sp/>(BdAddr<sp/>&gt;=<sp/>(PoolPtr-&gt;End<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(BD_t)))<sp/>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:putPoolBuf<sp/>err:Invalid<sp/>Memory<sp/>Handle<sp/>(0x%08lX)<sp/>or<sp/>memory<sp/>block<sp/>(0x%08lX).\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>Handle,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)BdAddr);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:putPoolBuf<sp/>err:Invalid<sp/>Memory<sp/>Handle<sp/>(0x%08lX).\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>Handle);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f" kindref="member">OS_MutSemTake</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/><sp/>**<sp/>Simple<sp/>sanity<sp/>checks<sp/>for<sp/>descriptor</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Don&apos;t<sp/>allow<sp/>a<sp/>block<sp/>that<sp/>has<sp/>already<sp/>been<sp/>deallocated<sp/>to<sp/>be<sp/>deallocated<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BdPtr-&gt;Allocated<sp/>!=<sp/><ref refid="cfe__esmempool_8c_1acc68d107080e6b4de302a822acf949d7" kindref="member">CFE_ES_MEMORY_ALLOCATED</ref>)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;CheckErrCntr++;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:putPoolBuf<sp/>err:Deallocating<sp/>unallocated<sp/>memory<sp/>block<sp/>@<sp/>0x%08lX\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)BdAddr);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(BdPtr-&gt;CheckBits<sp/>!=<sp/><ref refid="cfe__esmempool_8c_1a6c3a545e656d634ba65f7c4ae0aa2116" kindref="member">CFE_ES_CHECK_PATTERN</ref>)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;CheckErrCntr++;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:putPoolBuf<sp/>err:Invalid/Corrupted<sp/>Memory<sp/>descriptor<sp/>@<sp/>0x%08lX\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)BdAddr);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>Block<sp/>=<sp/><ref refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" kindref="member">CFE_ES_GetBlockSize</ref>(PoolPtr,<sp/>BdPtr-&gt;Size);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Block<sp/>==<sp/>0xFFFFFFFF)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PoolPtr-&gt;CheckErrCntr++;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:putPoolBuf<sp/>err:size(%d)<sp/>&gt;<sp/>max(%d).\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)BdPtr-&gt;Size,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)PoolPtr-&gt;SizeDesc[0].MaxSize);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>BdPtr-&gt;Allocated<sp/>=<sp/><ref refid="cfe__esmempool_8c_1a4ea9fc431cc29215a08677d3bb660722" kindref="member">CFE_ES_MEMORY_DEALLOCATED</ref>;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>BdPtr-&gt;Next<sp/>=<sp/>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>*)PoolPtr-&gt;SizeDescPtr-&gt;Top;<sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>by<sp/>GetBlockSize<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>PoolPtr-&gt;SizeDescPtr-&gt;Top<sp/>=<sp/>BdPtr;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>PoolPtr-&gt;SizeDescPtr-&gt;NumFree++;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>if<sp/>(PoolPtr-&gt;UseMutex<sp/>==<sp/><ref refid="cfe__es_8h_1a23a0cadc15f5eb756bc564452a50206a" kindref="member">CFE_ES_USE_MUTEX</ref>)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5" kindref="member">OS_MutSemGive</ref>(PoolPtr-&gt;MutexId);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref>)Block;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="554"><highlight class="comment">**<sp/>Function:</highlight></codeline>
<codeline lineno="555"><highlight class="comment">**<sp/><sp/><sp/>ES_GetBlockSize</highlight></codeline>
<codeline lineno="556"><highlight class="comment">**</highlight></codeline>
<codeline lineno="557"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="558"><highlight class="comment">**</highlight></codeline>
<codeline lineno="559"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><ref refid="cfe__esmempool_8c_1a20f9cbdcfdefd7a0db402c304fe4ddc7" kindref="member">CFE_ES_GetBlockSize</ref>(Pool_t<sp/><sp/>*PoolPtr,<sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>Size)</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/>i=0;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>PoolPtr-&gt;SizeDescPtr<sp/>=<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>caller<sp/>is<sp/>requesting<sp/>a<sp/>size<sp/>larger<sp/>than<sp/>the<sp/>largest<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>then<sp/>return<sp/>an<sp/>error<sp/>code<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Size<sp/>&gt;<sp/>PoolPtr-&gt;SizeDesc[0].MaxSize)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0xFFFFFFFF);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Locate<sp/>the<sp/>smallest<sp/>size<sp/>that<sp/>holds<sp/>the<sp/>desired<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>&lt;<sp/>(<ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>-1))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(Size<sp/>&lt;=<sp/>PoolPtr-&gt;SizeDesc[i+1].MaxSize))</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/>PoolPtr-&gt;SizeDescPtr<sp/>=<sp/>&amp;PoolPtr-&gt;SizeDesc[i];</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(PoolPtr-&gt;SizeDesc[i].MaxSize);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="586"><highlight class="comment">**<sp/>Function:</highlight></codeline>
<codeline lineno="587"><highlight class="comment">**<sp/><sp/><sp/>CFE_ES_GetMemPoolStats</highlight></codeline>
<codeline lineno="588"><highlight class="comment">**</highlight></codeline>
<codeline lineno="589"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="590"><highlight class="comment">**</highlight></codeline>
<codeline lineno="591"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="cfe__esmempool_8c_1a7df8809f546ab01315423672c43a5e22" refkind="member"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member">int32</ref><sp/><ref refid="cfe__esmempool_8c_1a7df8809f546ab01315423672c43a5e22" kindref="member">CFE_ES_GetMemPoolStats</ref>(<ref refid="struct_c_f_e___e_s___mem_pool_stats__t" kindref="compound">CFE_ES_MemPoolStats_t</ref><sp/>*BufPtr,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/>Handle)</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>AppId<sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/>Pool_t<sp/><sp/><sp/>*PoolPtr;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member">uint32</ref><sp/><sp/><sp/><sp/>i;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>PoolPtr<sp/>=<sp/>(Pool_t<sp/>*)Handle;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Handle<sp/>!=<sp/>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref>)PoolPtr-&gt;Start)</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a76ee880d8ee4f632420507997779c1aa" kindref="member">CFE_ES_GetAppID</ref>(&amp;AppId);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cfe__es_8h_1a51146afa3e65ab120411c9264b45fa1d" kindref="member">CFE_ES_WriteToSysLog</ref>(</highlight><highlight class="stringliteral">&quot;CFE_ES:getMemPoolStats<sp/>err:Bad<sp/>handle(0x%08lX)<sp/>AppId=%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)Handle,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)AppId);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1af72f005867628683e00148141bb9cacf" kindref="member">CFE_ES_ERR_MEM_HANDLE</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1a91bdbd454ce42e14a3fb7094155e6fdc" kindref="member">PoolSize</ref><sp/>=<sp/>PoolPtr-&gt;Size;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1a02f9bbbaef9cb8a459251c5ddf414e07" kindref="member">NumBlocksRequested</ref><sp/>=<sp/>PoolPtr-&gt;RequestCntr;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1a450087787a798b79cd1fdaa01b23e5f4" kindref="member">CheckErrCtr</ref><sp/>=<sp/>PoolPtr-&gt;CheckErrCntr;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1a2dcd04ad145677a80c7d81ac2f89781a" kindref="member">NumFreeBytes</ref><sp/>=<sp/>PoolPtr-&gt;End<sp/>-<sp/>((<ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member">cpuaddr</ref>)PoolPtr-&gt;Current);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;<ref refid="cfe__es_8h_1aa97d866642d474c34790e4d46717ac6b" kindref="member">CFE_ES_MAX_MEMPOOL_BLOCK_SIZES</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1aced690686603d6887e4ae8d465176f58" kindref="member">BlockStats</ref>[i].<ref refid="struct_c_f_e___e_s___block_stats__t_1ac6120381e4351f06de4694bd7d99db8c" kindref="member">BlockSize</ref><sp/>=<sp/>PoolPtr-&gt;SizeDesc[i].MaxSize;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1aced690686603d6887e4ae8d465176f58" kindref="member">BlockStats</ref>[i].<ref refid="struct_c_f_e___e_s___block_stats__t_1ad1b17b82835c78886f2bac8616acc3ab" kindref="member">NumCreated</ref><sp/>=<sp/>PoolPtr-&gt;SizeDesc[i].NumCreated;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BufPtr-&gt;<ref refid="struct_c_f_e___e_s___mem_pool_stats__t_1aced690686603d6887e4ae8d465176f58" kindref="member">BlockStats</ref>[i].<ref refid="struct_c_f_e___e_s___block_stats__t_1a09e33cdc585722cbf785cf81734d646a" kindref="member">NumFree</ref><sp/>=<sp/>PoolPtr-&gt;SizeDesc[i].NumFree;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member">CFE_SUCCESS</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="625"><highlight class="comment">**<sp/>Function:</highlight></codeline>
<codeline lineno="626"><highlight class="comment">**<sp/><sp/><sp/>CFE_ES_ValidateHandle</highlight></codeline>
<codeline lineno="627"><highlight class="comment">**</highlight></codeline>
<codeline lineno="628"><highlight class="comment">**<sp/>Purpose:</highlight></codeline>
<codeline lineno="629"><highlight class="comment">**<sp/><sp/><sp/>Insures<sp/>that<sp/>the<sp/>handle<sp/>passed<sp/>in<sp/>meets<sp/>all<sp/>of<sp/>the<sp/>requirements<sp/>of<sp/>a<sp/>valid<sp/>handle.</highlight></codeline>
<codeline lineno="630"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="cfe__esmempool_8c_1ae886a73a4ca49883a0e26b1386c1dd5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="cfe__esmempool_8c_1ae886a73a4ca49883a0e26b1386c1dd5a" kindref="member">CFE_ES_ValidateHandle</ref>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref><sp/><sp/>Handle)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>Pool_t<sp/><sp/><sp/>*PoolPtr;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>PoolPtr<sp/>=<sp/>(Pool_t<sp/>*)Handle;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>There<sp/>are<sp/>several<sp/>tests<sp/>to<sp/>make<sp/>sure<sp/>the<sp/>memory<sp/>pool<sp/>handle<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>PoolPtr<sp/>==<sp/><ref refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>#1)<sp/>Handle<sp/>must<sp/>not<sp/>be<sp/>a<sp/>NULL<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CFE_ES_MEMPOOL_ALIGNED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>#2)<sp/>Handle<sp/>must<sp/>be<sp/>an<sp/>address<sp/>on<sp/>a<sp/>32-bit<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Handle<sp/>&amp;<sp/>0x03)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>#3)<sp/>Handle<sp/>must<sp/>be<sp/>a<sp/>valid<sp/>memory<sp/>address<sp/>(allows<sp/>both<sp/>RAM<sp/>and<sp/>EEPROM)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CFE_PSP_MemValidateRange(Handle,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Pool_t),<sp/>CFE_PSP_MEM_ANY)<sp/>!=<sp/>CFE_PSP_SUCCESS)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>#4)<sp/>First<sp/>field<sp/>of<sp/>pool<sp/>structure<sp/>must<sp/>be<sp/>start<sp/>address<sp/>of<sp/>Pool<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Handle<sp/>!=<sp/>(<ref refid="cfe__es_8h_1a3a4f2627e1ba40398def23ccbb6a049a" kindref="member">CFE_ES_MemHandle_t</ref>)PoolPtr-&gt;Start)</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>#5)<sp/>Size<sp/>of<sp/>memory<sp/>pool<sp/>must<sp/>be<sp/>a<sp/>multiple<sp/>of<sp/>4<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((PoolPtr-&gt;Size<sp/>&amp;<sp/>0x03)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>#6)<sp/>Pool<sp/>structure<sp/>must<sp/>have<sp/>End<sp/>ptr<sp/>equal<sp/>to<sp/>Start<sp/>plus<sp/>Size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*PoolPtr-&gt;Start<sp/>+<sp/>PoolPtr-&gt;Size)<sp/>!=<sp/>PoolPtr-&gt;End)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>The<sp/>test<sp/>above<sp/>deserves<sp/>some<sp/>explanation<sp/>(it<sp/>fooled<sp/>me<sp/>-<sp/>LSW)</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>The<sp/>first<sp/>field<sp/>in<sp/>a<sp/>Pool_t<sp/>structure<sp/>is<sp/>&quot;uint32<sp/>*Start;&quot;</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>The<sp/>Start<sp/>field<sp/>is<sp/>set<sp/>to<sp/>point<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>Pool<sp/>structure.</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Therefore,<sp/>the<sp/>Start<sp/>field<sp/>actually<sp/>points<sp/>to<sp/>itself.</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>So,<sp/>(PoolPtr-&gt;Start)<sp/>is<sp/>the<sp/>Start<sp/>address<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>uint32.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>And,<sp/>(*PoolPtr-&gt;Start)<sp/>is<sp/>the<sp/>Start<sp/>address<sp/>in<sp/>the<sp/>form<sp/>of<sp/>a<sp/>uint32.</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>**<sp/>Thus,<sp/>(*PoolPtr-&gt;Start)<sp/>has<sp/>same<sp/>result<sp/>as<sp/>((uint32)<sp/>PoolPtr-&gt;Start).</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandleValid<sp/>=<sp/><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(HandleValid);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="es/cfe_esmempool.c"/>
  </compounddef>
</doxygen>
