<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_v_m" kind="class" language="C++" prot="public">
    <compoundname>VM</compoundname>
    <basecompoundref prot="private" virt="non-virtual">ParamsConsumer</basecompoundref>
    <includes refid="vm__app_8h" local="no">vm_app.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_v_m_1a4dda712bacee61943d3dbee8d43f4615" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t VM::SchPipeId</definition>
        <argsstring></argsstring>
        <name>SchPipeId</name>
        <briefdescription>
<para>Scheduling Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="125" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a76b3179c5edb56bfeb1fb6c4ff55af64" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t VM::CmdPipeId</definition>
        <argsstring></argsstring>
        <name>CmdPipeId</name>
        <briefdescription>
<para>Command Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="128" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a399c96da46dac8677e59129b6230d9eb" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t VM::DataPipeId</definition>
        <argsstring></argsstring>
        <name>DataPipeId</name>
        <briefdescription>
<para>Data Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="131" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a96816f8e473702c9ea57a3d131a0efb6" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 VM::uiRunStatus</definition>
        <argsstring></argsstring>
        <name>uiRunStatus</name>
        <briefdescription>
<para>Task Run Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="135" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t VM::ConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>ConfigTblHdl</name>
        <briefdescription>
<para>Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="139" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a47072ffba454d9129036f780d4357bf3" prot="public" static="no" mutable="no">
        <type><ref refid="struct_v_m___config_tbl__t" kindref="compound">VM_ConfigTbl_t</ref> *</type>
        <definition>VM_ConfigTbl_t* VM::ConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>ConfigTblPtr</name>
        <briefdescription>
<para>Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="141" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ab095a387a372af757908d62ddf03e749" prot="public" static="no" mutable="no">
        <type>CautionWarningHelper</type>
        <definition>CautionWarningHelper VM::m_caws</definition>
        <argsstring></argsstring>
        <name>m_caws</name>
        <briefdescription>
<para>Caution and Warning helper class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="143" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ada27d75c7daa3fef2027f433f955471e" prot="public" static="no" mutable="no">
        <type>PX4_SensorMagMsg_t</type>
        <definition>PX4_SensorMagMsg_t VM::SensorMagMsg</definition>
        <argsstring></argsstring>
        <name>SensorMagMsg</name>
        <briefdescription>
<para>Input Data subscribed at the beginning of cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Magnetometer message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="147" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ad5719da53147146863d1e15f189118fc" prot="public" static="no" mutable="no">
        <type>PX4_SensorGyroMsg_t</type>
        <definition>PX4_SensorGyroMsg_t VM::SensorGyroMsg</definition>
        <argsstring></argsstring>
        <name>SensorGyroMsg</name>
        <briefdescription>
<para>Gyro message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="149" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aac3829d769b1c158ed93bc41c5f2e610" prot="public" static="no" mutable="no">
        <type>PX4_BatteryStatusMsg_t</type>
        <definition>PX4_BatteryStatusMsg_t VM::BatteryStatusMsg</definition>
        <argsstring></argsstring>
        <name>BatteryStatusMsg</name>
        <briefdescription>
<para>Battery status message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="151" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1af222349536e984bfc3ae835bbf1490c0" prot="public" static="no" mutable="no">
        <type>PX4_TelemetryStatusMsg_t</type>
        <definition>PX4_TelemetryStatusMsg_t VM::TelemetryStatusMsg</definition>
        <argsstring></argsstring>
        <name>TelemetryStatusMsg</name>
        <briefdescription>
<para>Telemetry status message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="153" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ad0d57a422189b4bec553b1dd9b5333cd" prot="public" static="no" mutable="no">
        <type>PX4_SubsystemInfoMsg_t</type>
        <definition>PX4_SubsystemInfoMsg_t VM::SubsystemInfoMsg</definition>
        <argsstring></argsstring>
        <name>SubsystemInfoMsg</name>
        <briefdescription>
<para>Subsystem information message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="155" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aa0727b35c392b4da880700f496c11b93" prot="public" static="no" mutable="no">
        <type>PX4_VehicleAttitudeMsg_t</type>
        <definition>PX4_VehicleAttitudeMsg_t VM::VehicleAttitudeMsg</definition>
        <argsstring></argsstring>
        <name>VehicleAttitudeMsg</name>
        <briefdescription>
<para>Vehicle attitude message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="157" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a59a819087efb4519dd772eebc96e81af" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLocalPositionMsg_t</type>
        <definition>PX4_VehicleLocalPositionMsg_t VM::VehicleLocalPositionMsg</definition>
        <argsstring></argsstring>
        <name>VehicleLocalPositionMsg</name>
        <briefdescription>
<para>Vehicle local position messsage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="159" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a95dde4ee20a78a080f15ca536b3b53b5" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLandDetectedMsg_t</type>
        <definition>PX4_VehicleLandDetectedMsg_t VM::VehicleLandDetectedMsg</definition>
        <argsstring></argsstring>
        <name>VehicleLandDetectedMsg</name>
        <briefdescription>
<para>Vehicle land detected message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="161" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a7e7b5fd02128f88d9e34f55cbc3d8cdb" prot="public" static="no" mutable="no">
        <type>PX4_MissionResultMsg_t</type>
        <definition>PX4_MissionResultMsg_t VM::MissionResultMsg</definition>
        <argsstring></argsstring>
        <name>MissionResultMsg</name>
        <briefdescription>
<para>Mission result message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="163" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" prot="public" static="no" mutable="no">
        <type>PX4_ManualControlSetpointMsg_t</type>
        <definition>PX4_ManualControlSetpointMsg_t VM::ManualControlSetpointMsg</definition>
        <argsstring></argsstring>
        <name>ManualControlSetpointMsg</name>
        <briefdescription>
<para>Manual control setpoint message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="165" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aa485c303dcc3d70ba0a52898b649ecfd" prot="public" static="no" mutable="no">
        <type>PX4_PositionSetpointTripletMsg_t</type>
        <definition>PX4_PositionSetpointTripletMsg_t VM::PositionSetpointTripletMsg</definition>
        <argsstring></argsstring>
        <name>PositionSetpointTripletMsg</name>
        <briefdescription>
<para>position setpoint triplet message </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="167" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a62f5965564d193031a73df3a63515767" prot="public" static="no" mutable="no">
        <type>PX4_SensorAccelMsg_t</type>
        <definition>PX4_SensorAccelMsg_t VM::SensorAccelMsg</definition>
        <argsstring></argsstring>
        <name>SensorAccelMsg</name>
        <briefdescription>
<para>Sensor accelerometer message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="169" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a046082c5e178827f43d592935619c681" prot="public" static="no" mutable="no">
        <type>PX4_SafetyMsg_t</type>
        <definition>PX4_SafetyMsg_t VM::SafetyMsg</definition>
        <argsstring></argsstring>
        <name>SafetyMsg</name>
        <briefdescription>
<para>Safety message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="171" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1afd67df4b4fe797695e48208d569125d9" prot="public" static="no" mutable="no">
        <type>PX4_SensorCorrectionMsg_t</type>
        <definition>PX4_SensorCorrectionMsg_t VM::SensorCorrectionMsg</definition>
        <argsstring></argsstring>
        <name>SensorCorrectionMsg</name>
        <briefdescription>
<para>Sensor correction message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="173" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ac1dbcc4bb47165cfa686860ebe464eff" prot="public" static="no" mutable="no">
        <type>PX4_SensorCombinedMsg_t</type>
        <definition>PX4_SensorCombinedMsg_t VM::SensorCombinedMsg</definition>
        <argsstring></argsstring>
        <name>SensorCombinedMsg</name>
        <briefdescription>
<para>Sensor combined message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="175" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1afcd15ef142b0a0ac7f6e800d2813eac4" prot="public" static="no" mutable="no">
        <type>PX4_VehicleCommandMsg_t</type>
        <definition>PX4_VehicleCommandMsg_t VM::VehicleCommandMsg</definition>
        <argsstring></argsstring>
        <name>VehicleCommandMsg</name>
        <briefdescription>
<para>Vehicle commanding message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="177" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a5062611ba3bc6f7ba3ca3f9fa5ab83ad" prot="public" static="no" mutable="no">
        <type>PX4_VehicleGlobalPositionMsg_t</type>
        <definition>PX4_VehicleGlobalPositionMsg_t VM::VehicleGlobalPositionMsg</definition>
        <argsstring></argsstring>
        <name>VehicleGlobalPositionMsg</name>
        <briefdescription>
<para>Vehicle global position message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="179" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a74414678084bd6a7a707f4a81bfe5a38" prot="public" static="no" mutable="no">
        <type>PX4_VehicleGpsPositionMsg_t</type>
        <definition>PX4_VehicleGpsPositionMsg_t VM::VehicleGpsPositionMsg</definition>
        <argsstring></argsstring>
        <name>VehicleGpsPositionMsg</name>
        <briefdescription>
<para>Vehicle gps position message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="181" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" prot="public" static="no" mutable="no">
        <type>PX4_ActuatorArmedMsg_t</type>
        <definition>PX4_ActuatorArmedMsg_t VM::ActuatorArmedMsg</definition>
        <argsstring></argsstring>
        <name>ActuatorArmedMsg</name>
        <briefdescription>
<para>Output Data published at the end of cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Actuator armed message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="185" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" prot="public" static="no" mutable="no">
        <type>PX4_HomePositionMsg_t</type>
        <definition>PX4_HomePositionMsg_t VM::HomePositionMsg</definition>
        <argsstring></argsstring>
        <name>HomePositionMsg</name>
        <briefdescription>
<para>Home position message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="187" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" prot="public" static="no" mutable="no">
        <type>PX4_CommanderStateMsg_t</type>
        <definition>PX4_CommanderStateMsg_t VM::VehicleManagerStateMsg</definition>
        <argsstring></argsstring>
        <name>VehicleManagerStateMsg</name>
        <briefdescription>
<para>Vehicle manager state message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="189" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" prot="public" static="no" mutable="no">
        <type>PX4_MissionMsg_t</type>
        <definition>PX4_MissionMsg_t VM::MissionMsg</definition>
        <argsstring></argsstring>
        <name>MissionMsg</name>
        <briefdescription>
<para>Mission message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="191" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a53f79370d94268734e2763b3a7502a71" prot="public" static="no" mutable="no">
        <type>PX4_LedControlMsg_t</type>
        <definition>PX4_LedControlMsg_t VM::LedControlMsg</definition>
        <argsstring></argsstring>
        <name>LedControlMsg</name>
        <briefdescription>
<para>Led control message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="193" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" prot="public" static="no" mutable="no">
        <type>PX4_VehicleStatusMsg_t</type>
        <definition>PX4_VehicleStatusMsg_t VM::VehicleStatusMsg</definition>
        <argsstring></argsstring>
        <name>VehicleStatusMsg</name>
        <briefdescription>
<para>Vehicle status message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="195" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" prot="public" static="no" mutable="no">
        <type>PX4_VehicleControlModeMsg_t</type>
        <definition>PX4_VehicleControlModeMsg_t VM::VehicleControlModeMsg</definition>
        <argsstring></argsstring>
        <name>VehicleControlModeMsg</name>
        <briefdescription>
<para>Vehicle control mode message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="197" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" prot="public" static="no" mutable="no">
        <type>VM_Arming</type>
        <definition>VM_Arming VM::ArmingSM</definition>
        <argsstring></argsstring>
        <name>ArmingSM</name>
        <briefdescription>
<para>Arming state machine handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="200" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" prot="public" static="no" mutable="no">
        <type>VM_Navigation</type>
        <definition>VM_Navigation VM::NavigationSM</definition>
        <argsstring></argsstring>
        <name>NavigationSM</name>
        <briefdescription>
<para>Navigation state machine handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="202" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" prot="public" static="no" mutable="no">
        <type><ref refid="struct_v_m___hk_tlm__t" kindref="compound">VM_HkTlm_t</ref></type>
        <definition>VM_HkTlm_t VM::HkTlm</definition>
        <argsstring></argsstring>
        <name>HkTlm</name>
        <briefdescription>
<para>Housekeeping Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="205" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ab0f0a9caeb80ef3be738340867f6bdcd" prot="public" static="no" mutable="no">
        <type><ref refid="struct_v_m___config_tlm__t" kindref="compound">VM_ConfigTlm_t</ref></type>
        <definition>VM_ConfigTlm_t VM::ConfigTlm</definition>
        <argsstring></argsstring>
        <name>ConfigTlm</name>
        <briefdescription>
<para>Configuration Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="208" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_v_m_1a3502d27cf6a670f277221e8e6ac8b869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VM::VM</definition>
        <argsstring>()</argsstring>
        <name>VM</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1afd22a970a44757f4b53c8c77a8fa1e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VM::~VM</definition>
        <argsstring>()</argsstring>
        <name>~VM</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::AppMain</definition>
        <argsstring>(void)</argsstring>
        <name>AppMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager (<ref refid="class_v_m" kindref="compound">VM</ref>) application entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Vehicle Manager Task application entry point. This function performs app initialization, then waits for the cFE ES Startup Sync, then executes the main processing loop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If there is an unrecoverable failure during initialization the main loop is never executed and the application will exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitApp</definition>
        <argsstring>(void)</argsstring>
        <name>InitApp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Vehicle Manager (<ref refid="class_v_m" kindref="compound">VM</ref>) application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Vehicle Manager application initialization routine. This function performs all the required startup steps to initialize (or restore from CDS) <ref refid="class_v_m" kindref="compound">VM</ref> data structures and get the application registered with the cFE services so it can begin to receive command messages and send events.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_ES_RegisterApp</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitEvent  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitPipe  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitData  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitConfigTbl  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">OS_TaskInstallDeleteHandler</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aaa46c2c4ffbf8fa240902053672f7f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitParams</definition>
        <argsstring>(void)</argsstring>
        <name>InitParams</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize named parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function registers named parameters and prepares the object to respond to updates in named parameters.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from #ParamsConsumer::InitParams  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af03d761dd6b90e2c18294158bf9e9221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitEvent</definition>
        <argsstring>(void)</argsstring>
        <name>InitEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Event Services and Event tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup cFE Event Services for use by the <ref refid="class_v_m" kindref="compound">VM</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__evs_8h_1aff6913e2ab9a37ae699382c482fdb786" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_EVS_Register</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::InitData</definition>
        <argsstring>(void)</argsstring>
        <name>InitData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize global variables used by <ref refid="class_v_m" kindref="compound">VM</ref> application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to initialize the <ref refid="class_v_m" kindref="compound">VM</ref> application data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_v_m" kindref="compound">VM</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::RcvSchPipeMsg</definition>
        <argsstring>(int32 iBlocking)</argsstring>
        <name>RcvSchPipeMsg</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>iBlocking</declname>
        </param>
        <briefdescription>
<para>Receive and process messages from the scheduler pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function receives and processes messages for the <ref refid="class_v_m" kindref="compound">VM</ref> application from the SCH pipe. This function will pend for the type defined by iBlocking, allowing it to wait for messages, i.e. wakeup messages from scheduler.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iBlocking</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1acc9e6f66cd026d1c987c4c3de827366f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PEND_FOREVER</ref>, <ref refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_POLL</ref> or millisecond timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_RcvMsg</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessDataPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessDataPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process incoming data messages. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming data messages subscribed by <ref refid="class_v_m" kindref="compound">VM</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager Task incoming command processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming commands subscribed by <ref refid="class_v_m" kindref="compound">VM</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessAppCmds</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr)</argsstring>
        <name>ProcessAppCmds</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Vehicle Manager Task application commands. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes command messages specific to the <ref refid="class_v_m" kindref="compound">VM</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ReportHousekeeping</definition>
        <argsstring>(void)</argsstring>
        <name>ReportHousekeeping</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_v_m" kindref="compound">VM</ref> housekeeping message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the housekeeping message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a32560bba908e54366252101cfae82f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendActuatorArmedMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendActuatorArmedMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the ActuatorArmedMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the ActuatorArmedMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae228c2b2cd5e4f5b25d5c653e26ed477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendHomePositionMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendHomePositionMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the HomePositionMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the HomePositionMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="422" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a21d79320551169eaf71258d5b8a46c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleManagerStateMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleManagerStateMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleManagerStateMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleManagerStateMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aae21282ba6f2d4c6fc99131c5faf4ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendMissionMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendMissionMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the MissionMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the MissionMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="448" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a371db313e8a508c1bd2c79af53a29b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendLedControlMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendLedControlMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the LedControlMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the LedControlMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="461" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ad10ee3ac2966766a0be9ea8fff6f30e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleStatusMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleStatusMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleStatusMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleStatusMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a51c92f145854c6a05e3b36e4412a137c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleControlModeMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleControlModeMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleControlModeMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleControlModeMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="487" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a67a94fbe567f2a7c4fa21209bfc6b0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleCommandMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleCommandMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleCommandMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleCommandMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a8f219068a34cb8b9cbfe5a241b5d3bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean VM::VerifyCmdLength</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr, uint16 usExpectedLen)</argsstring>
        <name>VerifyCmdLength</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>usExpectedLen</declname>
        </param>
        <briefdescription>
<para>Verify Command Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function verifies the command message length.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usExpectedLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected length of the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the message length matches expectations, FALSE if it does not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a19b757557b713ed378d352ef8875a62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 VM::TimeElapsed</definition>
        <argsstring>(uint64 *TimePtr)</argsstring>
        <name>TimeElapsed</name>
        <param>
          <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref> *</type>
          <declname>TimePtr</declname>
        </param>
        <briefdescription>
<para>Time Elapsed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Returns elaped time.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TimePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to then time.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in unsigned integer format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 VM::TimeNow</definition>
        <argsstring>(void)</argsstring>
        <name>TimeNow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Returns current time.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in unsigned integer format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af3cb2f0cff48cf91124981920b7296b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::IsVehicleArmed</definition>
        <argsstring>(void)</argsstring>
        <name>IsVehicleArmed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Armed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>True is Vehicle is armed</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the armed attribute in actuator armed message is true, FALSE if it is not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::FlightSessionInit</definition>
        <argsstring>(void)</argsstring>
        <name>FlightSessionInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set Home Position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Sets home position at initialization, arming and launch events</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SetHomePosition</definition>
        <argsstring>(void)</argsstring>
        <name>SetHomePosition</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set Home Position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Sets home position at initialization, arming and launch events</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::RcModes</definition>
        <argsstring>(void)</argsstring>
        <name>RcModes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>RC Control Navigation Modes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Procedure to how rc will switch navigation modes such as position hold, auto loiter, auto rtl and manual using manual control setpoint message. State transitions are invoked by this method.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::Initialization</definition>
        <argsstring>(void)</argsstring>
        <name>Initialization</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager Initialization Task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Messages are initialized to their defaults and housekeeping.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="617" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager Maintenance Task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Executes every time a new message is available, verifies message validity and updates messages and publishes them to software bus.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a0aff9ca16601c878fed21ad316fba963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* VM::GetNavStateAsString</definition>
        <argsstring>(uint32)</argsstring>
        <name>GetNavStateAsString</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        </param>
        <briefdescription>
<para>TODO. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Executes every time a new message is available, verifies message validity and updates messages and publishes them to software bus.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a958920fd2c1269d6406c6f3d55d53b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::UpdateParamsFromTable</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateParamsFromTable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Updates application params from param table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::onParamValidate</definition>
        <argsstring>(void *Address, uint32 Value)</argsstring>
        <name>onParamValidate</name>
        <param>
          <type>void *</type>
          <declname>Address</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Validate a <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> named parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the #ParamsConsumer base class when before a named parameter is changed by address. The address passed is the address of the parameter passed in the #ParamsConsumer::InitParams function. Return #true if the parameter is valid, and #false if invalid.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if valid. #false if invalid </para></simplesect>
</para><para>Return codes from: <ref refid="class_v_m_1ad6d808a923d86d259b5568fe3068cc1c" kindref="member">VM::Validate_COM_RC_IN_MODE</ref>, <ref refid="class_v_m_1ae2448d822ce1089e14346d7863e68e82" kindref="member">VM::Validate_COM_ARM_SWISBTN</ref>, <ref refid="class_v_m_1abf783899ee9e4156ff955560c456b032" kindref="member">VM::Validate_COM_RC_ARM_HYST</ref>, <ref refid="class_v_m_1af74efb305a40d52160c53af440b78692" kindref="member">VM::Validate_MAV_SYS_ID</ref>, <ref refid="class_v_m_1a5fec9b3f71b68617d5c6e9eb45589b20" kindref="member">VM::Validate_MAV_COMP_ID</ref>, <ref refid="class_v_m_1ad963d020eac5faea0d924cf04337c394" kindref="member">VM::Validate_COM_LOW_BAT_ACT</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="1000" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::onParamValidate</definition>
        <argsstring>(void *Address, float Value)</argsstring>
        <name>onParamValidate</name>
        <param>
          <type>void *</type>
          <declname>Address</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Validate a #float named parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the #ParamsConsumer base class when before a named parameter is changed by address. The address passed is the address of the parameter passed in the #ParamsConsumer::InitParams function. Return #true if the parameter is valid, and #false if invalid.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if valid. #false if invalid </para></simplesect>
</para><para>Return codes from: <ref refid="class_v_m_1a9e144749af10b80360b0612fbb88a273" kindref="member">VM::Validate_COM_RC_LOSS_T</ref>, <ref refid="class_v_m_1affd007cb4ee4ae4bb8c834f2446c8ea7" kindref="member">VM::Validate_COM_HOME_H_T</ref>, <ref refid="class_v_m_1ace3d9b4327e0e62890c15f4d9d6fc919" kindref="member">VM::Validate_COM_HOME_V_T</ref>, #VM::Validate_HOME_POS_ALT_PADDING </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="1025" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitConfigTbl</definition>
        <argsstring>(void)</argsstring>
        <name>InitConfigTbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="class_v_m" kindref="compound">VM</ref> configuration tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes <ref refid="class_v_m" kindref="compound">VM</ref>&apos;s configuration tables. This includes &lt;TODO&gt;.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Register</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Load</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_AcquireConfigPointers  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="672" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::AcquireConfigPointers</definition>
        <argsstring>(void)</argsstring>
        <name>AcquireConfigPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Obtain <ref refid="class_v_m" kindref="compound">VM</ref> configuration tables data pointers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function manages the configuration tables and obtains a pointer to their data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af97e3d991db9319a7435ef9481a276fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ReportConfiguration</definition>
        <argsstring>(void)</argsstring>
        <name>ReportConfiguration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Send the configuration message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes a message containing the current configuration.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="706" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aa88c87c897d5f386ca6d5b6aa0e313b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessParamPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessParamPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process the parameter pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will process all incoming named parameter commands.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a5b7397f2fe8a7c7b54db81f4f5b07bee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::ProcessUpdatedParam</definition>
        <argsstring>(PRMLIB_UpdatedParamMsg_t *MsgPtr)</argsstring>
        <name>ProcessUpdatedParam</name>
        <param>
          <type>PRMLIB_UpdatedParamMsg_t *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Process parameter updates. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called to update named parameters.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if successful. -1 if unsuccessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a6c23fee5a10b245b815c6ca4554b129e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void VM::onParamsChange</definition>
        <argsstring>(PRMLIB_ParamRegistration_t *ParamsData, uint32 ParamsCount)</argsstring>
        <name>onParamsChange</name>
        <param>
          <type>PRMLIB_ParamRegistration_t *</type>
          <declname>ParamsData</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>ParamsCount</declname>
        </param>
        <briefdescription>
<para>Respond to changes in parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the #ParamsConsumer base class when a registered named parameter has changed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if successful. -1 if unsuccessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="756" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_v_m_1a1d8cad22b7b9c8581a4c6db7ef172f39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>static int32 VM::ValidateConfigTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidateConfigTbl</name>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_v_m" kindref="compound">VM</ref> configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_v_m" kindref="compound">VM</ref>&apos;s configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ad6d808a923d86d259b5568fe3068cc1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_RC_IN_MODE</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_RC_IN_MODE</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_RC_IN_MODE parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the RC control input mode (COM_RC_IN_MODE) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0 &gt; 2, default 0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="797" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae2448d822ce1089e14346d7863e68e82" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_ARM_SWISBTN</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_ARM_SWISBTN</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_ARM_SWISBTN parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Arm switch is only a button (COM_ARM_SWISBTN) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0 &gt; 1, default 0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1abf783899ee9e4156ff955560c456b032" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_RC_ARM_HYST</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_RC_ARM_HYST</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_RC_ARM_HYST parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the RC input arm/disarm command duration (COM_RC_ARM_HYST) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 100 &gt; 1500, default 1000.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="841" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af74efb305a40d52160c53af440b78692" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_MAV_SYS_ID</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_MAV_SYS_ID</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the MAV_SYS_ID parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the System ID (MAV_SYS_ID) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 1 &gt; 250, default 1.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="863" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a5fec9b3f71b68617d5c6e9eb45589b20" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_MAV_COMP_ID</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_MAV_COMP_ID</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the MAV_COMP_ID parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Component ID (MAV_COMP_ID) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 1 &gt; 250, default 1.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="885" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a9e144749af10b80360b0612fbb88a273" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_RC_LOSS_T</definition>
        <argsstring>(float param)</argsstring>
        <name>Validate_COM_RC_LOSS_T</name>
        <param>
          <type>float</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_RC_LOSS_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the RC loss time threshold (COM_RC_LOSS_T) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0.0 &gt; 35.0, default 0.5.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="907" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ad963d020eac5faea0d924cf04337c394" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_LOW_BAT_ACT</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_LOW_BAT_ACT</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_LOW_BAT_ACT parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Battery failsafe mode (COM_LOW_BAT_ACT) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0 &gt; 3, default 0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="929" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1affd007cb4ee4ae4bb8c834f2446c8ea7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_HOME_H_T</definition>
        <argsstring>(float param)</argsstring>
        <name>Validate_COM_HOME_H_T</name>
        <param>
          <type>float</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_HOME_H_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Home set horizontal threshold (COM_HOME_H_T) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 2.0 &gt; 15.0, default 5.0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="951" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ace3d9b4327e0e62890c15f4d9d6fc919" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>static osalbool VM::Validate_COM_HOME_V_T</definition>
        <argsstring>(float param)</argsstring>
        <name>Validate_COM_HOME_V_T</name>
        <param>
          <type>float</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_HOME_V_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Home set vertical threshold (COM_HOME_V_T) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 5.0 &gt; 25.0, default 10.0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="973" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_v_m" kindref="compound">VM</ref> Application Class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>VM</label>
        <link refid="class_v_m"/>
        <childnode refid="1" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ParamsConsumer</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>VM_StatusFlags</label>
        <link refid="struct_v_m___status_flags"/>
      </node>
      <node id="5">
        <label>VM_ConfigTbl_t</label>
        <link refid="struct_v_m___config_tbl__t"/>
      </node>
      <node id="2">
        <label>VM</label>
        <link refid="class_v_m"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ConfigTlm</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>ConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>HkTlm</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>VM_ConfigTlm_t</label>
        <link refid="struct_v_m___config_tlm__t"/>
        <childnode refid="5" relation="usage">
          <edgelabel>ConfigTbl</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>VM_Modes</label>
        <link refid="struct_v_m___modes"/>
      </node>
      <node id="3">
        <label>ParamsConsumer</label>
      </node>
      <node id="6">
        <label>VM_HkTlm_t</label>
        <link refid="struct_v_m___hk_tlm__t"/>
        <childnode refid="7" relation="usage">
          <edgelabel>PreviousModes</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>StatusFlags</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="apps/vm/fsw/src/vm_app.h" line="117" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="116" bodyend="1026"/>
    <listofallmembers>
      <member refid="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" prot="private" virt="non-virtual"><scope>VM</scope><name>AcquireConfigPointers</name></member>
      <member refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" prot="public" virt="non-virtual"><scope>VM</scope><name>ActuatorArmedMsg</name></member>
      <member refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" prot="public" virt="non-virtual"><scope>VM</scope><name>AppMain</name></member>
      <member refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" prot="public" virt="non-virtual"><scope>VM</scope><name>ArmingSM</name></member>
      <member refid="class_v_m_1aac3829d769b1c158ed93bc41c5f2e610" prot="public" virt="non-virtual"><scope>VM</scope><name>BatteryStatusMsg</name></member>
      <member refid="class_v_m_1a76b3179c5edb56bfeb1fb6c4ff55af64" prot="public" virt="non-virtual"><scope>VM</scope><name>CmdPipeId</name></member>
      <member refid="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" prot="public" virt="non-virtual"><scope>VM</scope><name>ConfigTblHdl</name></member>
      <member refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" prot="public" virt="non-virtual"><scope>VM</scope><name>ConfigTblPtr</name></member>
      <member refid="class_v_m_1ab0f0a9caeb80ef3be738340867f6bdcd" prot="public" virt="non-virtual"><scope>VM</scope><name>ConfigTlm</name></member>
      <member refid="class_v_m_1a399c96da46dac8677e59129b6230d9eb" prot="public" virt="non-virtual"><scope>VM</scope><name>DataPipeId</name></member>
      <member refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" prot="public" virt="non-virtual"><scope>VM</scope><name>Execute</name></member>
      <member refid="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" prot="public" virt="non-virtual"><scope>VM</scope><name>FlightSessionInit</name></member>
      <member refid="class_v_m_1a0aff9ca16601c878fed21ad316fba963" prot="public" virt="non-virtual"><scope>VM</scope><name>GetNavStateAsString</name></member>
      <member refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" prot="public" virt="non-virtual"><scope>VM</scope><name>HkTlm</name></member>
      <member refid="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" prot="public" virt="non-virtual"><scope>VM</scope><name>HomePositionMsg</name></member>
      <member refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" prot="public" virt="non-virtual"><scope>VM</scope><name>InitApp</name></member>
      <member refid="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" prot="private" virt="non-virtual"><scope>VM</scope><name>InitConfigTbl</name></member>
      <member refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" prot="public" virt="non-virtual"><scope>VM</scope><name>InitData</name></member>
      <member refid="class_v_m_1af03d761dd6b90e2c18294158bf9e9221" prot="public" virt="non-virtual"><scope>VM</scope><name>InitEvent</name></member>
      <member refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" prot="public" virt="non-virtual"><scope>VM</scope><name>Initialization</name></member>
      <member refid="class_v_m_1aaa46c2c4ffbf8fa240902053672f7f9e" prot="public" virt="non-virtual"><scope>VM</scope><name>InitParams</name></member>
      <member refid="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" prot="public" virt="non-virtual"><scope>VM</scope><name>InitPipe</name></member>
      <member refid="class_v_m_1af3cb2f0cff48cf91124981920b7296b3" prot="public" virt="non-virtual"><scope>VM</scope><name>IsVehicleArmed</name></member>
      <member refid="class_v_m_1a53f79370d94268734e2763b3a7502a71" prot="public" virt="non-virtual"><scope>VM</scope><name>LedControlMsg</name></member>
      <member refid="class_v_m_1ab095a387a372af757908d62ddf03e749" prot="public" virt="non-virtual"><scope>VM</scope><name>m_caws</name></member>
      <member refid="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" prot="public" virt="non-virtual"><scope>VM</scope><name>ManualControlSetpointMsg</name></member>
      <member refid="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" prot="public" virt="non-virtual"><scope>VM</scope><name>MissionMsg</name></member>
      <member refid="class_v_m_1a7e7b5fd02128f88d9e34f55cbc3d8cdb" prot="public" virt="non-virtual"><scope>VM</scope><name>MissionResultMsg</name></member>
      <member refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" prot="public" virt="non-virtual"><scope>VM</scope><name>NavigationSM</name></member>
      <member refid="class_v_m_1a6c23fee5a10b245b815c6ca4554b129e" prot="private" virt="virtual"><scope>VM</scope><name>onParamsChange</name></member>
      <member refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" prot="public" virt="non-virtual"><scope>VM</scope><name>onParamValidate</name></member>
      <member refid="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" prot="public" virt="non-virtual"><scope>VM</scope><name>onParamValidate</name></member>
      <member refid="class_v_m_1aa485c303dcc3d70ba0a52898b649ecfd" prot="public" virt="non-virtual"><scope>VM</scope><name>PositionSetpointTripletMsg</name></member>
      <member refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" prot="public" virt="non-virtual"><scope>VM</scope><name>ProcessAppCmds</name></member>
      <member refid="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" prot="public" virt="non-virtual"><scope>VM</scope><name>ProcessCmdPipe</name></member>
      <member refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" prot="public" virt="non-virtual"><scope>VM</scope><name>ProcessDataPipe</name></member>
      <member refid="class_v_m_1aa88c87c897d5f386ca6d5b6aa0e313b5" prot="private" virt="non-virtual"><scope>VM</scope><name>ProcessParamPipe</name></member>
      <member refid="class_v_m_1a5b7397f2fe8a7c7b54db81f4f5b07bee" prot="private" virt="non-virtual"><scope>VM</scope><name>ProcessUpdatedParam</name></member>
      <member refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" prot="public" virt="non-virtual"><scope>VM</scope><name>RcModes</name></member>
      <member refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" prot="public" virt="non-virtual"><scope>VM</scope><name>RcvSchPipeMsg</name></member>
      <member refid="class_v_m_1af97e3d991db9319a7435ef9481a276fb" prot="private" virt="non-virtual"><scope>VM</scope><name>ReportConfiguration</name></member>
      <member refid="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" prot="public" virt="non-virtual"><scope>VM</scope><name>ReportHousekeeping</name></member>
      <member refid="class_v_m_1a046082c5e178827f43d592935619c681" prot="public" virt="non-virtual"><scope>VM</scope><name>SafetyMsg</name></member>
      <member refid="class_v_m_1a4dda712bacee61943d3dbee8d43f4615" prot="public" virt="non-virtual"><scope>VM</scope><name>SchPipeId</name></member>
      <member refid="class_v_m_1a32560bba908e54366252101cfae82f0b" prot="public" virt="non-virtual"><scope>VM</scope><name>SendActuatorArmedMsg</name></member>
      <member refid="class_v_m_1ae228c2b2cd5e4f5b25d5c653e26ed477" prot="public" virt="non-virtual"><scope>VM</scope><name>SendHomePositionMsg</name></member>
      <member refid="class_v_m_1a371db313e8a508c1bd2c79af53a29b25" prot="public" virt="non-virtual"><scope>VM</scope><name>SendLedControlMsg</name></member>
      <member refid="class_v_m_1aae21282ba6f2d4c6fc99131c5faf4ea1" prot="public" virt="non-virtual"><scope>VM</scope><name>SendMissionMsg</name></member>
      <member refid="class_v_m_1a67a94fbe567f2a7c4fa21209bfc6b0df" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleCommandMsg</name></member>
      <member refid="class_v_m_1a51c92f145854c6a05e3b36e4412a137c" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleControlModeMsg</name></member>
      <member refid="class_v_m_1a21d79320551169eaf71258d5b8a46c33" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleManagerStateMsg</name></member>
      <member refid="class_v_m_1ad10ee3ac2966766a0be9ea8fff6f30e8" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleStatusMsg</name></member>
      <member refid="class_v_m_1a62f5965564d193031a73df3a63515767" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorAccelMsg</name></member>
      <member refid="class_v_m_1ac1dbcc4bb47165cfa686860ebe464eff" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorCombinedMsg</name></member>
      <member refid="class_v_m_1afd67df4b4fe797695e48208d569125d9" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorCorrectionMsg</name></member>
      <member refid="class_v_m_1ad5719da53147146863d1e15f189118fc" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorGyroMsg</name></member>
      <member refid="class_v_m_1ada27d75c7daa3fef2027f433f955471e" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorMagMsg</name></member>
      <member refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" prot="public" virt="non-virtual"><scope>VM</scope><name>SetHomePosition</name></member>
      <member refid="class_v_m_1ad0d57a422189b4bec553b1dd9b5333cd" prot="public" virt="non-virtual"><scope>VM</scope><name>SubsystemInfoMsg</name></member>
      <member refid="class_v_m_1af222349536e984bfc3ae835bbf1490c0" prot="public" virt="non-virtual"><scope>VM</scope><name>TelemetryStatusMsg</name></member>
      <member refid="class_v_m_1a19b757557b713ed378d352ef8875a62f" prot="public" virt="non-virtual"><scope>VM</scope><name>TimeElapsed</name></member>
      <member refid="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" prot="public" virt="non-virtual"><scope>VM</scope><name>TimeNow</name></member>
      <member refid="class_v_m_1a96816f8e473702c9ea57a3d131a0efb6" prot="public" virt="non-virtual"><scope>VM</scope><name>uiRunStatus</name></member>
      <member refid="class_v_m_1a958920fd2c1269d6406c6f3d55d53b67" prot="public" virt="non-virtual"><scope>VM</scope><name>UpdateParamsFromTable</name></member>
      <member refid="class_v_m_1ae2448d822ce1089e14346d7863e68e82" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_ARM_SWISBTN</name></member>
      <member refid="class_v_m_1affd007cb4ee4ae4bb8c834f2446c8ea7" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_HOME_H_T</name></member>
      <member refid="class_v_m_1ace3d9b4327e0e62890c15f4d9d6fc919" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_HOME_V_T</name></member>
      <member refid="class_v_m_1ad963d020eac5faea0d924cf04337c394" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_LOW_BAT_ACT</name></member>
      <member refid="class_v_m_1abf783899ee9e4156ff955560c456b032" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_RC_ARM_HYST</name></member>
      <member refid="class_v_m_1ad6d808a923d86d259b5568fe3068cc1c" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_RC_IN_MODE</name></member>
      <member refid="class_v_m_1a9e144749af10b80360b0612fbb88a273" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_RC_LOSS_T</name></member>
      <member refid="class_v_m_1a5fec9b3f71b68617d5c6e9eb45589b20" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_MAV_COMP_ID</name></member>
      <member refid="class_v_m_1af74efb305a40d52160c53af440b78692" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_MAV_SYS_ID</name></member>
      <member refid="class_v_m_1a1d8cad22b7b9c8581a4c6db7ef172f39" prot="public" virt="non-virtual"><scope>VM</scope><name>ValidateConfigTbl</name></member>
      <member refid="class_v_m_1aa0727b35c392b4da880700f496c11b93" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleAttitudeMsg</name></member>
      <member refid="class_v_m_1afcd15ef142b0a0ac7f6e800d2813eac4" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleCommandMsg</name></member>
      <member refid="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleControlModeMsg</name></member>
      <member refid="class_v_m_1a5062611ba3bc6f7ba3ca3f9fa5ab83ad" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleGlobalPositionMsg</name></member>
      <member refid="class_v_m_1a74414678084bd6a7a707f4a81bfe5a38" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleGpsPositionMsg</name></member>
      <member refid="class_v_m_1a95dde4ee20a78a080f15ca536b3b53b5" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleLandDetectedMsg</name></member>
      <member refid="class_v_m_1a59a819087efb4519dd772eebc96e81af" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleLocalPositionMsg</name></member>
      <member refid="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleManagerStateMsg</name></member>
      <member refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleStatusMsg</name></member>
      <member refid="class_v_m_1a8f219068a34cb8b9cbfe5a241b5d3bfe" prot="public" virt="non-virtual"><scope>VM</scope><name>VerifyCmdLength</name></member>
      <member refid="class_v_m_1a3502d27cf6a670f277221e8e6ac8b869" prot="public" virt="non-virtual"><scope>VM</scope><name>VM</name></member>
      <member refid="class_v_m_1afd22a970a44757f4b53c8c77a8fa1e71" prot="public" virt="non-virtual"><scope>VM</scope><name>~VM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
