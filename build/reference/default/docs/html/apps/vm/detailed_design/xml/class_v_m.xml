<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_v_m" kind="class" language="C++" prot="public">
    <compoundname>VM</compoundname>
    <basecompoundref prot="private" virt="non-virtual">ParamsConsumer</basecompoundref>
    <includes refid="vm__app_8h" local="no">vm_app.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_v_m_1a4dda712bacee61943d3dbee8d43f4615" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t VM::SchPipeId</definition>
        <argsstring></argsstring>
        <name>SchPipeId</name>
        <briefdescription>
<para>Scheduling Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="125" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="125" bodyend="-1"/>
        <referencedby refid="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" compoundref="vm__app_8cpp" startline="111" endline="378">InitPipe</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a76b3179c5edb56bfeb1fb6c4ff55af64" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t VM::CmdPipeId</definition>
        <argsstring></argsstring>
        <name>CmdPipeId</name>
        <briefdescription>
<para>Command Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="128" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="128" bodyend="-1"/>
        <referencedby refid="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" compoundref="vm__app_8cpp" startline="111" endline="378">InitPipe</referencedby>
        <referencedby refid="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" compoundref="vm__app_8cpp" startline="578" endline="623">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a399c96da46dac8677e59129b6230d9eb" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t VM::DataPipeId</definition>
        <argsstring></argsstring>
        <name>DataPipeId</name>
        <briefdescription>
<para>Data Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="131" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" compoundref="vm__app_8cpp" startline="111" endline="378">InitPipe</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a96816f8e473702c9ea57a3d131a0efb6" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 VM::uiRunStatus</definition>
        <argsstring></argsstring>
        <name>uiRunStatus</name>
        <briefdescription>
<para>Task Run Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="135" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="135" bodyend="-1"/>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t VM::ConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>ConfigTblHdl</name>
        <briefdescription>
<para>Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="139" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="139" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" compoundref="vm__config__utils_8cpp" startline="163" endline="205">AcquireConfigPointers</referencedby>
        <referencedby refid="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" compoundref="vm__config__utils_8cpp" startline="48" endline="86">InitConfigTbl</referencedby>
        <referencedby refid="class_v_m_1a3db46dde9351e163971c927a3ced9d95" compoundref="vm__app_8cpp" startline="2188" endline="2193">onParamsChange</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a47072ffba454d9129036f780d4357bf3" prot="public" static="no" mutable="no">
        <type><ref refid="struct_v_m___config_tbl__t" kindref="compound">VM_ConfigTbl_t</ref> *</type>
        <definition>VM_ConfigTbl_t* VM::ConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>ConfigTblPtr</name>
        <briefdescription>
<para>Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="141" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="141" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" compoundref="vm__config__utils_8cpp" startline="163" endline="205">AcquireConfigPointers</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1af97e3d991db9319a7435ef9481a276fb" compoundref="vm__app_8cpp" startline="2145" endline="2151">ReportConfiguration</referencedby>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ab095a387a372af757908d62ddf03e749" prot="public" static="no" mutable="no">
        <type><ref refid="class_caution_warning_helper" kindref="compound">CautionWarningHelper</ref></type>
        <definition>CautionWarningHelper VM::m_caws</definition>
        <argsstring></argsstring>
        <name>m_caws</name>
        <briefdescription>
<para>Caution and Warning helper class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="143" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="143" bodyend="-1"/>
        <referencedby refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ada27d75c7daa3fef2027f433f955471e" prot="public" static="no" mutable="no">
        <type>PX4_SensorMagMsg_t</type>
        <definition>PX4_SensorMagMsg_t VM::SensorMagMsg</definition>
        <argsstring></argsstring>
        <name>SensorMagMsg</name>
        <briefdescription>
<para>Input Data subscribed at the beginning of cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Magnetometer message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="147" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="147" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ad5719da53147146863d1e15f189118fc" prot="public" static="no" mutable="no">
        <type>PX4_SensorGyroMsg_t</type>
        <definition>PX4_SensorGyroMsg_t VM::SensorGyroMsg</definition>
        <argsstring></argsstring>
        <name>SensorGyroMsg</name>
        <briefdescription>
<para>Gyro message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="149" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="149" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aac3829d769b1c158ed93bc41c5f2e610" prot="public" static="no" mutable="no">
        <type>PX4_BatteryStatusMsg_t</type>
        <definition>PX4_BatteryStatusMsg_t VM::BatteryStatusMsg</definition>
        <argsstring></argsstring>
        <name>BatteryStatusMsg</name>
        <briefdescription>
<para>Battery status message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="151" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="151" bodyend="-1"/>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m___arming_1a616a59766c1ccc16468500faa880b13c" compoundref="vm___arming_8cpp" startline="218" endline="253">VM_Arming::PreFlightCheckCleared</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1af222349536e984bfc3ae835bbf1490c0" prot="public" static="no" mutable="no">
        <type>PX4_TelemetryStatusMsg_t</type>
        <definition>PX4_TelemetryStatusMsg_t VM::TelemetryStatusMsg</definition>
        <argsstring></argsstring>
        <name>TelemetryStatusMsg</name>
        <briefdescription>
<para>Telemetry status message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="153" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="153" bodyend="-1"/>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ad0d57a422189b4bec553b1dd9b5333cd" prot="public" static="no" mutable="no">
        <type>PX4_SubsystemInfoMsg_t</type>
        <definition>PX4_SubsystemInfoMsg_t VM::SubsystemInfoMsg</definition>
        <argsstring></argsstring>
        <name>SubsystemInfoMsg</name>
        <briefdescription>
<para>Subsystem information message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="155" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="155" bodyend="-1"/>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aa0727b35c392b4da880700f496c11b93" prot="public" static="no" mutable="no">
        <type>PX4_VehicleAttitudeMsg_t</type>
        <definition>PX4_VehicleAttitudeMsg_t VM::VehicleAttitudeMsg</definition>
        <argsstring></argsstring>
        <name>VehicleAttitudeMsg</name>
        <briefdescription>
<para>Vehicle attitude message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="157" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="157" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a59a819087efb4519dd772eebc96e81af" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLocalPositionMsg_t</type>
        <definition>PX4_VehicleLocalPositionMsg_t VM::VehicleLocalPositionMsg</definition>
        <argsstring></argsstring>
        <name>VehicleLocalPositionMsg</name>
        <briefdescription>
<para>Vehicle local position messsage. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="159" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="159" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m___navigation_1a3ef977ac33d15b97173cee4ef99aae03" compoundref="vm___navigation_8cpp" startline="464" endline="485">VM_Navigation::IsTransitionAltCtlValid</referencedby>
        <referencedby refid="class_v_m___navigation_1aa71f7ec0293dff0e61469c6b1d32cef8" compoundref="vm___navigation_8cpp" startline="494" endline="517">VM_Navigation::IsTransitionPosCtlValid</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a95dde4ee20a78a080f15ca536b3b53b5" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLandDetectedMsg_t</type>
        <definition>PX4_VehicleLandDetectedMsg_t VM::VehicleLandDetectedMsg</definition>
        <argsstring></argsstring>
        <name>VehicleLandDetectedMsg</name>
        <briefdescription>
<para>Vehicle land detected message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="161" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="161" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a7e7b5fd02128f88d9e34f55cbc3d8cdb" prot="public" static="no" mutable="no">
        <type>PX4_MissionResultMsg_t</type>
        <definition>PX4_MissionResultMsg_t VM::MissionResultMsg</definition>
        <argsstring></argsstring>
        <name>MissionResultMsg</name>
        <briefdescription>
<para>Mission result message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="163" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="163" bodyend="-1"/>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" prot="public" static="no" mutable="no">
        <type>PX4_ManualControlSetpointMsg_t</type>
        <definition>PX4_ManualControlSetpointMsg_t VM::ManualControlSetpointMsg</definition>
        <argsstring></argsstring>
        <name>ManualControlSetpointMsg</name>
        <briefdescription>
<para>Manual control setpoint message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="165" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="165" bodyend="-1"/>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" compoundref="vm__app_8cpp" startline="1890" endline="2032">RcModes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1aa485c303dcc3d70ba0a52898b649ecfd" prot="public" static="no" mutable="no">
        <type>PX4_PositionSetpointTripletMsg_t</type>
        <definition>PX4_PositionSetpointTripletMsg_t VM::PositionSetpointTripletMsg</definition>
        <argsstring></argsstring>
        <name>PositionSetpointTripletMsg</name>
        <briefdescription>
<para>position setpoint triplet message </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="167" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="167" bodyend="-1"/>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a62f5965564d193031a73df3a63515767" prot="public" static="no" mutable="no">
        <type>PX4_SensorAccelMsg_t</type>
        <definition>PX4_SensorAccelMsg_t VM::SensorAccelMsg</definition>
        <argsstring></argsstring>
        <name>SensorAccelMsg</name>
        <briefdescription>
<para>Sensor accelerometer message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="169" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="169" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a046082c5e178827f43d592935619c681" prot="public" static="no" mutable="no">
        <type>PX4_SafetyMsg_t</type>
        <definition>PX4_SafetyMsg_t VM::SafetyMsg</definition>
        <argsstring></argsstring>
        <name>SafetyMsg</name>
        <briefdescription>
<para>Safety message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="171" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="171" bodyend="-1"/>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m___arming_1a616a59766c1ccc16468500faa880b13c" compoundref="vm___arming_8cpp" startline="218" endline="253">VM_Arming::PreFlightCheckCleared</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1afd67df4b4fe797695e48208d569125d9" prot="public" static="no" mutable="no">
        <type>PX4_SensorCorrectionMsg_t</type>
        <definition>PX4_SensorCorrectionMsg_t VM::SensorCorrectionMsg</definition>
        <argsstring></argsstring>
        <name>SensorCorrectionMsg</name>
        <briefdescription>
<para>Sensor correction message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="173" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="173" bodyend="-1"/>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ac1dbcc4bb47165cfa686860ebe464eff" prot="public" static="no" mutable="no">
        <type>PX4_SensorCombinedMsg_t</type>
        <definition>PX4_SensorCombinedMsg_t VM::SensorCombinedMsg</definition>
        <argsstring></argsstring>
        <name>SensorCombinedMsg</name>
        <briefdescription>
<para>Sensor combined message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="175" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="175" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m___navigation_1a53917dd81954b9a3b261e29c729776ec" compoundref="vm___navigation_8cpp" startline="526" endline="549">VM_Navigation::IsTransitionAcrobaticValid</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1afcd15ef142b0a0ac7f6e800d2813eac4" prot="public" static="no" mutable="no">
        <type>PX4_VehicleCommandMsg_t</type>
        <definition>PX4_VehicleCommandMsg_t VM::VehicleCommandMsg</definition>
        <argsstring></argsstring>
        <name>VehicleCommandMsg</name>
        <briefdescription>
<para>Vehicle commanding message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="177" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a67a94fbe567f2a7c4fa21209bfc6b0df" compoundref="vm__app_8cpp" startline="1217" endline="1221">SendVehicleCommandMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a5062611ba3bc6f7ba3ca3f9fa5ab83ad" prot="public" static="no" mutable="no">
        <type>PX4_VehicleGlobalPositionMsg_t</type>
        <definition>PX4_VehicleGlobalPositionMsg_t VM::VehicleGlobalPositionMsg</definition>
        <argsstring></argsstring>
        <name>VehicleGlobalPositionMsg</name>
        <briefdescription>
<para>Vehicle global position message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="179" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="179" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m___arming_1a616a59766c1ccc16468500faa880b13c" compoundref="vm___arming_8cpp" startline="218" endline="253">VM_Arming::PreFlightCheckCleared</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a74414678084bd6a7a707f4a81bfe5a38" prot="public" static="no" mutable="no">
        <type>PX4_VehicleGpsPositionMsg_t</type>
        <definition>PX4_VehicleGpsPositionMsg_t VM::VehicleGpsPositionMsg</definition>
        <argsstring></argsstring>
        <name>VehicleGpsPositionMsg</name>
        <briefdescription>
<para>Vehicle gps position message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="181" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="181" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1ad051c0954ce548912e308c6836742bda" compoundref="vm___navigation_8cpp" startline="412" endline="442">VM_Navigation::AllMessagesReceivedAtLeastOnce</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" prot="public" static="no" mutable="no">
        <type>PX4_ActuatorArmedMsg_t</type>
        <definition>PX4_ActuatorArmedMsg_t VM::ActuatorArmedMsg</definition>
        <argsstring></argsstring>
        <name>ActuatorArmedMsg</name>
        <briefdescription>
<para>Output Data published at the end of cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Actuator armed message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="185" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="185" bodyend="-1"/>
        <referencedby refid="class_v_m___arming_1a765120b9f6daa784e5defc811f8ca3e2" compoundref="vm___arming_8cpp" startline="120" endline="132">VM_Arming::EnteredArmed</referencedby>
        <referencedby refid="class_v_m___arming_1a96f7208c9a671c9e6d62f6a3fd99ad72" compoundref="vm___arming_8cpp" startline="103" endline="111">VM_Arming::EnteredStandby</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m___arming_1a96227a86bef3054b87be573f445d62a6" compoundref="vm___arming_8cpp" startline="141" endline="146">VM_Arming::ExitedArmed</referencedby>
        <referencedby refid="class_v_m___arming_1a73bbcc225c37ead2a4b57a0f6b13eb0b" compoundref="vm___arming_8cpp" startline="83" endline="94">VM_Arming::Init</referencedby>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m_1af3cb2f0cff48cf91124981920b7296b3" compoundref="vm__app_8cpp" startline="1342" endline="1345">IsVehicleArmed</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_v_m_1a32560bba908e54366252101cfae82f0b" compoundref="vm__app_8cpp" startline="1125" endline="1129">SendActuatorArmedMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" prot="public" static="no" mutable="no">
        <type>PX4_HomePositionMsg_t</type>
        <definition>PX4_HomePositionMsg_t VM::HomePositionMsg</definition>
        <argsstring></argsstring>
        <name>HomePositionMsg</name>
        <briefdescription>
<para>Home position message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="187" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="187" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1ae228c2b2cd5e4f5b25d5c653e26ed477" compoundref="vm__app_8cpp" startline="1138" endline="1142">SendHomePositionMsg</referencedby>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" prot="public" static="no" mutable="no">
        <type>PX4_CommanderStateMsg_t</type>
        <definition>PX4_CommanderStateMsg_t VM::VehicleManagerStateMsg</definition>
        <argsstring></argsstring>
        <name>VehicleManagerStateMsg</name>
        <briefdescription>
<para>Vehicle manager state message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="189" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="189" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1a02ee1cd7a3c1bdc67ba9c7b58e867214" compoundref="vm___navigation_8cpp" startline="182" endline="190">VM_Navigation::EnteredAcrobatic</referencedby>
        <referencedby refid="class_v_m___navigation_1a4ac22b983d887617274319cb138ce55d" compoundref="vm___navigation_8cpp" startline="115" endline="122">VM_Navigation::EnteredAltitudeControl</referencedby>
        <referencedby refid="class_v_m___navigation_1a7dbd13733dd902a5adf39ef074fac4cd" compoundref="vm___navigation_8cpp" startline="250" endline="258">VM_Navigation::EnteredAutoLand</referencedby>
        <referencedby refid="class_v_m___navigation_1a9234dc20303e05d9ef8ae8245194c949" compoundref="vm___navigation_8cpp" startline="148" endline="156">VM_Navigation::EnteredAutoLoiter</referencedby>
        <referencedby refid="class_v_m___navigation_1a59e38d155581f49b02607a527c0d35fa" compoundref="vm___navigation_8cpp" startline="165" endline="173">VM_Navigation::EnteredAutoReturnToLaunch</referencedby>
        <referencedby refid="class_v_m___navigation_1ae835334913baecd510c19b02ae728f43" compoundref="vm___navigation_8cpp" startline="233" endline="241">VM_Navigation::EnteredAutoTakeoff</referencedby>
        <referencedby refid="class_v_m___navigation_1a0d23c35b731387adf4c862876f26e637" compoundref="vm___navigation_8cpp" startline="99" endline="106">VM_Navigation::EnteredManual</referencedby>
        <referencedby refid="class_v_m___navigation_1ab86cd11821815cbd78635b1508b7c4e9" compoundref="vm___navigation_8cpp" startline="131" endline="139">VM_Navigation::EnteredPositionControl</referencedby>
        <referencedby refid="class_v_m___navigation_1ad63bff999b235f4f8b1b9965d21af833" compoundref="vm___navigation_8cpp" startline="216" endline="224">VM_Navigation::EnteredRattitude</referencedby>
        <referencedby refid="class_v_m___navigation_1a9400ae2e2059d6edfc778f77d2bcd1b6" compoundref="vm___navigation_8cpp" startline="199" endline="207">VM_Navigation::EnteredStabilize</referencedby>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_v_m_1a21d79320551169eaf71258d5b8a46c33" compoundref="vm__app_8cpp" startline="1151" endline="1155">SendVehicleManagerStateMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" prot="public" static="no" mutable="no">
        <type>PX4_MissionMsg_t</type>
        <definition>PX4_MissionMsg_t VM::MissionMsg</definition>
        <argsstring></argsstring>
        <name>MissionMsg</name>
        <briefdescription>
<para>Mission message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="191" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="191" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m_1aae21282ba6f2d4c6fc99131c5faf4ea1" compoundref="vm__app_8cpp" startline="1164" endline="1168">SendMissionMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a53f79370d94268734e2763b3a7502a71" prot="public" static="no" mutable="no">
        <type>PX4_LedControlMsg_t</type>
        <definition>PX4_LedControlMsg_t VM::LedControlMsg</definition>
        <argsstring></argsstring>
        <name>LedControlMsg</name>
        <briefdescription>
<para>Led control message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="193" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="193" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a371db313e8a508c1bd2c79af53a29b25" compoundref="vm__app_8cpp" startline="1177" endline="1181">SendLedControlMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" prot="public" static="no" mutable="no">
        <type>PX4_VehicleStatusMsg_t</type>
        <definition>PX4_VehicleStatusMsg_t VM::VehicleStatusMsg</definition>
        <argsstring></argsstring>
        <name>VehicleStatusMsg</name>
        <briefdescription>
<para>Vehicle status message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="195" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="195" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1a3a86cc01ad0b6dc6196a15d61b4d2517" compoundref="vm___navigation_8cpp" startline="267" endline="403">VM_Navigation::DoAction</referencedby>
        <referencedby refid="class_v_m___navigation_1a02ee1cd7a3c1bdc67ba9c7b58e867214" compoundref="vm___navigation_8cpp" startline="182" endline="190">VM_Navigation::EnteredAcrobatic</referencedby>
        <referencedby refid="class_v_m___navigation_1a4ac22b983d887617274319cb138ce55d" compoundref="vm___navigation_8cpp" startline="115" endline="122">VM_Navigation::EnteredAltitudeControl</referencedby>
        <referencedby refid="class_v_m___arming_1a765120b9f6daa784e5defc811f8ca3e2" compoundref="vm___arming_8cpp" startline="120" endline="132">VM_Arming::EnteredArmed</referencedby>
        <referencedby refid="class_v_m___arming_1ab0f6feadf222701e195a849e9fd4816b" compoundref="vm___arming_8cpp" startline="170" endline="176">VM_Arming::EnteredArmedError</referencedby>
        <referencedby refid="class_v_m___navigation_1a7dbd13733dd902a5adf39ef074fac4cd" compoundref="vm___navigation_8cpp" startline="250" endline="258">VM_Navigation::EnteredAutoLand</referencedby>
        <referencedby refid="class_v_m___navigation_1a9234dc20303e05d9ef8ae8245194c949" compoundref="vm___navigation_8cpp" startline="148" endline="156">VM_Navigation::EnteredAutoLoiter</referencedby>
        <referencedby refid="class_v_m___navigation_1a59e38d155581f49b02607a527c0d35fa" compoundref="vm___navigation_8cpp" startline="165" endline="173">VM_Navigation::EnteredAutoReturnToLaunch</referencedby>
        <referencedby refid="class_v_m___navigation_1ae835334913baecd510c19b02ae728f43" compoundref="vm___navigation_8cpp" startline="233" endline="241">VM_Navigation::EnteredAutoTakeoff</referencedby>
        <referencedby refid="class_v_m___navigation_1a0d23c35b731387adf4c862876f26e637" compoundref="vm___navigation_8cpp" startline="99" endline="106">VM_Navigation::EnteredManual</referencedby>
        <referencedby refid="class_v_m___navigation_1ab86cd11821815cbd78635b1508b7c4e9" compoundref="vm___navigation_8cpp" startline="131" endline="139">VM_Navigation::EnteredPositionControl</referencedby>
        <referencedby refid="class_v_m___navigation_1ad63bff999b235f4f8b1b9965d21af833" compoundref="vm___navigation_8cpp" startline="216" endline="224">VM_Navigation::EnteredRattitude</referencedby>
        <referencedby refid="class_v_m___navigation_1a9400ae2e2059d6edfc778f77d2bcd1b6" compoundref="vm___navigation_8cpp" startline="199" endline="207">VM_Navigation::EnteredStabilize</referencedby>
        <referencedby refid="class_v_m___arming_1a96f7208c9a671c9e6d62f6a3fd99ad72" compoundref="vm___arming_8cpp" startline="103" endline="111">VM_Arming::EnteredStandby</referencedby>
        <referencedby refid="class_v_m___arming_1a584521ad4703b2cbe95857bf721c8ef6" compoundref="vm___arming_8cpp" startline="155" endline="161">VM_Arming::EnteredStandbyError</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m___arming_1a73bbcc225c37ead2a4b57a0f6b13eb0b" compoundref="vm___arming_8cpp" startline="83" endline="94">VM_Arming::Init</referencedby>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m___navigation_1a53917dd81954b9a3b261e29c729776ec" compoundref="vm___navigation_8cpp" startline="526" endline="549">VM_Navigation::IsTransitionAcrobaticValid</referencedby>
        <referencedby refid="class_v_m___navigation_1a3ef977ac33d15b97173cee4ef99aae03" compoundref="vm___navigation_8cpp" startline="464" endline="485">VM_Navigation::IsTransitionAltCtlValid</referencedby>
        <referencedby refid="class_v_m___navigation_1aa71f7ec0293dff0e61469c6b1d32cef8" compoundref="vm___navigation_8cpp" startline="494" endline="517">VM_Navigation::IsTransitionPosCtlValid</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_v_m_1ad10ee3ac2966766a0be9ea8fff6f30e8" compoundref="vm__app_8cpp" startline="1190" endline="1194">SendVehicleStatusMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" prot="public" static="no" mutable="no">
        <type>PX4_VehicleControlModeMsg_t</type>
        <definition>PX4_VehicleControlModeMsg_t VM::VehicleControlModeMsg</definition>
        <argsstring></argsstring>
        <name>VehicleControlModeMsg</name>
        <briefdescription>
<para>Vehicle control mode message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="197" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="197" bodyend="-1"/>
        <referencedby refid="class_v_m___navigation_1a3a86cc01ad0b6dc6196a15d61b4d2517" compoundref="vm___navigation_8cpp" startline="267" endline="403">VM_Navigation::DoAction</referencedby>
        <referencedby refid="class_v_m___arming_1a765120b9f6daa784e5defc811f8ca3e2" compoundref="vm___arming_8cpp" startline="120" endline="132">VM_Arming::EnteredArmed</referencedby>
        <referencedby refid="class_v_m___arming_1a96227a86bef3054b87be573f445d62a6" compoundref="vm___arming_8cpp" startline="141" endline="146">VM_Arming::ExitedArmed</referencedby>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_v_m_1a51c92f145854c6a05e3b36e4412a137c" compoundref="vm__app_8cpp" startline="1203" endline="1208">SendVehicleControlModeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" prot="public" static="no" mutable="no">
        <type><ref refid="class_v_m___arming" kindref="compound">VM_Arming</ref></type>
        <definition>VM_Arming VM::ArmingSM</definition>
        <argsstring></argsstring>
        <name>ArmingSM</name>
        <briefdescription>
<para>Arming state machine handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="200" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="200" bodyend="-1"/>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" compoundref="vm__app_8cpp" startline="2041" endline="2053">FlightSessionInit</referencedby>
        <referencedby refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" compoundref="vm__app_8cpp" startline="809" endline="1100">ProcessAppCmds</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" compoundref="vm__app_8cpp" startline="1109" endline="1116">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" prot="public" static="no" mutable="no">
        <type><ref refid="class_v_m___navigation" kindref="compound">VM_Navigation</ref></type>
        <definition>VM_Navigation VM::NavigationSM</definition>
        <argsstring></argsstring>
        <name>NavigationSM</name>
        <briefdescription>
<para>Navigation state machine handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="202" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="202" bodyend="-1"/>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" compoundref="vm__app_8cpp" startline="2041" endline="2053">FlightSessionInit</referencedby>
        <referencedby refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" compoundref="vm__app_8cpp" startline="809" endline="1100">ProcessAppCmds</referencedby>
        <referencedby refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" compoundref="vm__app_8cpp" startline="1890" endline="2032">RcModes</referencedby>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" compoundref="vm__app_8cpp" startline="1109" endline="1116">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" prot="public" static="no" mutable="no">
        <type><ref refid="struct_v_m___hk_tlm__t" kindref="compound">VM_HkTlm_t</ref></type>
        <definition>VM_HkTlm_t VM::HkTlm</definition>
        <argsstring></argsstring>
        <name>HkTlm</name>
        <briefdescription>
<para>Housekeeping Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="205" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="205" bodyend="-1"/>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m___navigation_1a967fd598668462dcdf088de64352eeba" compoundref="vm___navigation_8cpp" startline="636" endline="639">VM_Navigation::IsLocalPositionIsValid</referencedby>
        <referencedby refid="class_v_m___arming_1a616a59766c1ccc16468500faa880b13c" compoundref="vm___arming_8cpp" startline="218" endline="253">VM_Arming::PreFlightCheckCleared</referencedby>
        <referencedby refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" compoundref="vm__app_8cpp" startline="809" endline="1100">ProcessAppCmds</referencedby>
        <referencedby refid="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" compoundref="vm__app_8cpp" startline="578" endline="623">ProcessCmdPipe</referencedby>
        <referencedby refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</referencedby>
        <referencedby refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" compoundref="vm__app_8cpp" startline="1890" endline="2032">RcModes</referencedby>
        <referencedby refid="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" compoundref="vm__app_8cpp" startline="1109" endline="1116">ReportHousekeeping</referencedby>
        <referencedby refid="class_v_m_1a8f219068a34cb8b9cbfe5a241b5d3bfe" compoundref="vm__app_8cpp" startline="1230" endline="1254">VerifyCmdLength</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_v_m_1ab0f0a9caeb80ef3be738340867f6bdcd" prot="public" static="no" mutable="no">
        <type><ref refid="struct_v_m___config_tlm__t" kindref="compound">VM_ConfigTlm_t</ref></type>
        <definition>VM_ConfigTlm_t VM::ConfigTlm</definition>
        <argsstring></argsstring>
        <name>ConfigTlm</name>
        <briefdescription>
<para>Configuration Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="208" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="208" bodyend="-1"/>
        <referencedby refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</referencedby>
        <referencedby refid="class_v_m_1af97e3d991db9319a7435ef9481a276fb" compoundref="vm__app_8cpp" startline="2145" endline="2151">ReportConfiguration</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_v_m_1a3502d27cf6a670f277221e8e6ac8b869" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VM::VM</definition>
        <argsstring>()</argsstring>
        <name>VM</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="120" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1afd22a970a44757f4b53c8c77a8fa1e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VM::~VM</definition>
        <argsstring>()</argsstring>
        <name>~VM</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="122" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::AppMain</definition>
        <argsstring>(void)</argsstring>
        <name>AppMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager (<ref refid="class_v_m" kindref="compound">VM</ref>) application entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Vehicle Manager Task application entry point. This function performs app initialization, then waits for the cFE ES Startup Sync, then executes the main processing loop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If there is an unrecoverable failure during initialization the main loop is never executed and the application will exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="223" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1275" bodyend="1333"/>
        <references refid="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" compoundref="vm__config__utils_8cpp" startline="163" endline="205">AcquireConfigPointers</references>
        <references refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" compoundref="vm__app_8h" startline="200">ArmingSM</references>
        <references refid="cfe__es_8h_1abeabe0f94cccfa5bfcfc2f43796da8d1">CFE_ES_APP_ERROR</references>
        <references refid="cfe__es_8h_1a033dfcc82849cfb9a474a2cece5c9803">CFE_ES_APP_RUN</references>
        <references refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325">CFE_ES_ExitApp</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__es__api_8c_1a426ef8e1796ccebba16c63c8e86fb842">CFE_ES_RegisterApp</references>
        <references refid="cfe__es__api_8c_1ae8598bcba38a594d1c868924999da953">CFE_ES_RunLoop</references>
        <references refid="cfe__es__api_8c_1a7dc343ea775a0e5773ecdf700581d548">CFE_ES_WaitForStartupSync</references>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_v_m___arming_1accd94e1e4062fb7dca563a8c97674320" compoundref="vm___arming_8h" startline="216">VM_Arming::FSM</references>
        <references refid="class_v_m___navigation_1a4fd947ec06d2c682f41442a022dfe272" compoundref="vm___navigation_8h" startline="440">VM_Navigation::FSM</references>
        <references refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</references>
        <references refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</references>
        <references refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_v_m_1a96816f8e473702c9ea57a3d131a0efb6" compoundref="vm__app_8h" startline="135">uiRunStatus</references>
        <references refid="vm__perfids_8h_1aa35d97b1307768965d2cc30265205cd5" compoundref="vm__perfids_8h" startline="44">VM_MAIN_TASK_PERF_ID</references>
        <references refid="vm__platform__cfg_8h_1a1becee24b35d10d44f1be5f00325ad06" compoundref="vm__platform__cfg_8h" startline="82">VM_SCH_PIPE_PEND_TIME</references>
        <references refid="vm__platform__cfg_8h_1a5cc1b73cd34ceb9814caefb93e9f46cf" compoundref="vm__platform__cfg_8h" startline="145">VM_STARTUP_TIMEOUT_MSEC</references>
        <referencedby refid="vm__app_8cpp_1aeddbd5acf21ac4cbf9e3f40362a81447" compoundref="vm__app_8cpp" startline="1263" endline="1266">VM_AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitApp</definition>
        <argsstring>(void)</argsstring>
        <name>InitApp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Vehicle Manager (<ref refid="class_v_m" kindref="compound">VM</ref>) application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Vehicle Manager application initialization routine. This function performs all the required startup steps to initialize (or restore from CDS) <ref refid="class_v_m" kindref="compound">VM</ref> data structures and get the application registered with the cFE services so it can begin to receive command messages and send events.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_ES_RegisterApp</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitEvent  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitPipe  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitData  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_InitConfigTbl  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">OS_TaskInstallDeleteHandler</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="249" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="413" bodyend="474"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_caution_warning_helper_1a10e34b2fce30c4a3f4c665bcc72c3de2" compoundref="_caution_warning_helper_8cpp" startline="67" endline="78">CautionWarningHelper::InitCAWS</references>
        <references refid="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" compoundref="vm__config__utils_8cpp" startline="48" endline="86">InitConfigTbl</references>
        <references refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" compoundref="vm__app_8cpp" startline="387" endline="404">InitData</references>
        <references refid="class_v_m_1af03d761dd6b90e2c18294158bf9e9221" compoundref="vm__app_8cpp" startline="89" endline="102">InitEvent</references>
        <references refid="class_v_m_1aaa46c2c4ffbf8fa240902053672f7f9e" compoundref="vm__app_8cpp" startline="2160" endline="2179">InitParams</references>
        <references refid="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" compoundref="vm__app_8cpp" startline="111" endline="378">InitPipe</references>
        <references refid="class_v_m_1ab095a387a372af757908d62ddf03e749" compoundref="vm__app_8h" startline="143">m_caws</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a6150b9ca7bb8b3b54372567b3aac149e" compoundref="vm__events_8h" startline="74">VM_INIT_INF_EID</references>
        <references refid="vm__version_8h_1a1ef1d2f10387d131d90fe95d7c011b57" compoundref="vm__version_8h" startline="53">VM_MAJOR_VERSION</references>
        <references refid="vm__version_8h_1a0870e8f296cd7432d3985fa6a5810487" compoundref="vm__version_8h" startline="67">VM_MINOR_VERSION</references>
        <references refid="vm__platform__cfg_8h_1a2627cc7ab4413179e4fa23f88ac71155" compoundref="vm__platform__cfg_8h" startline="58">VM_MISSION_REV</references>
        <references refid="vm__version_8h_1aa1be10a3badf8bd5c54fcc80df82773d" compoundref="vm__version_8h" startline="81">VM_REVISION</references>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aaa46c2c4ffbf8fa240902053672f7f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitParams</definition>
        <argsstring>(void)</argsstring>
        <name>InitParams</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize named parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function registers named parameters and prepares the object to respond to updates in named parameters.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from #ParamsConsumer::InitParams  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="267" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2160" bodyend="2179"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="vm__params_8hpp_1ac383ec29eed8a7080f020aa36c18c519" compoundref="vm__params_8hpp" startline="1">ParamRegistrations</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a4256036010d2d36914562c91bf9db8f1" compoundref="vm__events_8h" startline="891">VM_PARAM_INIT_ERR_EID</references>
        <referencedby refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af03d761dd6b90e2c18294158bf9e9221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitEvent</definition>
        <argsstring>(void)</argsstring>
        <name>InitEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Event Services and Event tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup cFE Event Services for use by the <ref refid="class_v_m" kindref="compound">VM</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__evs_8h_1aff6913e2ab9a37ae699382c482fdb786" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_EVS_Register</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="285" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="89" bodyend="102"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9c74cb368c56aff83d050a4807132460">CFE_EVS_BINARY_FILTER</references>
        <references refid="cfe__evs_8c_1a991c19d964b501bf0908bb60812fda28">CFE_EVS_Register</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <referencedby refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::InitData</definition>
        <argsstring>(void)</argsstring>
        <name>InitData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize global variables used by <ref refid="class_v_m" kindref="compound">VM</ref> application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to initialize the <ref refid="class_v_m" kindref="compound">VM</ref> application data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="298" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="387" bodyend="404"/>
        <references refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" compoundref="vm__app_8h" startline="185">ActuatorArmedMsg</references>
        <references refid="cfe__sb_8h_1a67765875dfff1d3d6d7cbc4a7ae2f8f0">CFE_SB_InitMsg</references>
        <references refid="class_v_m_1ab0f0a9caeb80ef3be738340867f6bdcd" compoundref="vm__app_8h" startline="208">ConfigTlm</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" compoundref="vm__app_8h" startline="187">HomePositionMsg</references>
        <references refid="class_v_m_1a53f79370d94268734e2763b3a7502a71" compoundref="vm__app_8h" startline="193">LedControlMsg</references>
        <references refid="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" compoundref="vm__app_8h" startline="191">MissionMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_v_m_1afcd15ef142b0a0ac7f6e800d2813eac4" compoundref="vm__app_8h" startline="177">VehicleCommandMsg</references>
        <references refid="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" compoundref="vm__app_8h" startline="197">VehicleControlModeMsg</references>
        <references refid="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" compoundref="vm__app_8h" startline="189">VehicleManagerStateMsg</references>
        <references refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" compoundref="vm__app_8h" startline="195">VehicleStatusMsg</references>
        <references refid="vm__msgids_8h_1adbc2672e6f92e159845a356b8021b12f" compoundref="vm__msgids_8h" startline="53">VM_CONFIG_TLM_MID</references>
        <references refid="vm__msgids_8h_1a986fae31b019c802ba3eb12291d80dd2" compoundref="vm__msgids_8h" startline="52">VM_HK_TLM_MID</references>
        <referencedby refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_v_m" kindref="compound">VM</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="319" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="111" bodyend="378"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1afc2c2db1a504f544b430f33f28be769b">CFE_SB_Subscribe</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_v_m_1a76b3179c5edb56bfeb1fb6c4ff55af64" compoundref="vm__app_8h" startline="128">CmdPipeId</references>
        <references refid="class_v_m_1a399c96da46dac8677e59129b6230d9eb" compoundref="vm__app_8h" startline="131">DataPipeId</references>
        <references refid="class_v_m_1a4dda712bacee61943d3dbee8d43f4615" compoundref="vm__app_8h" startline="125">SchPipeId</references>
        <references refid="vm__msgids_8h_1a3bbae810c1a70fb8e3d2ef19158510ae" compoundref="vm__msgids_8h" startline="44">VM_CMD_MID</references>
        <references refid="vm__platform__cfg_8h_1a13a0a1e3a5357b78bd379b02cab4e238" compoundref="vm__platform__cfg_8h" startline="107">VM_CMD_PIPE_DEPTH</references>
        <references refid="vm__platform__cfg_8h_1a1ae1e2ec3e00aac60bb9827371d0b0da" compoundref="vm__platform__cfg_8h" startline="114">VM_CMD_PIPE_NAME</references>
        <references refid="vm__app_8h_1a83d9e91ded0ece353e437ea9decac39f" compoundref="vm__app_8h" startline="84">VM_DATA_PIPE_DEPTH</references>
        <references refid="vm__app_8h_1a4eb81398d3b439266659d1a5cafb6e9b" compoundref="vm__app_8h" startline="91">VM_DATA_PIPE_NAME</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a24e6e57e259f315a55501571741eb48e" compoundref="vm__events_8h" startline="130">VM_PIPE_INIT_ERR_EID</references>
        <references refid="vm__platform__cfg_8h_1a133eacbddd3ca6742dfc2e50e42741b1" compoundref="vm__platform__cfg_8h" startline="65">VM_SCH_PIPE_DEPTH</references>
        <references refid="vm__platform__cfg_8h_1af0871ee35ff149975837feaa6d5cb548" compoundref="vm__platform__cfg_8h" startline="72">VM_SCH_PIPE_NAME</references>
        <references refid="vm__msgids_8h_1a71bf2e2ce7348f7c2f0a84f826ad05d9" compoundref="vm__msgids_8h" startline="45">VM_SEND_HK_MID</references>
        <references refid="vm__platform__cfg_8h_1a4bbbe08fb59ce2ec86893a79bd64935e" compoundref="vm__platform__cfg_8h" startline="100">VM_SEND_HK_MID_MAX_MSG_COUNT</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a8e4fbff210009d0379cfac4ed30a85d7" compoundref="vm__events_8h" startline="114">VM_SUBSCRIBE_ERR_EID</references>
        <references refid="vm__msgids_8h_1af0a99b87db042e1a154ee0bd16c135e7" compoundref="vm__msgids_8h" startline="46">VM_WAKEUP_MID</references>
        <references refid="vm__platform__cfg_8h_1ad4acba740dcde965d0076a623bef4bd2" compoundref="vm__platform__cfg_8h" startline="91">VM_WAKEUP_MID_MAX_MSG_COUNT</references>
        <referencedby refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::RcvSchPipeMsg</definition>
        <argsstring>(int32 iBlocking)</argsstring>
        <name>RcvSchPipeMsg</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>iBlocking</declname>
        </param>
        <briefdescription>
<para>Receive and process messages from the scheduler pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function receives and processes messages for the <ref refid="class_v_m" kindref="compound">VM</ref> application from the SCH pipe. This function will pend for the type defined by iBlocking, allowing it to wait for messages, i.e. wakeup messages from scheduler.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iBlocking</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1acc9e6f66cd026d1c987c4c3de827366f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PEND_FOREVER</ref>, <ref refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_POLL</ref> or millisecond timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_RcvMsg</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="342" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="483" bodyend="569"/>
        <references refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" compoundref="vm__app_8h" startline="185">ActuatorArmedMsg</references>
        <references refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" compoundref="vm__app_8h" startline="200">ArmingSM</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1a68b8b8ed93cecb670c945388a797e970">CFE_SB_TIME_OUT</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_v_m___arming_1a62ff0907b2f369c7c77d4c8c004a79d4" compoundref="vm___arming_8cpp" startline="185" endline="209">VM_Arming::DoAction</references>
        <references refid="class_v_m___navigation_1a3a86cc01ad0b6dc6196a15d61b4d2517" compoundref="vm___navigation_8cpp" startline="267" endline="403">VM_Navigation::DoAction</references>
        <references refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</references>
        <references refid="class_v_m_1ab095a387a372af757908d62ddf03e749" compoundref="vm__app_8h" startline="143">m_caws</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" compoundref="vm__app_8cpp" startline="578" endline="623">ProcessCmdPipe</references>
        <references refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" compoundref="vm__app_8cpp" startline="632" endline="800">ProcessDataPipe</references>
        <references refid="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" compoundref="vm__app_8cpp" startline="1109" endline="1116">ReportHousekeeping</references>
        <references refid="class_v_m_1a4dda712bacee61943d3dbee8d43f4615" compoundref="vm__app_8h" startline="125">SchPipeId</references>
        <references refid="class_v_m_1a51c92f145854c6a05e3b36e4412a137c" compoundref="vm__app_8cpp" startline="1203" endline="1208">SendVehicleControlModeMsg</references>
        <references refid="class_v_m_1a21d79320551169eaf71258d5b8a46c33" compoundref="vm__app_8cpp" startline="1151" endline="1155">SendVehicleManagerStateMsg</references>
        <references refid="class_caution_warning_helper_1a33dc664dcf004dc2541a8c8cb422f3ec" compoundref="_caution_warning_helper_8cpp" startline="241" endline="448">CautionWarningHelper::SetStatus</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" compoundref="vm__app_8h" startline="197">VehicleControlModeMsg</references>
        <references refid="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" compoundref="vm__app_8h" startline="189">VehicleManagerStateMsg</references>
        <references refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" compoundref="vm__app_8h" startline="195">VehicleStatusMsg</references>
        <references refid="vm__perfids_8h_1aa35d97b1307768965d2cc30265205cd5" compoundref="vm__perfids_8h" startline="44">VM_MAIN_TASK_PERF_ID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a0bb039dd807f644ffa524c46f0baa422" compoundref="vm__events_8h" startline="200">VM_MSGID_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930ae3817e63426c6dd53dee1249a5d0408b" compoundref="vm__events_8h" startline="185">VM_RCVMSG_ERR_EID</references>
        <references refid="vm__msgids_8h_1a71bf2e2ce7348f7c2f0a84f826ad05d9" compoundref="vm__msgids_8h" startline="45">VM_SEND_HK_MID</references>
        <references refid="vm__msgids_8h_1af0a99b87db042e1a154ee0bd16c135e7" compoundref="vm__msgids_8h" startline="46">VM_WAKEUP_MID</references>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessDataPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessDataPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process incoming data messages. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming data messages subscribed by <ref refid="class_v_m" kindref="compound">VM</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="355" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="632" bodyend="800"/>
        <references refid="class_v_m_1aac3829d769b1c158ed93bc41c5f2e610" compoundref="vm__app_8h" startline="151">BatteryStatusMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a102ee0286076f7570793e2c68378712f" compoundref="vm__msg_8h" startline="752">VM_HkTlm_t::BatteryStatusMsgCount</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_v_m_1a399c96da46dac8677e59129b6230d9eb" compoundref="vm__app_8h" startline="131">DataPipeId</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" compoundref="vm__app_8h" startline="165">ManualControlSetpointMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a0bb0b9abbd01e596cc18c3197c573d0a" compoundref="vm__msg_8h" startline="773">VM_HkTlm_t::ManualControlSetpointMsgCount</references>
        <references refid="class_v_m_1a7e7b5fd02128f88d9e34f55cbc3d8cdb" compoundref="vm__app_8h" startline="163">MissionResultMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a761d38b447f86ce0bb95d802f8d038b7" compoundref="vm__msg_8h" startline="770">VM_HkTlm_t::MissionResultMsgCount</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_v_m_1aa485c303dcc3d70ba0a52898b649ecfd" compoundref="vm__app_8h" startline="167">PositionSetpointTripletMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1af6b132ea5a07956505c57b6e5a49432c" compoundref="vm__msg_8h" startline="776">VM_HkTlm_t::PositionSetpointTripletMsgCount</references>
        <references refid="class_v_m_1a046082c5e178827f43d592935619c681" compoundref="vm__app_8h" startline="171">SafetyMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a9b954a311a8d943e8ad46c603ba24d86" compoundref="vm__msg_8h" startline="782">VM_HkTlm_t::SafetyMsgCount</references>
        <references refid="class_v_m_1a62f5965564d193031a73df3a63515767" compoundref="vm__app_8h" startline="169">SensorAccelMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a9720a1d9e0da5a1f7dc0c83fd04810b2" compoundref="vm__msg_8h" startline="779">VM_HkTlm_t::SensorAccelMsgCount</references>
        <references refid="class_v_m_1ac1dbcc4bb47165cfa686860ebe464eff" compoundref="vm__app_8h" startline="175">SensorCombinedMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1af15112fd67f96c95cb4b95e35bd8606f" compoundref="vm__msg_8h" startline="788">VM_HkTlm_t::SensorCombinedMsgCount</references>
        <references refid="class_v_m_1afd67df4b4fe797695e48208d569125d9" compoundref="vm__app_8h" startline="173">SensorCorrectionMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a3a51e806ac820a8cbf2830b32b8a4919" compoundref="vm__msg_8h" startline="785">VM_HkTlm_t::SensorCorrectionMsgCount</references>
        <references refid="class_v_m_1ad5719da53147146863d1e15f189118fc" compoundref="vm__app_8h" startline="149">SensorGyroMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a34125d548bcec5f50a95b8de8c3c8d76" compoundref="vm__msg_8h" startline="749">VM_HkTlm_t::SensorGyroMsgCount</references>
        <references refid="class_v_m_1ada27d75c7daa3fef2027f433f955471e" compoundref="vm__app_8h" startline="147">SensorMagMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1ad59de4c52ce850729bd446cfae90bd1b" compoundref="vm__msg_8h" startline="746">VM_HkTlm_t::SensorMagMsgCount</references>
        <references refid="class_v_m_1ad0d57a422189b4bec553b1dd9b5333cd" compoundref="vm__app_8h" startline="155">SubsystemInfoMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1ab3c8a5efa47557eda1149ae5edfbcb1f" compoundref="vm__msg_8h" startline="758">VM_HkTlm_t::SubsystemInfoMsgCount</references>
        <references refid="class_v_m_1af222349536e984bfc3ae835bbf1490c0" compoundref="vm__app_8h" startline="153">TelemetryStatusMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a05fbb956d3aa55fac0af0655afa9278d" compoundref="vm__msg_8h" startline="755">VM_HkTlm_t::TelemetryStatusMsgCount</references>
        <references refid="class_v_m_1aa0727b35c392b4da880700f496c11b93" compoundref="vm__app_8h" startline="157">VehicleAttitudeMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a07a09e1359ba3b5e843c52833631e74c" compoundref="vm__msg_8h" startline="761">VM_HkTlm_t::VehicleAttitudeMsgCount</references>
        <references refid="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" compoundref="vm__app_8h" startline="197">VehicleControlModeMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1ac07f4704499640998943fb3462187738" compoundref="vm__msg_8h" startline="803">VM_HkTlm_t::VehicleControlModeMsgCount</references>
        <references refid="class_v_m_1a5062611ba3bc6f7ba3ca3f9fa5ab83ad" compoundref="vm__app_8h" startline="179">VehicleGlobalPositionMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1aac66a63397082aa36449bec7bc0f3eef" compoundref="vm__msg_8h" startline="794">VM_HkTlm_t::VehicleGlobalPositionMsgCount</references>
        <references refid="class_v_m_1a74414678084bd6a7a707f4a81bfe5a38" compoundref="vm__app_8h" startline="181">VehicleGpsPositionMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1ab8ef9174960eecba93e57c22181d581f" compoundref="vm__msg_8h" startline="797">VM_HkTlm_t::VehicleGpsPositionMsgCount</references>
        <references refid="class_v_m_1a95dde4ee20a78a080f15ca536b3b53b5" compoundref="vm__app_8h" startline="161">VehicleLandDetectedMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a65568a409cbd86d1bdbee9c55ecbed71" compoundref="vm__msg_8h" startline="767">VM_HkTlm_t::VehicleLandDetectedMsgCount</references>
        <references refid="class_v_m_1a59a819087efb4519dd772eebc96e81af" compoundref="vm__app_8h" startline="159">VehicleLocalPositionMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a9f7ba22496188290c24f86e47e9af536" compoundref="vm__msg_8h" startline="764">VM_HkTlm_t::VehicleLocalPositionMsgCount</references>
        <references refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" compoundref="vm__app_8h" startline="195">VehicleStatusMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1a9c7ff6b42d6c0a908268ce72bb4a777c" compoundref="vm__msg_8h" startline="800">VM_HkTlm_t::VehicleStatusMsgCount</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a0bb039dd807f644ffa524c46f0baa422" compoundref="vm__events_8h" startline="200">VM_MSGID_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930ae3817e63426c6dd53dee1249a5d0408b" compoundref="vm__events_8h" startline="185">VM_RCVMSG_ERR_EID</references>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager Task incoming command processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming commands subscribed by <ref refid="class_v_m" kindref="compound">VM</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="368" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="578" bodyend="623"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_v_m_1a76b3179c5edb56bfeb1fb6c4ff55af64" compoundref="vm__app_8h" startline="128">CmdPipeId</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" compoundref="vm__app_8cpp" startline="809" endline="1100">ProcessAppCmds</references>
        <references refid="struct_v_m___hk_tlm__t_1a155c404a59432cf02bec989795debfb9" compoundref="vm__msg_8h" startline="732">VM_HkTlm_t::usCmdErrCnt</references>
        <references refid="vm__msgids_8h_1a3bbae810c1a70fb8e3d2ef19158510ae" compoundref="vm__msgids_8h" startline="44">VM_CMD_MID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a0bb039dd807f644ffa524c46f0baa422" compoundref="vm__events_8h" startline="200">VM_MSGID_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930ae3817e63426c6dd53dee1249a5d0408b" compoundref="vm__events_8h" startline="185">VM_RCVMSG_ERR_EID</references>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessAppCmds</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr)</argsstring>
        <name>ProcessAppCmds</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Vehicle Manager Task application commands. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes command messages specific to the <ref refid="class_v_m" kindref="compound">VM</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="384" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="809" bodyend="1100"/>
        <references refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" compoundref="vm__app_8h" startline="200">ArmingSM</references>
        <references refid="struct_v_m___hk_tlm__t_1a102ee0286076f7570793e2c68378712f" compoundref="vm__msg_8h" startline="752">VM_HkTlm_t::BatteryStatusMsgCount</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="class_v_m___arming_1accd94e1e4062fb7dca563a8c97674320" compoundref="vm___arming_8h" startline="216">VM_Arming::FSM</references>
        <references refid="class_v_m___navigation_1a4fd947ec06d2c682f41442a022dfe272" compoundref="vm___navigation_8h" startline="440">VM_Navigation::FSM</references>
        <references refid="class_v_m___navigation_1aa3e57f90d29ed5a55eb4da873e8f3ebb" compoundref="vm___navigation_8cpp" startline="85" endline="90">VM_Navigation::GetCurrentStateID</references>
        <references refid="class_v_m_1a240856859a523f7376479129e9aa15a3" compoundref="vm__app_8cpp" startline="2062" endline="2136">GetNavStateAsString</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="struct_v_m___hk_tlm__t_1a0bb0b9abbd01e596cc18c3197c573d0a" compoundref="vm__msg_8h" startline="773">VM_HkTlm_t::ManualControlSetpointMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a761d38b447f86ce0bb95d802f8d038b7" compoundref="vm__msg_8h" startline="770">VM_HkTlm_t::MissionResultMsgCount</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="struct_v_m___hk_tlm__t_1af6b132ea5a07956505c57b6e5a49432c" compoundref="vm__msg_8h" startline="776">VM_HkTlm_t::PositionSetpointTripletMsgCount</references>
        <references refid="class_v_m_1af97e3d991db9319a7435ef9481a276fb" compoundref="vm__app_8cpp" startline="2145" endline="2151">ReportConfiguration</references>
        <references refid="struct_v_m___hk_tlm__t_1a9b954a311a8d943e8ad46c603ba24d86" compoundref="vm__msg_8h" startline="782">VM_HkTlm_t::SafetyMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a9720a1d9e0da5a1f7dc0c83fd04810b2" compoundref="vm__msg_8h" startline="779">VM_HkTlm_t::SensorAccelMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1af15112fd67f96c95cb4b95e35bd8606f" compoundref="vm__msg_8h" startline="788">VM_HkTlm_t::SensorCombinedMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a3a51e806ac820a8cbf2830b32b8a4919" compoundref="vm__msg_8h" startline="785">VM_HkTlm_t::SensorCorrectionMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a34125d548bcec5f50a95b8de8c3c8d76" compoundref="vm__msg_8h" startline="749">VM_HkTlm_t::SensorGyroMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1ad59de4c52ce850729bd446cfae90bd1b" compoundref="vm__msg_8h" startline="746">VM_HkTlm_t::SensorMagMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1ab3c8a5efa47557eda1149ae5edfbcb1f" compoundref="vm__msg_8h" startline="758">VM_HkTlm_t::SubsystemInfoMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a05fbb956d3aa55fac0af0655afa9278d" compoundref="vm__msg_8h" startline="755">VM_HkTlm_t::TelemetryStatusMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1aa9b09310d5b5bc772152616a8a16688f" compoundref="vm__msg_8h" startline="728">VM_HkTlm_t::usCmdCnt</references>
        <references refid="struct_v_m___hk_tlm__t_1a155c404a59432cf02bec989795debfb9" compoundref="vm__msg_8h" startline="732">VM_HkTlm_t::usCmdErrCnt</references>
        <references refid="struct_v_m___hk_tlm__t_1a07a09e1359ba3b5e843c52833631e74c" compoundref="vm__msg_8h" startline="761">VM_HkTlm_t::VehicleAttitudeMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1aa4457de76d0c4ebf6bce5d9a751e70ce" compoundref="vm__msg_8h" startline="791">VM_HkTlm_t::VehicleCommandMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1ac07f4704499640998943fb3462187738" compoundref="vm__msg_8h" startline="803">VM_HkTlm_t::VehicleControlModeMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1aac66a63397082aa36449bec7bc0f3eef" compoundref="vm__msg_8h" startline="794">VM_HkTlm_t::VehicleGlobalPositionMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1ab8ef9174960eecba93e57c22181d581f" compoundref="vm__msg_8h" startline="797">VM_HkTlm_t::VehicleGpsPositionMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a65568a409cbd86d1bdbee9c55ecbed71" compoundref="vm__msg_8h" startline="767">VM_HkTlm_t::VehicleLandDetectedMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a9f7ba22496188290c24f86e47e9af536" compoundref="vm__msg_8h" startline="764">VM_HkTlm_t::VehicleLocalPositionMsgCount</references>
        <references refid="struct_v_m___hk_tlm__t_1a9c7ff6b42d6c0a908268ce72bb4a777c" compoundref="vm__msg_8h" startline="800">VM_HkTlm_t::VehicleStatusMsgCount</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930aee5feb039356c31e291141fe53fdcacf" compoundref="vm__events_8h" startline="278">VM_ARMING_ILLEGAL_TRANSITION_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a514a85dbf435b098b40ab95d0ddcf98d" compoundref="vm__events_8h" startline="214">VM_CC_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a60cd48422496b309b19a0b5c13025286" compoundref="vm__events_8h" startline="97">VM_CMD_NOOP_EID</references>
        <references refid="vm__version_8h_1a1ef1d2f10387d131d90fe95d7c011b57" compoundref="vm__version_8h" startline="53">VM_MAJOR_VERSION</references>
        <references refid="vm__version_8h_1a0870e8f296cd7432d3985fa6a5810487" compoundref="vm__version_8h" startline="67">VM_MINOR_VERSION</references>
        <references refid="vm__platform__cfg_8h_1a2627cc7ab4413179e4fa23f88ac71155" compoundref="vm__platform__cfg_8h" startline="58">VM_MISSION_REV</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a9df3cd9b77a02fcaed58ec8991418289" compoundref="vm__events_8h" startline="291">VM_NAV_ILLEGAL_TRANSITION_ERR_EID</references>
        <references refid="vm__msg_8h_1a9107f4089debe7db8b0c40308067d03e" compoundref="vm__msg_8h" startline="90">VM_NOOP_CC</references>
        <references refid="vm__msg_8h_1aac490963e9e06227a2a613e23a505cce" compoundref="vm__msg_8h" startline="123">VM_RESET_CC</references>
        <references refid="vm__version_8h_1aa1be10a3badf8bd5c54fcc80df82773d" compoundref="vm__version_8h" startline="81">VM_REVISION</references>
        <references refid="vm__msg_8h_1a5e2d372ec8eae338e795acae746e9694" compoundref="vm__msg_8h" startline="619">VM_SEND_CONFIGURATION_CC</references>
        <references refid="vm__msg_8h_1a917fcd33195811217b800079fbbeea24" compoundref="vm__msg_8h" startline="435">VM_SET_NAV_ACRO_CC</references>
        <references refid="vm__msg_8h_1aaba0ed3078215811fa981444331c7a5e" compoundref="vm__msg_8h" startline="271">VM_SET_NAV_ALTCTL_CC</references>
        <references refid="vm__msg_8h_1a9764759c49c0a801e8e710960823a2b6" compoundref="vm__msg_8h" startline="593">VM_SET_NAV_AUTO_LAND_CC</references>
        <references refid="vm__msg_8h_1af7502aace2c6d6297fbfa79dcfa4f754" compoundref="vm__msg_8h" startline="353">VM_SET_NAV_AUTO_LOITER_CC</references>
        <references refid="vm__msg_8h_1aa70462cc0c6b972683b365c1215a7b77" compoundref="vm__msg_8h" startline="394">VM_SET_NAV_AUTO_RTL_CC</references>
        <references refid="vm__msg_8h_1a7e3916e01f5bd353939a30a5ed0f433b" compoundref="vm__msg_8h" startline="558">VM_SET_NAV_AUTO_TAKEOFF_CC</references>
        <references refid="vm__msg_8h_1abbfb74a052ad8d88e07e55ef4b5f6414" compoundref="vm__msg_8h" startline="230">VM_SET_NAV_MANUAL_CC</references>
        <references refid="vm__msg_8h_1adfc837fa6ff717d3d8ed127d3b08fecc" compoundref="vm__msg_8h" startline="312">VM_SET_NAV_POSCTL_CC</references>
        <references refid="vm__msg_8h_1a5641cfba5cc1f6ec3f4a2c6525c3275b" compoundref="vm__msg_8h" startline="517">VM_SET_NAV_RATTITUDE_CC</references>
        <references refid="vm__msg_8h_1a96e7d77a4c5c0c974e0c7b6016d24fb3" compoundref="vm__msg_8h" startline="476">VM_SET_NAV_STABILIZE_CC</references>
        <references refid="vm__msg_8h_1a5ab45a5d24ae30697c402deb26ce75dd" compoundref="vm__msg_8h" startline="156">VM_VEHICLE_ARM_CC</references>
        <references refid="vm__msg_8h_1a6e259721f136091d8c0137396bc41050" compoundref="vm__msg_8h" startline="189">VM_VEHICLE_DISARM_CC</references>
        <references refid="struct_v_m___hk_tlm__t_1af8f033f54a4c33c67a78e3f6570bdadf" compoundref="vm__msg_8h" startline="743">VM_HkTlm_t::WakeupCount</references>
        <referencedby refid="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" compoundref="vm__app_8cpp" startline="578" endline="623">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ReportHousekeeping</definition>
        <argsstring>(void)</argsstring>
        <name>ReportHousekeeping</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_v_m" kindref="compound">VM</ref> housekeeping message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the housekeeping message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="396" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1109" bodyend="1116"/>
        <references refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" compoundref="vm__app_8h" startline="200">ArmingSM</references>
        <references refid="struct_v_m___hk_tlm__t_1a1df000e2adb6cf71df52e0e4cb955d4d" compoundref="vm__msg_8h" startline="736">VM_HkTlm_t::ArmingState</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m___arming_1a27ddd0639301a34223d2510fc453a9bd" compoundref="vm___arming_8cpp" startline="71" endline="74">VM_Arming::GetCurrentStateID</references>
        <references refid="class_v_m___navigation_1aa3e57f90d29ed5a55eb4da873e8f3ebb" compoundref="vm___navigation_8cpp" startline="85" endline="90">VM_Navigation::GetCurrentStateID</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="struct_v_m___hk_tlm__t_1ad93489164c8d6a3a5092869d8c8dba1b" compoundref="vm__msg_8h" startline="740">VM_HkTlm_t::NavState</references>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a32560bba908e54366252101cfae82f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendActuatorArmedMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendActuatorArmedMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the ActuatorArmedMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the ActuatorArmedMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="409" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1125" bodyend="1129"/>
        <references refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" compoundref="vm__app_8h" startline="185">ActuatorArmedMsg</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <referencedby refid="class_v_m___arming_1a62ff0907b2f369c7c77d4c8c004a79d4" compoundref="vm___arming_8cpp" startline="185" endline="209">VM_Arming::DoAction</referencedby>
        <referencedby refid="class_v_m___arming_1a765120b9f6daa784e5defc811f8ca3e2" compoundref="vm___arming_8cpp" startline="120" endline="132">VM_Arming::EnteredArmed</referencedby>
        <referencedby refid="class_v_m___arming_1ab0f6feadf222701e195a849e9fd4816b" compoundref="vm___arming_8cpp" startline="170" endline="176">VM_Arming::EnteredArmedError</referencedby>
        <referencedby refid="class_v_m___arming_1a584521ad4703b2cbe95857bf721c8ef6" compoundref="vm___arming_8cpp" startline="155" endline="161">VM_Arming::EnteredStandbyError</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m___arming_1a96227a86bef3054b87be573f445d62a6" compoundref="vm___arming_8cpp" startline="141" endline="146">VM_Arming::ExitedArmed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae228c2b2cd5e4f5b25d5c653e26ed477" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendHomePositionMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendHomePositionMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the HomePositionMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the HomePositionMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="422" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1138" bodyend="1142"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" compoundref="vm__app_8h" startline="187">HomePositionMsg</references>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a21d79320551169eaf71258d5b8a46c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleManagerStateMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleManagerStateMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleManagerStateMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleManagerStateMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="435" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1151" bodyend="1155"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" compoundref="vm__app_8h" startline="189">VehicleManagerStateMsg</references>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aae21282ba6f2d4c6fc99131c5faf4ea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendMissionMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendMissionMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the MissionMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the MissionMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="448" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1164" bodyend="1168"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" compoundref="vm__app_8h" startline="191">MissionMsg</references>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a371db313e8a508c1bd2c79af53a29b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendLedControlMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendLedControlMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the LedControlMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the LedControlMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="461" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1177" bodyend="1181"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1a53f79370d94268734e2763b3a7502a71" compoundref="vm__app_8h" startline="193">LedControlMsg</references>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ad10ee3ac2966766a0be9ea8fff6f30e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleStatusMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleStatusMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleStatusMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleStatusMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="474" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1190" bodyend="1194"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" compoundref="vm__app_8h" startline="195">VehicleStatusMsg</references>
        <referencedby refid="class_v_m___navigation_1a02ee1cd7a3c1bdc67ba9c7b58e867214" compoundref="vm___navigation_8cpp" startline="182" endline="190">VM_Navigation::EnteredAcrobatic</referencedby>
        <referencedby refid="class_v_m___navigation_1a4ac22b983d887617274319cb138ce55d" compoundref="vm___navigation_8cpp" startline="115" endline="122">VM_Navigation::EnteredAltitudeControl</referencedby>
        <referencedby refid="class_v_m___arming_1a765120b9f6daa784e5defc811f8ca3e2" compoundref="vm___arming_8cpp" startline="120" endline="132">VM_Arming::EnteredArmed</referencedby>
        <referencedby refid="class_v_m___navigation_1a7dbd13733dd902a5adf39ef074fac4cd" compoundref="vm___navigation_8cpp" startline="250" endline="258">VM_Navigation::EnteredAutoLand</referencedby>
        <referencedby refid="class_v_m___navigation_1a9234dc20303e05d9ef8ae8245194c949" compoundref="vm___navigation_8cpp" startline="148" endline="156">VM_Navigation::EnteredAutoLoiter</referencedby>
        <referencedby refid="class_v_m___navigation_1a59e38d155581f49b02607a527c0d35fa" compoundref="vm___navigation_8cpp" startline="165" endline="173">VM_Navigation::EnteredAutoReturnToLaunch</referencedby>
        <referencedby refid="class_v_m___navigation_1ae835334913baecd510c19b02ae728f43" compoundref="vm___navigation_8cpp" startline="233" endline="241">VM_Navigation::EnteredAutoTakeoff</referencedby>
        <referencedby refid="class_v_m___navigation_1a0d23c35b731387adf4c862876f26e637" compoundref="vm___navigation_8cpp" startline="99" endline="106">VM_Navigation::EnteredManual</referencedby>
        <referencedby refid="class_v_m___navigation_1ab86cd11821815cbd78635b1508b7c4e9" compoundref="vm___navigation_8cpp" startline="131" endline="139">VM_Navigation::EnteredPositionControl</referencedby>
        <referencedby refid="class_v_m___navigation_1ad63bff999b235f4f8b1b9965d21af833" compoundref="vm___navigation_8cpp" startline="216" endline="224">VM_Navigation::EnteredRattitude</referencedby>
        <referencedby refid="class_v_m___navigation_1a9400ae2e2059d6edfc778f77d2bcd1b6" compoundref="vm___navigation_8cpp" startline="199" endline="207">VM_Navigation::EnteredStabilize</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a51c92f145854c6a05e3b36e4412a137c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleControlModeMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleControlModeMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleControlModeMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleControlModeMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="487" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1203" bodyend="1208"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" compoundref="vm__app_8h" startline="197">VehicleControlModeMsg</references>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a67a94fbe567f2a7c4fa21209bfc6b0df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SendVehicleCommandMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleCommandMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleCommandMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleCommandMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="500" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1217" bodyend="1221"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_v_m_1afcd15ef142b0a0ac7f6e800d2813eac4" compoundref="vm__app_8h" startline="177">VehicleCommandMsg</references>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a8f219068a34cb8b9cbfe5a241b5d3bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean VM::VerifyCmdLength</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr, uint16 usExpectedLen)</argsstring>
        <name>VerifyCmdLength</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>usExpectedLen</declname>
        </param>
        <briefdescription>
<para>Verify Command Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function verifies the command message length.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usExpectedLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected length of the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the message length matches expectations, FALSE if it does not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="520" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1230" bodyend="1254"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1ac32b86cf9e1d12a547792853c35f6aa1">CFE_SB_GetTotalMsgLength</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_v_m___hk_tlm__t_1a155c404a59432cf02bec989795debfb9" compoundref="vm__msg_8h" startline="732">VM_HkTlm_t::usCmdErrCnt</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930abcfe8a5f86ae223463c36b0df092140e" compoundref="vm__events_8h" startline="231">VM_MSGLEN_ERR_EID</references>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a19b757557b713ed378d352ef8875a62f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 VM::TimeElapsed</definition>
        <argsstring>(uint64 *TimePtr)</argsstring>
        <name>TimeElapsed</name>
        <param>
          <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref> *</type>
          <declname>TimePtr</declname>
        </param>
        <briefdescription>
<para>Time Elapsed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Returns elaped time.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">TimePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to then time.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in unsigned integer format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="537" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1354" bodyend="1360"/>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 VM::TimeNow</definition>
        <argsstring>(void)</argsstring>
        <name>TimeNow</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Time. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Returns current time.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in unsigned integer format. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="552" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1369" bodyend="1374"/>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" compoundref="vm__app_8cpp" startline="1432" endline="1493">Initialization</referencedby>
        <referencedby refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af3cb2f0cff48cf91124981920b7296b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::IsVehicleArmed</definition>
        <argsstring>(void)</argsstring>
        <name>IsVehicleArmed</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Armed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>True is Vehicle is armed</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the armed attribute in actuator armed message is true, FALSE if it is not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="567" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1342" bodyend="1345"/>
        <references refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" compoundref="vm__app_8h" startline="185">ActuatorArmedMsg</references>
        <referencedby refid="class_v_m___navigation_1ad54ec78e63a576b382cdbf328e8cd526" compoundref="vm___navigation_8cpp" startline="648" endline="651">VM_Navigation::IsVehicleArmed</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::FlightSessionInit</definition>
        <argsstring>(void)</argsstring>
        <name>FlightSessionInit</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set Home Position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Sets home position at initialization, arming and launch events</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="579" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2041" bodyend="2053"/>
        <references refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" compoundref="vm__app_8h" startline="200">ArmingSM</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="class_v_m___arming_1accd94e1e4062fb7dca563a8c97674320" compoundref="vm___arming_8h" startline="216">VM_Arming::FSM</references>
        <references refid="class_v_m___navigation_1a4fd947ec06d2c682f41442a022dfe272" compoundref="vm___navigation_8h" startline="440">VM_Navigation::FSM</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a2a3cdf86522855c6a3f1954c267af18c" compoundref="vm__events_8h" startline="520">VM_LND_INIT_INFO_EID</references>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::SetHomePosition</definition>
        <argsstring>(void)</argsstring>
        <name>SetHomePosition</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set Home Position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Sets home position at initialization, arming and launch events</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="591" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1383" bodyend="1423"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="struct_v_m___config_tbl__t_1abb6e21fbcedba82341508ad2c51bf5de" compoundref="vm__tbldefs_8h" startline="134">VM_ConfigTbl_t::COM_HOME_H_T</references>
        <references refid="struct_v_m___config_tbl__t_1a6dfa022f79848fd58a25cf0f04faa020" compoundref="vm__tbldefs_8h" startline="143">VM_ConfigTbl_t::COM_HOME_V_T</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="struct_v_m___config_tbl__t_1a63b6a6c093bb949fe305e2d9b0909309" compoundref="vm__tbldefs_8h" startline="152">VM_ConfigTbl_t::HOME_POS_ALT_PADDING</references>
        <references refid="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" compoundref="vm__app_8h" startline="187">HomePositionMsg</references>
        <references refid="class_v_m_1ae228c2b2cd5e4f5b25d5c653e26ed477" compoundref="vm__app_8cpp" startline="1138" endline="1142">SendHomePositionMsg</references>
        <references refid="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" compoundref="vm__app_8cpp" startline="1369" endline="1374">TimeNow</references>
        <references refid="class_v_m_1aa0727b35c392b4da880700f496c11b93" compoundref="vm__app_8h" startline="157">VehicleAttitudeMsg</references>
        <references refid="class_v_m_1a5062611ba3bc6f7ba3ca3f9fa5ab83ad" compoundref="vm__app_8h" startline="179">VehicleGlobalPositionMsg</references>
        <references refid="class_v_m_1a59a819087efb4519dd772eebc96e81af" compoundref="vm__app_8h" startline="159">VehicleLocalPositionMsg</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a77fc07d3b63cec57688316e11195bc4b" compoundref="vm__events_8h" startline="507">VM_HOMESET_INFO_EID</references>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
        <referencedby refid="class_v_m___arming_1a765120b9f6daa784e5defc811f8ca3e2" compoundref="vm___arming_8cpp" startline="120" endline="132">VM_Arming::EnteredArmed</referencedby>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::RcModes</definition>
        <argsstring>(void)</argsstring>
        <name>RcModes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>RC Control Navigation Modes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Procedure to how rc will switch navigation modes such as position hold, auto loiter, auto rtl and manual using manual control setpoint message. State transitions are invoked by this method.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="605" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1890" bodyend="2032"/>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="class_v_m___navigation_1a4fd947ec06d2c682f41442a022dfe272" compoundref="vm___navigation_8h" startline="440">VM_Navigation::FSM</references>
        <references refid="class_v_m___navigation_1aa3e57f90d29ed5a55eb4da873e8f3ebb" compoundref="vm___navigation_8cpp" startline="85" endline="90">VM_Navigation::GetCurrentStateID</references>
        <references refid="class_v_m_1a240856859a523f7376479129e9aa15a3" compoundref="vm__app_8cpp" startline="2062" endline="2136">GetNavStateAsString</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="struct_v_m___modes_1aa43fb82ba3b8e19f7fc24d759ced685e" compoundref="vm__msg_8h" startline="671">VM_Modes::inAltCtl</references>
        <references refid="struct_v_m___modes_1a4e558f4c62a7353febbfe4d6002419db" compoundref="vm__msg_8h" startline="665">VM_Modes::inLoiter</references>
        <references refid="struct_v_m___modes_1a12673b22a4839b4021f18f1430e56e4c" compoundref="vm__msg_8h" startline="667">VM_Modes::inManual</references>
        <references refid="struct_v_m___modes_1a9c40fe67e1721dfa0785e1a25911b48d" compoundref="vm__msg_8h" startline="661">VM_Modes::inPosCtl</references>
        <references refid="struct_v_m___modes_1adcaf036c2a8220758055c080efedfb6e" compoundref="vm__msg_8h" startline="663">VM_Modes::inRtl</references>
        <references refid="struct_v_m___modes_1a8831dd5ef20df72c5e1b79f4eaffb135" compoundref="vm__msg_8h" startline="669">VM_Modes::inTakeoff</references>
        <references refid="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" compoundref="vm__app_8h" startline="165">ManualControlSetpointMsg</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="struct_v_m___hk_tlm__t_1affb47f35587f2bb733e3d7ed0e8b9691" compoundref="vm__msg_8h" startline="848">VM_HkTlm_t::PreviousModes</references>
        <references refid="struct_v_m___hk_tlm__t_1aa9b09310d5b5bc772152616a8a16688f" compoundref="vm__msg_8h" startline="728">VM_HkTlm_t::usCmdCnt</references>
        <references refid="struct_v_m___hk_tlm__t_1a155c404a59432cf02bec989795debfb9" compoundref="vm__msg_8h" startline="732">VM_HkTlm_t::usCmdErrCnt</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a9df3cd9b77a02fcaed58ec8991418289" compoundref="vm__events_8h" startline="291">VM_NAV_ILLEGAL_TRANSITION_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ca45e81944992b17e88790b3443d0a5" compoundref="vm__events_8h" startline="696">VM_RC_LTR_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a1c56f332de76664a5ebae05e5cc7c8f6" compoundref="vm__events_8h" startline="735">VM_RC_MAN_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930af0066cb21ffd2750b280ecc5653bc845" compoundref="vm__events_8h" startline="722">VM_RC_POSCTL_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a38a75f18c25f3ba095856cf39ca29610" compoundref="vm__events_8h" startline="709">VM_RC_RTL_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930acac4fd6664d8058f98c8fe3d0a7c218a" compoundref="vm__events_8h" startline="748">VM_RC_TAKE_OFF_INFO_EID</references>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::Initialization</definition>
        <argsstring>(void)</argsstring>
        <name>Initialization</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager Initialization Task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Messages are initialized to their defaults and housekeeping.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="617" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1432" bodyend="1493"/>
        <references refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" compoundref="vm__app_8h" startline="185">ActuatorArmedMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1abdefe535c950ac834cfff677044f12b6" compoundref="vm__msg_8h" startline="809">VM_HkTlm_t::BootTimestamp</references>
        <references refid="struct_v_m___config_tbl__t_1a9ff0b0917ecf61812ef08f383487dc1a" compoundref="vm__tbldefs_8h" startline="89">VM_ConfigTbl_t::COM_RC_ARM_HYST</references>
        <references refid="struct_v_m___config_tbl__t_1a70e99a88f3be4b9d4f6a19e16cbfc49c" compoundref="vm__tbldefs_8h" startline="71">VM_ConfigTbl_t::COM_RC_IN_MODE</references>
        <references refid="vm__app_8h_1a8901a9ed66dcf0e34733f8bef2a511fe" compoundref="vm__app_8h" startline="76">COMMANDER_MONITORING_LOOPSPERMSEC</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="struct_v_m___config_tbl__t_1a90b28aabe7bd40964dbedbf82dc56c37" compoundref="vm__tbldefs_8h" startline="107">VM_ConfigTbl_t::MAV_COMP_ID</references>
        <references refid="struct_v_m___config_tbl__t_1ab88f51b716e4ce78917b4cf922ea7ad2" compoundref="vm__tbldefs_8h" startline="98">VM_ConfigTbl_t::MAV_SYS_ID</references>
        <references refid="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" compoundref="vm__app_8h" startline="191">MissionMsg</references>
        <references refid="struct_v_m___status_flags_1a8559c90478feb0a2f039b61d39ddf29a" compoundref="vm__msg_8h" startline="650">VM_StatusFlags::RcInputIsTemporarilyBlocked</references>
        <references refid="struct_v_m___status_flags_1af3a34580d2a8f586d6831aaa0ff9738f" compoundref="vm__msg_8h" startline="644">VM_StatusFlags::RcSignalFoundOnce</references>
        <references refid="class_v_m_1a046082c5e178827f43d592935619c681" compoundref="vm__app_8h" startline="171">SafetyMsg</references>
        <references refid="class_v_m_1aae21282ba6f2d4c6fc99131c5faf4ea1" compoundref="vm__app_8cpp" startline="1164" endline="1168">SendMissionMsg</references>
        <references refid="struct_v_m___status_flags_1ac0f1451f55aedcdd128d9acbe77b0bf4" compoundref="vm__msg_8h" startline="632">VM_StatusFlags::SensorsInitialized</references>
        <references refid="struct_v_m___hk_tlm__t_1a6c6c1301e2b26546ad9d7e0d98b83f31" compoundref="vm__msg_8h" startline="812">VM_HkTlm_t::StatusFlags</references>
        <references refid="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" compoundref="vm__app_8cpp" startline="1369" endline="1374">TimeNow</references>
        <references refid="struct_v_m___status_flags_1ab8437427fdb0f3990d5d2988999fee3d" compoundref="vm__msg_8h" startline="641">VM_StatusFlags::UsbPowerConnected</references>
        <references refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" compoundref="vm__app_8h" startline="195">VehicleStatusMsg</references>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vehicle Manager Maintenance Task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Executes every time a new message is available, verifies message validity and updates messages and publishes them to software bus.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="630" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="1502" bodyend="1881"/>
        <references refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" compoundref="vm__app_8h" startline="185">ActuatorArmedMsg</references>
        <references refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" compoundref="vm__app_8h" startline="200">ArmingSM</references>
        <references refid="struct_v_m___hk_tlm__t_1a82ef3ae6dd5e3bd45037955241badb69" compoundref="vm__msg_8h" startline="845">VM_HkTlm_t::ArmingStateChanged</references>
        <references refid="class_v_m_1aac3829d769b1c158ed93bc41c5f2e610" compoundref="vm__app_8h" startline="151">BatteryStatusMsg</references>
        <references refid="struct_v_m___hk_tlm__t_1abdefe535c950ac834cfff677044f12b6" compoundref="vm__msg_8h" startline="809">VM_HkTlm_t::BootTimestamp</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="struct_v_m___config_tbl__t_1a346f3eace0fdb9665f678501c1e8b8ac" compoundref="vm__tbldefs_8h" startline="80">VM_ConfigTbl_t::COM_ARM_SWISBTN</references>
        <references refid="struct_v_m___config_tbl__t_1a55940b31374dc7ec59105a81700a4041" compoundref="vm__tbldefs_8h" startline="125">VM_ConfigTbl_t::COM_LOW_BAT_ACT</references>
        <references refid="struct_v_m___config_tbl__t_1a9ff0b0917ecf61812ef08f383487dc1a" compoundref="vm__tbldefs_8h" startline="89">VM_ConfigTbl_t::COM_RC_ARM_HYST</references>
        <references refid="struct_v_m___config_tbl__t_1a4c10fcb0420317090673c1de0a7032be" compoundref="vm__tbldefs_8h" startline="116">VM_ConfigTbl_t::COM_RC_LOSS_T</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="struct_v_m___hk_tlm__t_1a47d55a2f13444420879be5814b83b1dc" compoundref="vm__msg_8h" startline="836">VM_HkTlm_t::CriticalBatteryVoltageActionsDone</references>
        <references refid="struct_v_m___hk_tlm__t_1a850df54e034d69acd96e279d1f01370c" compoundref="vm__msg_8h" startline="839">VM_HkTlm_t::EmergencyBatteryVoltageActionsDone</references>
        <references refid="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" compoundref="vm__app_8cpp" startline="2041" endline="2053">FlightSessionInit</references>
        <references refid="class_v_m___arming_1accd94e1e4062fb7dca563a8c97674320" compoundref="vm___arming_8h" startline="216">VM_Arming::FSM</references>
        <references refid="class_v_m___navigation_1a4fd947ec06d2c682f41442a022dfe272" compoundref="vm___navigation_8h" startline="440">VM_Navigation::FSM</references>
        <references refid="class_v_m___navigation_1aa3e57f90d29ed5a55eb4da873e8f3ebb" compoundref="vm___navigation_8cpp" startline="85" endline="90">VM_Navigation::GetCurrentStateID</references>
        <references refid="class_v_m_1a240856859a523f7376479129e9aa15a3" compoundref="vm__app_8cpp" startline="2062" endline="2136">GetNavStateAsString</references>
        <references refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" compoundref="vm__app_8h" startline="205">HkTlm</references>
        <references refid="struct_v_m___hk_tlm__t_1a77d4a66ecbc98df58c7a4636a38c54b5" compoundref="vm__msg_8h" startline="830">VM_HkTlm_t::LastSpManArmSwitch</references>
        <references refid="struct_v_m___hk_tlm__t_1ab79002c549f092563d39f50fae669cc7" compoundref="vm__msg_8h" startline="833">VM_HkTlm_t::LowBatteryVoltageActionsDone</references>
        <references refid="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" compoundref="vm__app_8h" startline="165">ManualControlSetpointMsg</references>
        <references refid="struct_v_m___config_tbl__t_1a90b28aabe7bd40964dbedbf82dc56c37" compoundref="vm__tbldefs_8h" startline="107">VM_ConfigTbl_t::MAV_COMP_ID</references>
        <references refid="struct_v_m___config_tbl__t_1ab88f51b716e4ce78917b4cf922ea7ad2" compoundref="vm__tbldefs_8h" startline="98">VM_ConfigTbl_t::MAV_SYS_ID</references>
        <references refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" compoundref="vm__app_8h" startline="202">NavigationSM</references>
        <references refid="struct_v_m___hk_tlm__t_1af501c8ab70d77bef79070f9535f0de4a" compoundref="vm__msg_8h" startline="821">VM_HkTlm_t::PrevInFlight</references>
        <references refid="struct_v_m___hk_tlm__t_1affb47f35587f2bb733e3d7ed0e8b9691" compoundref="vm__msg_8h" startline="848">VM_HkTlm_t::PreviousModes</references>
        <references refid="struct_v_m___hk_tlm__t_1aeafb7b81bf52f05ee25d414c0089ba27" compoundref="vm__msg_8h" startline="818">VM_HkTlm_t::PrevLanded</references>
        <references refid="struct_v_m___status_flags_1a8559c90478feb0a2f039b61d39ddf29a" compoundref="vm__msg_8h" startline="650">VM_StatusFlags::RcInputIsTemporarilyBlocked</references>
        <references refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" compoundref="vm__app_8cpp" startline="1890" endline="2032">RcModes</references>
        <references refid="struct_v_m___status_flags_1af3a34580d2a8f586d6831aaa0ff9738f" compoundref="vm__msg_8h" startline="644">VM_StatusFlags::RcSignalFoundOnce</references>
        <references refid="struct_v_m___hk_tlm__t_1ac791d6e512eb84403ba153fe5cc44042" compoundref="vm__msg_8h" startline="842">VM_HkTlm_t::RCSignalLostTimestamp</references>
        <references refid="class_v_m_1a046082c5e178827f43d592935619c681" compoundref="vm__app_8h" startline="171">SafetyMsg</references>
        <references refid="class_v_m_1a32560bba908e54366252101cfae82f0b" compoundref="vm__app_8cpp" startline="1125" endline="1129">SendActuatorArmedMsg</references>
        <references refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" compoundref="vm__app_8cpp" startline="1383" endline="1423">SetHomePosition</references>
        <references refid="struct_v_m___hk_tlm__t_1a6c6c1301e2b26546ad9d7e0d98b83f31" compoundref="vm__msg_8h" startline="812">VM_HkTlm_t::StatusFlags</references>
        <references refid="struct_v_m___hk_tlm__t_1a07b75fcb05df776537e4ee9ee336e7c3" compoundref="vm__msg_8h" startline="824">VM_HkTlm_t::StickOffCounter</references>
        <references refid="struct_v_m___hk_tlm__t_1af27b796dbba6b7dfbb8ac267452967ac" compoundref="vm__msg_8h" startline="827">VM_HkTlm_t::StickOnCounter</references>
        <references refid="class_v_m_1ad0d57a422189b4bec553b1dd9b5333cd" compoundref="vm__app_8h" startline="155">SubsystemInfoMsg</references>
        <references refid="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" compoundref="vm__app_8cpp" startline="1369" endline="1374">TimeNow</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="struct_v_m___status_flags_1ab8437427fdb0f3990d5d2988999fee3d" compoundref="vm__msg_8h" startline="641">VM_StatusFlags::UsbPowerConnected</references>
        <references refid="struct_v_m___hk_tlm__t_1aa9b09310d5b5bc772152616a8a16688f" compoundref="vm__msg_8h" startline="728">VM_HkTlm_t::usCmdCnt</references>
        <references refid="struct_v_m___hk_tlm__t_1a155c404a59432cf02bec989795debfb9" compoundref="vm__msg_8h" startline="732">VM_HkTlm_t::usCmdErrCnt</references>
        <references refid="class_v_m_1a95dde4ee20a78a080f15ca536b3b53b5" compoundref="vm__app_8h" startline="161">VehicleLandDetectedMsg</references>
        <references refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" compoundref="vm__app_8h" startline="195">VehicleStatusMsg</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930aee5feb039356c31e291141fe53fdcacf" compoundref="vm__events_8h" startline="278">VM_ARMING_ILLEGAL_TRANSITION_ERR_EID</references>
        <references refid="vm__msg_8h_1a9d8a182e4f238cd427f8ab9745b467a1a72fcaf181cc0cde22c41ff207f8420b4" compoundref="vm__msg_8h" startline="687">VM_BATTERY_FAILSAFE_MODE_LAND</references>
        <references refid="vm__msg_8h_1a9d8a182e4f238cd427f8ab9745b467a1a07ebfce76b2b2facf371bf9b4371869c" compoundref="vm__msg_8h" startline="685">VM_BATTERY_FAILSAFE_MODE_RETURN</references>
        <references refid="vm__msg_8h_1a9d8a182e4f238cd427f8ab9745b467a1a474592da01932884b2182b36c2029490" compoundref="vm__msg_8h" startline="689">VM_BATTERY_FAILSAFE_MODE_RETURN_IF_CRIT_LOW_LAND_IF_DANGER_LOW</references>
        <references refid="vm__platform__cfg_8h_1ae7f9087994d4a0944eb8c84706180b5d" compoundref="vm__platform__cfg_8h" startline="153">VM_BATTERY_VOLTAGE_CHECK_DELAY</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930aaf5ee4ae8ba656034e1d74e1e36c2668" compoundref="vm__events_8h" startline="574">VM_CRITICAL_BAT_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a9e54113fc702c225d09f71f11246c8dc" compoundref="vm__events_8h" startline="588">VM_DANGER_BAT_LEVEL_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930af0dbc2a340efb355b241ca033205c89d" compoundref="vm__events_8h" startline="560">VM_LOW_BAT_INFO_EID</references>
        <references refid="vm__platform__cfg_8h_1a404a616467d2266e47cdc7a21b923803" compoundref="vm__platform__cfg_8h" startline="160">VM_MINIMUM_VALID_BATTERY_VOLTAGE</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a9df3cd9b77a02fcaed58ec8991418289" compoundref="vm__events_8h" startline="291">VM_NAV_ILLEGAL_TRANSITION_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a2ed4bda2409cca4d5db770ac33c13125" compoundref="vm__events_8h" startline="670">VM_RC_ARM_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a8cd8cd183239eb8db526c494c080fce2" compoundref="vm__events_8h" startline="657">VM_RC_DISARM_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a43c83b3ca00d811c49d1abb96fad7ee1" compoundref="vm__events_8h" startline="683">VM_RC_KIL_SWTCH_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a1c56f332de76664a5ebae05e5cc7c8f6" compoundref="vm__events_8h" startline="735">VM_RC_MAN_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a8f85ff090ee285ad00305475eb89ff43" compoundref="vm__events_8h" startline="618">VM_RC_SIGN_LOST_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930abbbdf29f10556da0ff1d955e4bade396" compoundref="vm__events_8h" startline="603">VM_RC_SIGN_REGAINED_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a0a64e880072f608a6e50cb71692624e0" compoundref="vm__events_8h" startline="644">VM_RC_STK_ARM_REJ_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a7865ec83b4a77d3d97a371648b476211" compoundref="vm__events_8h" startline="631">VM_RC_STK_DISARM_REJ_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930ab8e6cdb16afff6fbb3919df62a92d922" compoundref="vm__events_8h" startline="533">VM_SAFETY_DISARM_INFO_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a53edce87d6718860077c2543cbf5a2cf" compoundref="vm__events_8h" startline="546">VM_SAFETY_INFO_EID</references>
        <referencedby refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" compoundref="vm__app_8cpp" startline="483" endline="569">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a240856859a523f7376479129e9aa15a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * VM::GetNavStateAsString</definition>
        <argsstring>(uint32)</argsstring>
        <name>GetNavStateAsString</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <defname>id</defname>
        </param>
        <briefdescription>
<para>TODO. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Executes every time a new message is available, verifies message validity and updates messages and publishes them to software bus.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="643" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2062" bodyend="2136"/>
        <referencedby refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" compoundref="vm__app_8cpp" startline="1502" endline="1881">Execute</referencedby>
        <referencedby refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" compoundref="vm__app_8cpp" startline="809" endline="1100">ProcessAppCmds</referencedby>
        <referencedby refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" compoundref="vm__app_8cpp" startline="1890" endline="2032">RcModes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a958920fd2c1269d6406c6f3d55d53b67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::UpdateParamsFromTable</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateParamsFromTable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Updates application params from param table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="651" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::onParamValidate</definition>
        <argsstring>(void *Address, uint32 Value)</argsstring>
        <name>onParamValidate</name>
        <param>
          <type>void *</type>
          <declname>Address</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Validate a <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> named parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the #ParamsConsumer base class when before a named parameter is changed by address. The address passed is the address of the parameter passed in the #ParamsConsumer::InitParams function. Return #true if the parameter is valid, and #false if invalid.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if valid. #false if invalid </para></simplesect>
</para><para>Return codes from: <ref refid="class_v_m_1abacf15cfa19cada0a0f761700f08b196" kindref="member">VM::Validate_COM_RC_IN_MODE</ref>, <ref refid="class_v_m_1a6a404d457361dfddbe27d1b939a65cdc" kindref="member">VM::Validate_COM_ARM_SWISBTN</ref>, <ref refid="class_v_m_1ab772c23a940c84726b544d31573f97fa" kindref="member">VM::Validate_COM_RC_ARM_HYST</ref>, <ref refid="class_v_m_1a858e03831c8946c27201dd62fef06604" kindref="member">VM::Validate_MAV_SYS_ID</ref>, <ref refid="class_v_m_1af4967daae88945a8342156d9859c44b8" kindref="member">VM::Validate_MAV_COMP_ID</ref>, <ref refid="class_v_m_1a0e8794e5ba8b21884470c05018a9832f" kindref="member">VM::Validate_COM_LOW_BAT_ACT</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="1000" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2202" bodyend="2237"/>
        <references refid="struct_v_m___config_tbl__t_1a346f3eace0fdb9665f678501c1e8b8ac" compoundref="vm__tbldefs_8h" startline="80">VM_ConfigTbl_t::COM_ARM_SWISBTN</references>
        <references refid="struct_v_m___config_tbl__t_1a55940b31374dc7ec59105a81700a4041" compoundref="vm__tbldefs_8h" startline="125">VM_ConfigTbl_t::COM_LOW_BAT_ACT</references>
        <references refid="struct_v_m___config_tbl__t_1a9ff0b0917ecf61812ef08f383487dc1a" compoundref="vm__tbldefs_8h" startline="89">VM_ConfigTbl_t::COM_RC_ARM_HYST</references>
        <references refid="struct_v_m___config_tbl__t_1a70e99a88f3be4b9d4f6a19e16cbfc49c" compoundref="vm__tbldefs_8h" startline="71">VM_ConfigTbl_t::COM_RC_IN_MODE</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="struct_v_m___config_tbl__t_1a90b28aabe7bd40964dbedbf82dc56c37" compoundref="vm__tbldefs_8h" startline="107">VM_ConfigTbl_t::MAV_COMP_ID</references>
        <references refid="struct_v_m___config_tbl__t_1ab88f51b716e4ce78917b4cf922ea7ad2" compoundref="vm__tbldefs_8h" startline="98">VM_ConfigTbl_t::MAV_SYS_ID</references>
        <references refid="class_v_m_1a6a404d457361dfddbe27d1b939a65cdc" compoundref="vm__config__utils_8cpp" startline="236" endline="249">Validate_COM_ARM_SWISBTN</references>
        <references refid="class_v_m_1a0e8794e5ba8b21884470c05018a9832f" compoundref="vm__config__utils_8cpp" startline="346" endline="359">Validate_COM_LOW_BAT_ACT</references>
        <references refid="class_v_m_1ab772c23a940c84726b544d31573f97fa" compoundref="vm__config__utils_8cpp" startline="258" endline="271">Validate_COM_RC_ARM_HYST</references>
        <references refid="class_v_m_1abacf15cfa19cada0a0f761700f08b196" compoundref="vm__config__utils_8cpp" startline="214" endline="227">Validate_COM_RC_IN_MODE</references>
        <references refid="class_v_m_1af4967daae88945a8342156d9859c44b8" compoundref="vm__config__utils_8cpp" startline="302" endline="315">Validate_MAV_COMP_ID</references>
        <references refid="class_v_m_1a858e03831c8946c27201dd62fef06604" compoundref="vm__config__utils_8cpp" startline="280" endline="293">Validate_MAV_SYS_ID</references>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::onParamValidate</definition>
        <argsstring>(void *Address, float Value)</argsstring>
        <name>onParamValidate</name>
        <param>
          <type>void *</type>
          <declname>Address</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
<para>Validate a #float named parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the #ParamsConsumer base class when before a named parameter is changed by address. The address passed is the address of the parameter passed in the #ParamsConsumer::InitParams function. Return #true if the parameter is valid, and #false if invalid.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if valid. #false if invalid </para></simplesect>
</para><para>Return codes from: <ref refid="class_v_m_1a8f398a38ea39b58b3f3da8620d6f6dce" kindref="member">VM::Validate_COM_RC_LOSS_T</ref>, <ref refid="class_v_m_1a36de2738496d9eeb195ed4cc9942326a" kindref="member">VM::Validate_COM_HOME_H_T</ref>, <ref refid="class_v_m_1a86f1c9e6b21e58dc49a0f35b2ba72c80" kindref="member">VM::Validate_COM_HOME_V_T</ref>, #VM::Validate_HOME_POS_ALT_PADDING </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="1025" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2246" bodyend="2273"/>
        <references refid="struct_v_m___config_tbl__t_1abb6e21fbcedba82341508ad2c51bf5de" compoundref="vm__tbldefs_8h" startline="134">VM_ConfigTbl_t::COM_HOME_H_T</references>
        <references refid="struct_v_m___config_tbl__t_1a6dfa022f79848fd58a25cf0f04faa020" compoundref="vm__tbldefs_8h" startline="143">VM_ConfigTbl_t::COM_HOME_V_T</references>
        <references refid="struct_v_m___config_tbl__t_1a4c10fcb0420317090673c1de0a7032be" compoundref="vm__tbldefs_8h" startline="116">VM_ConfigTbl_t::COM_RC_LOSS_T</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="struct_v_m___config_tbl__t_1a63b6a6c093bb949fe305e2d9b0909309" compoundref="vm__tbldefs_8h" startline="152">VM_ConfigTbl_t::HOME_POS_ALT_PADDING</references>
        <references refid="class_v_m_1a36de2738496d9eeb195ed4cc9942326a" compoundref="vm__config__utils_8cpp" startline="369" endline="382">Validate_COM_HOME_H_T</references>
        <references refid="class_v_m_1a86f1c9e6b21e58dc49a0f35b2ba72c80" compoundref="vm__config__utils_8cpp" startline="391" endline="404">Validate_COM_HOME_V_T</references>
        <references refid="class_v_m_1a8f398a38ea39b58b3f3da8620d6f6dce" compoundref="vm__config__utils_8cpp" startline="324" endline="337">Validate_COM_RC_LOSS_T</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::InitConfigTbl</definition>
        <argsstring>(void)</argsstring>
        <name>InitConfigTbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="class_v_m" kindref="compound">VM</ref> configuration tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes <ref refid="class_v_m" kindref="compound">VM</ref>&apos;s configuration tables. This includes &lt;TODO&gt;.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Register</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Load</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #VM_AcquireConfigPointers  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="672" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="48" bodyend="86"/>
        <references refid="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" compoundref="vm__config__utils_8cpp" startline="163" endline="205">AcquireConfigPointers</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50">CFE_TBL_Load</references>
        <references refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462">CFE_TBL_OPT_DEFAULT</references>
        <references refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683">CFE_TBL_Register</references>
        <references refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be">CFE_TBL_SRC_FILE</references>
        <references refid="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" compoundref="vm__app_8h" startline="139">ConfigTblHdl</references>
        <references refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930afde7158d51008e28b721f5d9f41092f2" compoundref="vm__events_8h" startline="263">VM_CFGTBL_LOAD_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a1a934b78a20ff84e6adcf323fadf5110" compoundref="vm__events_8h" startline="247">VM_CFGTBL_REG_ERR_EID</references>
        <references refid="vm__platform__cfg_8h_1a2d4915636fd91f0f9647c38eaeb1ac09" compoundref="vm__platform__cfg_8h" startline="138">VM_CONFIG_TABLE_FILENAME</references>
        <references refid="vm__tbldefs_8h_1a206d4480bc07d8ededbcfd03de7ce37e" compoundref="vm__tbldefs_8h" startline="59">VM_CONFIG_TABLENAME</references>
        <referencedby refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" compoundref="vm__app_8cpp" startline="413" endline="474">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::AcquireConfigPointers</definition>
        <argsstring>(void)</argsstring>
        <name>AcquireConfigPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Obtain <ref refid="class_v_m" kindref="compound">VM</ref> configuration tables data pointers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function manages the configuration tables and obtains a pointer to their data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="689" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="163" bodyend="205"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface">CFE_TBL_GetAddress</references>
        <references refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5">CFE_TBL_INFO_UPDATED</references>
        <references refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c">CFE_TBL_Manage</references>
        <references refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a">CFE_TBL_ReleaseAddress</references>
        <references refid="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" compoundref="vm__app_8h" startline="139">ConfigTblHdl</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a73ead67b7487644a4e29bba2a6d883f1" compoundref="vm__events_8h" startline="169">VM_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930aee345a0e41ad6083178b854a8d42523c" compoundref="vm__events_8h" startline="156">VM_CFGTBL_MANAGE_ERR_EID</references>
        <referencedby refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" compoundref="vm__app_8cpp" startline="1275" endline="1333">AppMain</referencedby>
        <referencedby refid="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" compoundref="vm__config__utils_8cpp" startline="48" endline="86">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af97e3d991db9319a7435ef9481a276fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ReportConfiguration</definition>
        <argsstring>(void)</argsstring>
        <name>ReportConfiguration</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Send the configuration message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes a message containing the current configuration.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="706" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2145" bodyend="2151"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="struct_v_m___config_tlm__t_1a96dd58147af48f07f942fa93911e8ac6" compoundref="vm__msg_8h" startline="710">VM_ConfigTlm_t::ConfigTbl</references>
        <references refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" compoundref="vm__app_8h" startline="141">ConfigTblPtr</references>
        <references refid="class_v_m_1ab0f0a9caeb80ef3be738340867f6bdcd" compoundref="vm__app_8h" startline="208">ConfigTlm</references>
        <referencedby refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" compoundref="vm__app_8cpp" startline="809" endline="1100">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1aa88c87c897d5f386ca6d5b6aa0e313b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void VM::ProcessParamPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessParamPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process the parameter pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function will process all incoming named parameter commands.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a5b7397f2fe8a7c7b54db81f4f5b07bee" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::ProcessUpdatedParam</definition>
        <argsstring>(PRMLIB_UpdatedParamMsg_t *MsgPtr)</argsstring>
        <name>ProcessUpdatedParam</name>
        <param>
          <type>PRMLIB_UpdatedParamMsg_t *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Process parameter updates. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called to update named parameters.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if successful. -1 if unsuccessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a3db46dde9351e163971c927a3ced9d95" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void VM::onParamsChange</definition>
        <argsstring>(PRMLIB_ParamRegistration_t *ParamsData, uint32 ParamsCount)</argsstring>
        <name>onParamsChange</name>
        <param>
          <type>PRMLIB_ParamRegistration_t *</type>
          <declname>ParamsData</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>ParamsCount</declname>
        </param>
        <briefdescription>
<para>Respond to changes in parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the #ParamsConsumer base class when a registered named parameter has changed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if successful. -1 if unsuccessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="756" column="1" bodyfile="apps/vm/fsw/src/vm_app.cpp" bodystart="2188" bodyend="2193"/>
        <references refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26">CFE_TBL_Modified</references>
        <references refid="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" compoundref="vm__app_8h" startline="139">ConfigTblHdl</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 VM::ValidateConfigTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidateConfigTbl</name>
        <param>
          <type>void *</type>
          <defname>ConfigTblPtr</defname>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_v_m" kindref="compound">VM</ref> configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_v_m" kindref="compound">VM</ref>&apos;s configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="775" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="95" bodyend="156"/>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="struct_v_m___config_tbl__t_1a346f3eace0fdb9665f678501c1e8b8ac" compoundref="vm__tbldefs_8h" startline="80">VM_ConfigTbl_t::COM_ARM_SWISBTN</references>
        <references refid="struct_v_m___config_tbl__t_1abb6e21fbcedba82341508ad2c51bf5de" compoundref="vm__tbldefs_8h" startline="134">VM_ConfigTbl_t::COM_HOME_H_T</references>
        <references refid="struct_v_m___config_tbl__t_1a6dfa022f79848fd58a25cf0f04faa020" compoundref="vm__tbldefs_8h" startline="143">VM_ConfigTbl_t::COM_HOME_V_T</references>
        <references refid="struct_v_m___config_tbl__t_1a55940b31374dc7ec59105a81700a4041" compoundref="vm__tbldefs_8h" startline="125">VM_ConfigTbl_t::COM_LOW_BAT_ACT</references>
        <references refid="struct_v_m___config_tbl__t_1a9ff0b0917ecf61812ef08f383487dc1a" compoundref="vm__tbldefs_8h" startline="89">VM_ConfigTbl_t::COM_RC_ARM_HYST</references>
        <references refid="struct_v_m___config_tbl__t_1a70e99a88f3be4b9d4f6a19e16cbfc49c" compoundref="vm__tbldefs_8h" startline="71">VM_ConfigTbl_t::COM_RC_IN_MODE</references>
        <references refid="struct_v_m___config_tbl__t_1a4c10fcb0420317090673c1de0a7032be" compoundref="vm__tbldefs_8h" startline="116">VM_ConfigTbl_t::COM_RC_LOSS_T</references>
        <references refid="struct_v_m___config_tbl__t_1a90b28aabe7bd40964dbedbf82dc56c37" compoundref="vm__tbldefs_8h" startline="107">VM_ConfigTbl_t::MAV_COMP_ID</references>
        <references refid="struct_v_m___config_tbl__t_1ab88f51b716e4ce78917b4cf922ea7ad2" compoundref="vm__tbldefs_8h" startline="98">VM_ConfigTbl_t::MAV_SYS_ID</references>
        <references refid="class_v_m_1a6a404d457361dfddbe27d1b939a65cdc" compoundref="vm__config__utils_8cpp" startline="236" endline="249">Validate_COM_ARM_SWISBTN</references>
        <references refid="class_v_m_1a36de2738496d9eeb195ed4cc9942326a" compoundref="vm__config__utils_8cpp" startline="369" endline="382">Validate_COM_HOME_H_T</references>
        <references refid="class_v_m_1a86f1c9e6b21e58dc49a0f35b2ba72c80" compoundref="vm__config__utils_8cpp" startline="391" endline="404">Validate_COM_HOME_V_T</references>
        <references refid="class_v_m_1a0e8794e5ba8b21884470c05018a9832f" compoundref="vm__config__utils_8cpp" startline="346" endline="359">Validate_COM_LOW_BAT_ACT</references>
        <references refid="class_v_m_1ab772c23a940c84726b544d31573f97fa" compoundref="vm__config__utils_8cpp" startline="258" endline="271">Validate_COM_RC_ARM_HYST</references>
        <references refid="class_v_m_1abacf15cfa19cada0a0f761700f08b196" compoundref="vm__config__utils_8cpp" startline="214" endline="227">Validate_COM_RC_IN_MODE</references>
        <references refid="class_v_m_1a8f398a38ea39b58b3f3da8620d6f6dce" compoundref="vm__config__utils_8cpp" startline="324" endline="337">Validate_COM_RC_LOSS_T</references>
        <references refid="class_v_m_1af4967daae88945a8342156d9859c44b8" compoundref="vm__config__utils_8cpp" startline="302" endline="315">Validate_MAV_COMP_ID</references>
        <references refid="class_v_m_1a858e03831c8946c27201dd62fef06604" compoundref="vm__config__utils_8cpp" startline="280" endline="293">Validate_MAV_SYS_ID</references>
        <referencedby refid="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" compoundref="vm__config__utils_8cpp" startline="48" endline="86">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1abacf15cfa19cada0a0f761700f08b196" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_RC_IN_MODE</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_RC_IN_MODE</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_RC_IN_MODE parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the RC control input mode (COM_RC_IN_MODE) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0 &gt; 2, default 0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="797" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="214" bodyend="227"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1a81cfa757155dea5ceaec5a399efd67c2" compoundref="vm__app_8h" startline="93">COM_RC_IN_MODE_MAX</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a6a404d457361dfddbe27d1b939a65cdc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_ARM_SWISBTN</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_ARM_SWISBTN</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_ARM_SWISBTN parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Arm switch is only a button (COM_ARM_SWISBTN) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0 &gt; 1, default 0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="819" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="236" bodyend="249"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1ab772c23a940c84726b544d31573f97fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_RC_ARM_HYST</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_RC_ARM_HYST</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_RC_ARM_HYST parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the RC input arm/disarm command duration (COM_RC_ARM_HYST) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 100 &gt; 1500, default 1000.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="841" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="258" bodyend="271"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1a7766d6a85673f8833627c5d579384067" compoundref="vm__app_8h" startline="95">COM_RC_ARM_HYST_MAX</references>
        <references refid="vm__app_8h_1ab4c11401562754f826f4348b7bf8ea9d" compoundref="vm__app_8h" startline="94">COM_RC_ARM_HYST_MIN</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a858e03831c8946c27201dd62fef06604" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_MAV_SYS_ID</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_MAV_SYS_ID</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the MAV_SYS_ID parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the System ID (MAV_SYS_ID) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 1 &gt; 250, default 1.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="863" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="280" bodyend="293"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1aad21637a84db3caf180fc364479eae71" compoundref="vm__app_8h" startline="97">MAV_SYS_ID_MAX</references>
        <references refid="vm__app_8h_1a1c23b06d62f4a36f54acd13a11682646" compoundref="vm__app_8h" startline="96">MAV_SYS_ID_MIN</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1af4967daae88945a8342156d9859c44b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_MAV_COMP_ID</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_MAV_COMP_ID</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the MAV_COMP_ID parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Component ID (MAV_COMP_ID) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 1 &gt; 250, default 1.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="885" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="302" bodyend="315"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1a0b4e6dd5fbd0931c61b166e38b3eb02f" compoundref="vm__app_8h" startline="99">MAV_COMP_ID_MAX</references>
        <references refid="vm__app_8h_1a8ebb069f041d14101fde09c9dd7a0c86" compoundref="vm__app_8h" startline="98">MAV_COMP_ID_MIN</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a8f398a38ea39b58b3f3da8620d6f6dce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_RC_LOSS_T</definition>
        <argsstring>(float param)</argsstring>
        <name>Validate_COM_RC_LOSS_T</name>
        <param>
          <type>float</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_RC_LOSS_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the RC loss time threshold (COM_RC_LOSS_T) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0.0 &gt; 35.0, default 0.5.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="907" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="324" bodyend="337"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1ac8eae6760a94caa62ad7f3a4d61b57a5" compoundref="vm__app_8h" startline="100">COM_RC_LOSS_T_MAX</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" compoundref="vm__app_8cpp" startline="2246" endline="2273">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a0e8794e5ba8b21884470c05018a9832f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_LOW_BAT_ACT</definition>
        <argsstring>(uint32 param)</argsstring>
        <name>Validate_COM_LOW_BAT_ACT</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_LOW_BAT_ACT parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Battery failsafe mode (COM_LOW_BAT_ACT) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 0 &gt; 3, default 0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="929" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="346" bodyend="359"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1a61a2cb977a6233484dae8824137966dd" compoundref="vm__app_8h" startline="101">COM_LOW_BAT_ACT_MAX</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" compoundref="vm__app_8cpp" startline="2202" endline="2237">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a36de2738496d9eeb195ed4cc9942326a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_HOME_H_T</definition>
        <argsstring>(float param)</argsstring>
        <name>Validate_COM_HOME_H_T</name>
        <param>
          <type>float</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_HOME_H_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Home set horizontal threshold (COM_HOME_H_T) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 2.0 &gt; 15.0, default 5.0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="951" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="369" bodyend="382"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1ac17315563d0359e4759c19a735fb65e6" compoundref="vm__app_8h" startline="103">COM_HOME_H_T_MAX</references>
        <references refid="vm__app_8h_1a1b8a22a8283cc77e6103836908824c4d" compoundref="vm__app_8h" startline="102">COM_HOME_H_T_MIN</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" compoundref="vm__app_8cpp" startline="2246" endline="2273">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_v_m_1a86f1c9e6b21e58dc49a0f35b2ba72c80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool VM::Validate_COM_HOME_V_T</definition>
        <argsstring>(float param)</argsstring>
        <name>Validate_COM_HOME_V_T</name>
        <param>
          <type>float</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Validate the COM_HOME_V_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Validate the Home set vertical threshold (COM_HOME_V_T) parameter.</para></simplesect>
<simplesect kind="par"><title>Limits:</title><para>Min &gt; Max (incr.) 5.0 &gt; 25.0, default 10.0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para><ref refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" kindref="member">VM_INVALID_CONFIG_TABLE_ERR_EID</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of the parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>false </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>true </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/vm/fsw/src/vm_app.h" line="973" column="1" bodyfile="apps/vm/fsw/src/vm_config_utils.cpp" bodystart="391" bodyend="404"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="vm__app_8h_1a04921fc234eef637e148d12b35ae9c6b" compoundref="vm__app_8h" startline="105">COM_HOME_V_T_MAX</references>
        <references refid="vm__app_8h_1a7a3a6e2b3810ab7ebd195f0c16c4f645" compoundref="vm__app_8h" startline="104">COM_HOME_V_T_MIN</references>
        <references refid="vm__events_8h_1a4d913fdce483003fc71e5df6d309e930a3ad1f2dc0924b932fa412de5f22be094" compoundref="vm__events_8h" startline="912">VM_INVALID_CONFIG_TABLE_ERR_EID</references>
        <referencedby refid="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" compoundref="vm__app_8cpp" startline="2246" endline="2273">onParamValidate</referencedby>
        <referencedby refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" compoundref="vm__config__utils_8cpp" startline="95" endline="156">ValidateConfigTbl</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_v_m" kindref="compound">VM</ref> Application Class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>VM</label>
        <link refid="class_v_m"/>
        <childnode refid="3" relation="private-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>ParamsConsumer</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="12">
        <label>VM_StatusFlags</label>
        <link refid="struct_v_m___status_flags"/>
      </node>
      <node id="7">
        <label>VM_ConfigTbl_t</label>
        <link refid="struct_v_m___config_tbl__t"/>
      </node>
      <node id="4">
        <label>VM</label>
        <link refid="class_v_m"/>
        <childnode refid="5" relation="private-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ConfigTlm</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>ArmingSM</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>ConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>m_caws</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>HkTlm</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>NavigationSM</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>VM_ConfigTlm_t</label>
        <link refid="struct_v_m___config_tlm__t"/>
        <childnode refid="7" relation="usage">
          <edgelabel>ConfigTbl</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>VM_Modes</label>
        <link refid="struct_v_m___modes"/>
      </node>
      <node id="8">
        <label>VM_Arming</label>
        <link refid="class_v_m___arming"/>
        <childnode refid="4" relation="usage">
          <edgelabel>App</edgelabel>
        </childnode>
      </node>
      <node id="13">
        <label>VM_Navigation</label>
        <link refid="class_v_m___navigation"/>
        <childnode refid="4" relation="usage">
          <edgelabel>App</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>CautionWarningHelper</label>
        <link refid="class_caution_warning_helper"/>
      </node>
      <node id="5">
        <label>ParamsConsumer</label>
      </node>
      <node id="10">
        <label>VM_HkTlm_t</label>
        <link refid="struct_v_m___hk_tlm__t"/>
        <childnode refid="11" relation="usage">
          <edgelabel>PreviousModes</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>StatusFlags</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="apps/vm/fsw/src/vm_app.h" line="117" column="1" bodyfile="apps/vm/fsw/src/vm_app.h" bodystart="116" bodyend="1026"/>
    <listofallmembers>
      <member refid="class_v_m_1ae19bc3a5f25792626a3db8ae12bd1c7f" prot="private" virt="non-virtual"><scope>VM</scope><name>AcquireConfigPointers</name></member>
      <member refid="class_v_m_1a4ed155be7539ee978f49d22aa89cdf75" prot="public" virt="non-virtual"><scope>VM</scope><name>ActuatorArmedMsg</name></member>
      <member refid="class_v_m_1a35c7b8c667b18138173d293b5cfc869b" prot="public" virt="non-virtual"><scope>VM</scope><name>AppMain</name></member>
      <member refid="class_v_m_1a213ef25f40276eb470a4ccc916bc893f" prot="public" virt="non-virtual"><scope>VM</scope><name>ArmingSM</name></member>
      <member refid="class_v_m_1aac3829d769b1c158ed93bc41c5f2e610" prot="public" virt="non-virtual"><scope>VM</scope><name>BatteryStatusMsg</name></member>
      <member refid="class_v_m_1a76b3179c5edb56bfeb1fb6c4ff55af64" prot="public" virt="non-virtual"><scope>VM</scope><name>CmdPipeId</name></member>
      <member refid="class_v_m_1a3a3ec35851527c4bdc01a80c4dfe76a6" prot="public" virt="non-virtual"><scope>VM</scope><name>ConfigTblHdl</name></member>
      <member refid="class_v_m_1a47072ffba454d9129036f780d4357bf3" prot="public" virt="non-virtual"><scope>VM</scope><name>ConfigTblPtr</name></member>
      <member refid="class_v_m_1ab0f0a9caeb80ef3be738340867f6bdcd" prot="public" virt="non-virtual"><scope>VM</scope><name>ConfigTlm</name></member>
      <member refid="class_v_m_1a399c96da46dac8677e59129b6230d9eb" prot="public" virt="non-virtual"><scope>VM</scope><name>DataPipeId</name></member>
      <member refid="class_v_m_1a0491f4b72de26eb3e918abd3ada9b9d1" prot="public" virt="non-virtual"><scope>VM</scope><name>Execute</name></member>
      <member refid="class_v_m_1ae788deb61b12f2ea6350474a6e8d6ae0" prot="public" virt="non-virtual"><scope>VM</scope><name>FlightSessionInit</name></member>
      <member refid="class_v_m_1a240856859a523f7376479129e9aa15a3" prot="public" virt="non-virtual"><scope>VM</scope><name>GetNavStateAsString</name></member>
      <member refid="class_v_m_1a7a39a88bbd2069d287aaf4bd9fd95eec" prot="public" virt="non-virtual"><scope>VM</scope><name>HkTlm</name></member>
      <member refid="class_v_m_1a3c24d4bdb7e47c1ecc3e5857a1cdf810" prot="public" virt="non-virtual"><scope>VM</scope><name>HomePositionMsg</name></member>
      <member refid="class_v_m_1a25434a92b5ba0c939414e9bde5d11092" prot="public" virt="non-virtual"><scope>VM</scope><name>InitApp</name></member>
      <member refid="class_v_m_1a21d2aa2b888b54a0098306928baa2c63" prot="private" virt="non-virtual"><scope>VM</scope><name>InitConfigTbl</name></member>
      <member refid="class_v_m_1ae8270ae51f8a9a8cd05e1026ed8b661c" prot="public" virt="non-virtual"><scope>VM</scope><name>InitData</name></member>
      <member refid="class_v_m_1af03d761dd6b90e2c18294158bf9e9221" prot="public" virt="non-virtual"><scope>VM</scope><name>InitEvent</name></member>
      <member refid="class_v_m_1a6538d5b9d4dcef0713b9b9f5e2b3ed5c" prot="public" virt="non-virtual"><scope>VM</scope><name>Initialization</name></member>
      <member refid="class_v_m_1aaa46c2c4ffbf8fa240902053672f7f9e" prot="public" virt="non-virtual"><scope>VM</scope><name>InitParams</name></member>
      <member refid="class_v_m_1ab284e3d447d0b60116f0ab867c22941a" prot="public" virt="non-virtual"><scope>VM</scope><name>InitPipe</name></member>
      <member refid="class_v_m_1af3cb2f0cff48cf91124981920b7296b3" prot="public" virt="non-virtual"><scope>VM</scope><name>IsVehicleArmed</name></member>
      <member refid="class_v_m_1a53f79370d94268734e2763b3a7502a71" prot="public" virt="non-virtual"><scope>VM</scope><name>LedControlMsg</name></member>
      <member refid="class_v_m_1ab095a387a372af757908d62ddf03e749" prot="public" virt="non-virtual"><scope>VM</scope><name>m_caws</name></member>
      <member refid="class_v_m_1aae9b30ed8548edcf6871cd1bc11b6162" prot="public" virt="non-virtual"><scope>VM</scope><name>ManualControlSetpointMsg</name></member>
      <member refid="class_v_m_1a93b91f4bb7a0e1540d1a042f9122ca7f" prot="public" virt="non-virtual"><scope>VM</scope><name>MissionMsg</name></member>
      <member refid="class_v_m_1a7e7b5fd02128f88d9e34f55cbc3d8cdb" prot="public" virt="non-virtual"><scope>VM</scope><name>MissionResultMsg</name></member>
      <member refid="class_v_m_1a1e7b2ea2aba6121c168a29251d8ad83b" prot="public" virt="non-virtual"><scope>VM</scope><name>NavigationSM</name></member>
      <member refid="class_v_m_1a3db46dde9351e163971c927a3ced9d95" prot="private" virt="virtual"><scope>VM</scope><name>onParamsChange</name></member>
      <member refid="class_v_m_1a9280fe5946b2d73b3e99a6275625485f" prot="public" virt="non-virtual"><scope>VM</scope><name>onParamValidate</name></member>
      <member refid="class_v_m_1a2e1c1f4f8d59374a79c0d1b5b101563e" prot="public" virt="non-virtual"><scope>VM</scope><name>onParamValidate</name></member>
      <member refid="class_v_m_1aa485c303dcc3d70ba0a52898b649ecfd" prot="public" virt="non-virtual"><scope>VM</scope><name>PositionSetpointTripletMsg</name></member>
      <member refid="class_v_m_1a373dc74e5bdce3c5cf3db88a9a924f68" prot="public" virt="non-virtual"><scope>VM</scope><name>ProcessAppCmds</name></member>
      <member refid="class_v_m_1af88d1a156da7b18af2a9b265fb2d9a2c" prot="public" virt="non-virtual"><scope>VM</scope><name>ProcessCmdPipe</name></member>
      <member refid="class_v_m_1a4c532b0c33804035dbd42ac4c717dd64" prot="public" virt="non-virtual"><scope>VM</scope><name>ProcessDataPipe</name></member>
      <member refid="class_v_m_1aa88c87c897d5f386ca6d5b6aa0e313b5" prot="private" virt="non-virtual"><scope>VM</scope><name>ProcessParamPipe</name></member>
      <member refid="class_v_m_1a5b7397f2fe8a7c7b54db81f4f5b07bee" prot="private" virt="non-virtual"><scope>VM</scope><name>ProcessUpdatedParam</name></member>
      <member refid="class_v_m_1a7eb77b71aa8105b5c7e2a2db385b2b24" prot="public" virt="non-virtual"><scope>VM</scope><name>RcModes</name></member>
      <member refid="class_v_m_1a27608a3beb9cdf5ecd14c84f9d144333" prot="public" virt="non-virtual"><scope>VM</scope><name>RcvSchPipeMsg</name></member>
      <member refid="class_v_m_1af97e3d991db9319a7435ef9481a276fb" prot="private" virt="non-virtual"><scope>VM</scope><name>ReportConfiguration</name></member>
      <member refid="class_v_m_1aa1984d4ba6901c14f8a5228e29dc764e" prot="public" virt="non-virtual"><scope>VM</scope><name>ReportHousekeeping</name></member>
      <member refid="class_v_m_1a046082c5e178827f43d592935619c681" prot="public" virt="non-virtual"><scope>VM</scope><name>SafetyMsg</name></member>
      <member refid="class_v_m_1a4dda712bacee61943d3dbee8d43f4615" prot="public" virt="non-virtual"><scope>VM</scope><name>SchPipeId</name></member>
      <member refid="class_v_m_1a32560bba908e54366252101cfae82f0b" prot="public" virt="non-virtual"><scope>VM</scope><name>SendActuatorArmedMsg</name></member>
      <member refid="class_v_m_1ae228c2b2cd5e4f5b25d5c653e26ed477" prot="public" virt="non-virtual"><scope>VM</scope><name>SendHomePositionMsg</name></member>
      <member refid="class_v_m_1a371db313e8a508c1bd2c79af53a29b25" prot="public" virt="non-virtual"><scope>VM</scope><name>SendLedControlMsg</name></member>
      <member refid="class_v_m_1aae21282ba6f2d4c6fc99131c5faf4ea1" prot="public" virt="non-virtual"><scope>VM</scope><name>SendMissionMsg</name></member>
      <member refid="class_v_m_1a67a94fbe567f2a7c4fa21209bfc6b0df" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleCommandMsg</name></member>
      <member refid="class_v_m_1a51c92f145854c6a05e3b36e4412a137c" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleControlModeMsg</name></member>
      <member refid="class_v_m_1a21d79320551169eaf71258d5b8a46c33" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleManagerStateMsg</name></member>
      <member refid="class_v_m_1ad10ee3ac2966766a0be9ea8fff6f30e8" prot="public" virt="non-virtual"><scope>VM</scope><name>SendVehicleStatusMsg</name></member>
      <member refid="class_v_m_1a62f5965564d193031a73df3a63515767" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorAccelMsg</name></member>
      <member refid="class_v_m_1ac1dbcc4bb47165cfa686860ebe464eff" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorCombinedMsg</name></member>
      <member refid="class_v_m_1afd67df4b4fe797695e48208d569125d9" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorCorrectionMsg</name></member>
      <member refid="class_v_m_1ad5719da53147146863d1e15f189118fc" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorGyroMsg</name></member>
      <member refid="class_v_m_1ada27d75c7daa3fef2027f433f955471e" prot="public" virt="non-virtual"><scope>VM</scope><name>SensorMagMsg</name></member>
      <member refid="class_v_m_1af7b413956eea366aefdbfe8f03ddd391" prot="public" virt="non-virtual"><scope>VM</scope><name>SetHomePosition</name></member>
      <member refid="class_v_m_1ad0d57a422189b4bec553b1dd9b5333cd" prot="public" virt="non-virtual"><scope>VM</scope><name>SubsystemInfoMsg</name></member>
      <member refid="class_v_m_1af222349536e984bfc3ae835bbf1490c0" prot="public" virt="non-virtual"><scope>VM</scope><name>TelemetryStatusMsg</name></member>
      <member refid="class_v_m_1a19b757557b713ed378d352ef8875a62f" prot="public" virt="non-virtual"><scope>VM</scope><name>TimeElapsed</name></member>
      <member refid="class_v_m_1a265bb5378f84cd154442d3eb2809cbad" prot="public" virt="non-virtual"><scope>VM</scope><name>TimeNow</name></member>
      <member refid="class_v_m_1a96816f8e473702c9ea57a3d131a0efb6" prot="public" virt="non-virtual"><scope>VM</scope><name>uiRunStatus</name></member>
      <member refid="class_v_m_1a958920fd2c1269d6406c6f3d55d53b67" prot="public" virt="non-virtual"><scope>VM</scope><name>UpdateParamsFromTable</name></member>
      <member refid="class_v_m_1a6a404d457361dfddbe27d1b939a65cdc" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_ARM_SWISBTN</name></member>
      <member refid="class_v_m_1a36de2738496d9eeb195ed4cc9942326a" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_HOME_H_T</name></member>
      <member refid="class_v_m_1a86f1c9e6b21e58dc49a0f35b2ba72c80" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_HOME_V_T</name></member>
      <member refid="class_v_m_1a0e8794e5ba8b21884470c05018a9832f" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_LOW_BAT_ACT</name></member>
      <member refid="class_v_m_1ab772c23a940c84726b544d31573f97fa" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_RC_ARM_HYST</name></member>
      <member refid="class_v_m_1abacf15cfa19cada0a0f761700f08b196" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_RC_IN_MODE</name></member>
      <member refid="class_v_m_1a8f398a38ea39b58b3f3da8620d6f6dce" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_COM_RC_LOSS_T</name></member>
      <member refid="class_v_m_1af4967daae88945a8342156d9859c44b8" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_MAV_COMP_ID</name></member>
      <member refid="class_v_m_1a858e03831c8946c27201dd62fef06604" prot="public" virt="non-virtual"><scope>VM</scope><name>Validate_MAV_SYS_ID</name></member>
      <member refid="class_v_m_1ac5e96bc30674b197ab22ea98c4a3bdf0" prot="public" virt="non-virtual"><scope>VM</scope><name>ValidateConfigTbl</name></member>
      <member refid="class_v_m_1aa0727b35c392b4da880700f496c11b93" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleAttitudeMsg</name></member>
      <member refid="class_v_m_1afcd15ef142b0a0ac7f6e800d2813eac4" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleCommandMsg</name></member>
      <member refid="class_v_m_1ae98cdbbec8c9cd73e9c45ecb0ce5b110" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleControlModeMsg</name></member>
      <member refid="class_v_m_1a5062611ba3bc6f7ba3ca3f9fa5ab83ad" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleGlobalPositionMsg</name></member>
      <member refid="class_v_m_1a74414678084bd6a7a707f4a81bfe5a38" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleGpsPositionMsg</name></member>
      <member refid="class_v_m_1a95dde4ee20a78a080f15ca536b3b53b5" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleLandDetectedMsg</name></member>
      <member refid="class_v_m_1a59a819087efb4519dd772eebc96e81af" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleLocalPositionMsg</name></member>
      <member refid="class_v_m_1ac3fccdbe2eeca915814fd0d6bde32a2a" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleManagerStateMsg</name></member>
      <member refid="class_v_m_1a903a316d58ca7aed9dd3f9d045690fe0" prot="public" virt="non-virtual"><scope>VM</scope><name>VehicleStatusMsg</name></member>
      <member refid="class_v_m_1a8f219068a34cb8b9cbfe5a241b5d3bfe" prot="public" virt="non-virtual"><scope>VM</scope><name>VerifyCmdLength</name></member>
      <member refid="class_v_m_1a3502d27cf6a670f277221e8e6ac8b869" prot="public" virt="non-virtual"><scope>VM</scope><name>VM</name></member>
      <member refid="class_v_m_1afd22a970a44757f4b53c8c77a8fa1e71" prot="public" virt="non-virtual"><scope>VM</scope><name>~VM</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
