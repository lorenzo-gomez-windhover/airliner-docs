<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lc__watch_8h" kind="file" language="C++">
    <compoundname>lc_watch.h</compoundname>
    <includes local="yes">cfe.h</includes>
    <includes refid="lc__app_8h" local="yes">lc_app.h</includes>
    <includedby refid="lc__app_8c" local="yes">apps/lc/fsw/src/lc_app.c</includedby>
    <includedby refid="lc__cmds_8c" local="yes">apps/lc/fsw/src/lc_cmds.c</includedby>
    <includedby refid="lc__watch_8c" local="yes">apps/lc/fsw/src/lc_watch.c</includedby>
    <incdepgraph>
      <node id="795">
        <label>lc_tbldefs.h</label>
        <link refid="lc__tbldefs_8h"/>
      </node>
      <node id="780">
        <label>cfe_error.h</label>
        <link refid="cfe__error_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="771" relation="include">
        </childnode>
      </node>
      <node id="794">
        <label>lc_tbl.h</label>
        <link refid="lc__tbl_8h"/>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="793" relation="include">
        </childnode>
        <childnode refid="795" relation="include">
        </childnode>
      </node>
      <node id="787">
        <label>ccsds.h</label>
        <link refid="ccsds_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
      </node>
      <node id="772">
        <label>osapi-version.h</label>
        <link refid="osapi-version_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="789">
        <label>cfe_tbl.h</label>
        <link refid="cfe__tbl_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
      </node>
      <node id="791">
        <label>lc_msg.h</label>
        <link refid="lc__msg_8h"/>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="792" relation="include">
        </childnode>
      </node>
      <node id="784">
        <label>cfe_time.h</label>
        <link refid="cfe__time_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
      </node>
      <node id="773">
        <label>osapi-os-core.h</label>
        <link refid="osapi-os-core_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="779">
        <label>cfe_mission_cfg.h</label>
        <link refid="cfe__mission__cfg_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="775">
        <label>osapi-os-filesys.h</label>
        <link refid="osapi-os-filesys_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="782">
        <label>cfe_es_perfids.h</label>
        <link refid="cfe__es__perfids_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="768">
        <label>apps/lc/fsw/src/lc_watch.h</label>
        <link refid="lc_watch.h"/>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="790" relation="include">
        </childnode>
      </node>
      <node id="776">
        <label>osapi-os-net.h</label>
        <link refid="osapi-os-net_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="771">
        <label>osapi.h</label>
        <link refid="osapi_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="772" relation="include">
        </childnode>
        <childnode refid="773" relation="include">
        </childnode>
        <childnode refid="775" relation="include">
        </childnode>
        <childnode refid="776" relation="include">
        </childnode>
        <childnode refid="777" relation="include">
        </childnode>
        <childnode refid="778" relation="include">
        </childnode>
        <childnode refid="774" relation="include">
        </childnode>
      </node>
      <node id="778">
        <label>osapi-os-timer.h</label>
        <link refid="osapi-os-timer_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="792">
        <label>lc_msgdefs.h</label>
        <link refid="lc__msgdefs_8h"/>
        <childnode refid="793" relation="include">
        </childnode>
      </node>
      <node id="777">
        <label>osapi-os-loader.h</label>
        <link refid="osapi-os-loader_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="774">
        <label>osapi-os-rtm.h</label>
        <link refid="osapi-os-rtm_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="785">
        <label>cfe_evs_msg.h</label>
        <link refid="cfe__evs__msg_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
      </node>
      <node id="769">
        <label>cfe.h</label>
        <link refid="cfe_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="780" relation="include">
        </childnode>
        <childnode refid="781" relation="include">
        </childnode>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="789" relation="include">
        </childnode>
      </node>
      <node id="786">
        <label>cfe_sb.h</label>
        <link refid="cfe__sb_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
      </node>
      <node id="770">
        <label>common_types.h</label>
        <link refid="common__types_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
      </node>
      <node id="783">
        <label>cfe_evs.h</label>
        <link refid="cfe__evs_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="771" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
      </node>
      <node id="793">
        <label>lc_platform_cfg.h</label>
        <link refid="lc__platform__cfg_8h"/>
      </node>
      <node id="781">
        <label>cfe_es.h</label>
        <link refid="cfe__es_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="779" relation="include">
        </childnode>
        <childnode refid="782" relation="include">
        </childnode>
      </node>
      <node id="788">
        <label>cfe_fs.h</label>
        <link refid="cfe__fs_8h" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag"/>
        <childnode refid="770" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
      </node>
      <node id="790">
        <label>lc_app.h</label>
        <link refid="lc__app_8h"/>
        <childnode refid="769" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
        <childnode refid="794" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="798">
        <label>apps/lc/fsw/src/lc_cmds.c</label>
        <link refid="lc__cmds_8c"/>
      </node>
      <node id="799">
        <label>apps/lc/fsw/src/lc_watch.c</label>
        <link refid="lc__watch_8c"/>
      </node>
      <node id="796">
        <label>apps/lc/fsw/src/lc_watch.h</label>
        <link refid="lc_watch.h"/>
        <childnode refid="797" relation="include">
        </childnode>
        <childnode refid="798" relation="include">
        </childnode>
        <childnode refid="799" relation="include">
        </childnode>
      </node>
      <node id="797">
        <label>apps/lc/fsw/src/lc_app.c</label>
        <link refid="lc__app_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LC_CheckMsgForWPs</definition>
        <argsstring>(CFE_SB_MsgId_t MessageID, CFE_SB_MsgPtr_t MessagePtr)</argsstring>
        <name>LC_CheckMsgForWPs</name>
        <param>
          <type><ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref></type>
          <declname>MessageID</declname>
        </param>
        <param>
          <type><ref refid="cfe__sb_8h_1ab774c47a48e3b6fb0bdd42fb2cb80ad8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref></type>
          <declname>MessagePtr</declname>
        </param>
        <briefdescription>
<para>Check message for watchpoints. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Processes a single software bus command pipe message that doesn&apos;t match any LC predefined command or message ids, which indicates it&apos;s probably a watchpoint message. It will search the watchpoint definition table for matches to this MessageID and handle them as needed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MessageID</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref> that holds the message ID</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MessagePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1ab774c47a48e3b6fb0bdd42fb2cb80ad8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref> pointer that references the software bus message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="lc__watch_8h_1acebcdfbd549003d5c9bbde61505e7111" kindref="member">LC_ProcessWP</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="56" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="246" bodyend="323"/>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1adf8ead29ddbb83f4af9491cb14994f3e">CFE_SB_GetMsgTime</references>
        <references refid="cfe__time_8h_1abf540f01ef8e0b2c7f2ec755148b6ac6">CFE_TIME_GetTime</references>
        <references refid="struct_l_c___app_data__t_1ab0fc79013c9c3f2cad64eacc296d607a" compoundref="lc__app_8h" startline="198">LC_AppData_t::CurrentLCState</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_l_c___oper_data__t_1aad796990d4c961937e9f676bc189de12" compoundref="lc__app_8h" startline="160">LC_OperData_t::HashTable</references>
        <references refid="lc__app_8c_1a1b96a6f604a46f840a12fddcd7b1fc12" compoundref="lc__app_8c" startline="41">LC_AppData</references>
        <references refid="lc__watch_8c_1a8301d8942fa80a77b443e9ad19bdd133" compoundref="lc__watch_8c" startline="35" endline="58">LC_GetHashTableIndex</references>
        <references refid="lc__events_8h_1a8da45310ae5723ee2c9a738678c18b7a" compoundref="lc__events_8h" startline="829">LC_MID_INF_EID</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__watch_8c_1acebcdfbd549003d5c9bbde61505e7111" compoundref="lc__watch_8c" startline="331" endline="448">LC_ProcessWP</references>
        <references refid="lc__msgdefs_8h_1a3fd2c719b6359d46e31e4726cb3c72d1" compoundref="lc__msgdefs_8h" startline="45">LC_STATE_DISABLED</references>
        <references refid="lc__perfids_8h_1ad8121b157e682f69e643e17033d36e2c" compoundref="lc__perfids_8h" startline="31">LC_WDT_SEARCH_PERF_ID</references>
        <references refid="lc__watch_8c_1a4acd49120c9e78940ae0d0268a12804a" compoundref="lc__watch_8c" startline="785" endline="862">LC_WPOffsetValid</references>
        <references refid="struct_l_c___m_list_tag_1a8a6f2748898a08b9196075e1a2eb1adc" compoundref="lc__app_8h" startline="110">LC_MListTag::MessageID</references>
        <references refid="struct_l_c___app_data__t_1a5a1356a99a6ce83c6ff9d86c462ed272" compoundref="lc__app_8h" startline="187">LC_AppData_t::MonitoredMsgCount</references>
        <references refid="struct_l_c___w_list_tag_1a3d0018412641df4aa4ba28df08c00315" compoundref="lc__app_8h" startline="98">LC_WListTag::Next</references>
        <references refid="struct_l_c___m_list_tag_1a99217b291805d655987630ccf5ede49d" compoundref="lc__app_8h" startline="108">LC_MListTag::Next</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="struct_c_f_e___t_i_m_e___sys_time__t_1ac10c014228075ee87ea7938348a98c1c">CFE_TIME_SysTime_t::Seconds</references>
        <references refid="struct_c_f_e___t_i_m_e___sys_time__t_1a2af2ad470fa81d8eb5c23f68b54ab81a">CFE_TIME_SysTime_t::Subseconds</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_l_c___w_list_tag_1aa4819e46e56d676d0507c74e8310c033" compoundref="lc__app_8h" startline="100">LC_WListTag::WatchIndex</references>
        <references refid="struct_l_c___m_list_tag_1af7ae22dc3f82fc2638e691880c489b58" compoundref="lc__app_8h" startline="113">LC_MListTag::WatchPtList</references>
        <referencedby refid="lc__cmds_8h_1a87ded018db3d328d1c8008e61e04b399" compoundref="lc__cmds_8c" startline="37" endline="120">LC_AppPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1abf6cf8d9c9ec77aa8a3210c1ec7d3225" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LC_ValidateWDT</definition>
        <argsstring>(void *TableData)</argsstring>
        <name>LC_ValidateWDT</name>
        <param>
          <type>void *</type>
          <declname>TableData</declname>
        </param>
        <briefdescription>
<para>Validate watchpoint definition table (WDT) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by table services when a validation of the watchpoint definition table is required</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*TableData</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the table data to validate</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="6" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a7ed7d436460d25c816ec56d9d4748391" kindref="member">LC_WDTVAL_ERR_DATATYPE</ref> </para></entry><entry thead="no"><para>Invalid DataType.   </para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1af76b01d098a3f87be35af695ab6e1043" kindref="member">LC_WDTVAL_ERR_OPER</ref> </para></entry><entry thead="no"><para>Invalid OperatorID.   </para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a9f4bfc426fe056eab27a1e9dd5602cfd" kindref="member">LC_WDTVAL_ERR_MID</ref> </para></entry><entry thead="no"><para>Invalid MessageID.   </para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a8b06a12b8b2b6f12277e1cde1e64a1a3" kindref="member">LC_WDTVAL_ERR_FPNAN</ref> </para></entry><entry thead="no"><para>ComparisonValue is NAN float.   </para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a66c8d593d28c6dc8023eb1d135ff29da" kindref="member">LC_WDTVAL_ERR_FPINF</ref> </para></entry><entry thead="no"><para>ComparisonValue is infinite float.   </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="see"><para><ref refid="lc__action_8h_1a337165fbbfd418481f55ea0828d45075" kindref="member">LC_ValidateADT</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="83" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="985" bodyend="1130"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="struct_l_c___w_d_t_entry__t_1affb55a4600d30e3d25e6acd417aca669" compoundref="lc__tbl_8h" startline="73">LC_WDTEntry_t::ComparisonValue</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a9e490f22ea55af96689ea07d7972037f" compoundref="lc__tbl_8h" startline="64">LC_WDTEntry_t::DataType</references>
        <references refid="lc__tbldefs_8h_1a91b60c922e73e83d3b2af956667a4e12" compoundref="lc__tbldefs_8h" startline="45">LC_DATA_BYTE</references>
        <references refid="lc__tbldefs_8h_1a2d54600104c4fb3c19df2a6e15a4c765" compoundref="lc__tbldefs_8h" startline="64">LC_DATA_DWORD_BE</references>
        <references refid="lc__tbldefs_8h_1a961e3f3e8995c4465677132cb235077c" compoundref="lc__tbldefs_8h" startline="68">LC_DATA_DWORD_LE</references>
        <references refid="lc__tbldefs_8h_1acac087e06f44c14a08d2bdcaa5d9cd61" compoundref="lc__tbldefs_8h" startline="80">LC_DATA_FLOAT_BE</references>
        <references refid="lc__tbldefs_8h_1aaf89266fbe03b540f36ae66b0489d295" compoundref="lc__tbldefs_8h" startline="86">LC_DATA_FLOAT_LE</references>
        <references refid="lc__tbldefs_8h_1ae41549e9caee6fc4a193d7c14c1440d5" compoundref="lc__tbldefs_8h" startline="46">LC_DATA_UBYTE</references>
        <references refid="lc__tbldefs_8h_1acd57943bfd56ff9f225d56bc813940a0" compoundref="lc__tbldefs_8h" startline="72">LC_DATA_UDWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ac044788699a69206413c99ff79581b52" compoundref="lc__tbldefs_8h" startline="76">LC_DATA_UDWORD_LE</references>
        <references refid="lc__tbldefs_8h_1a10173156d27255ba9b7913d3fbbb1d23" compoundref="lc__tbldefs_8h" startline="56">LC_DATA_UWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ad5fb3e315cfab68863890e49440c4866" compoundref="lc__tbldefs_8h" startline="60">LC_DATA_UWORD_LE</references>
        <references refid="lc__tbldefs_8h_1ac307b33c3f2bf6ae154e07eb94f9afa9" compoundref="lc__tbldefs_8h" startline="48">LC_DATA_WORD_BE</references>
        <references refid="lc__tbldefs_8h_1a1317e31d8439396c33f8b5508c9e1071" compoundref="lc__tbldefs_8h" startline="52">LC_DATA_WORD_LE</references>
        <references refid="lc__platform__cfg_8h_1a3b43c5fab123709355610bb6382804d3" compoundref="lc__platform__cfg_8h" startline="76">LC_MAX_WATCHPOINTS</references>
        <references refid="lc__tbldefs_8h_1a641b55ad4210e3a2700b0bc929809cb9" compoundref="lc__tbldefs_8h" startline="103">LC_OPER_CUSTOM</references>
        <references refid="lc__tbldefs_8h_1a14f3a372cba17012bb7f75c817d9d01a" compoundref="lc__tbldefs_8h" startline="100">LC_OPER_EQ</references>
        <references refid="lc__tbldefs_8h_1a4de50302ba6fc68af3b53e54f6e3343b" compoundref="lc__tbldefs_8h" startline="101">LC_OPER_GE</references>
        <references refid="lc__tbldefs_8h_1a0f05d0f087c7320999a5e18a3a4c159e" compoundref="lc__tbldefs_8h" startline="102">LC_OPER_GT</references>
        <references refid="lc__tbldefs_8h_1a0a1f43732b16548c0d80e06a572a880b" compoundref="lc__tbldefs_8h" startline="98">LC_OPER_LE</references>
        <references refid="lc__tbldefs_8h_1a71afc99146cd25a4a933675324ecdddf" compoundref="lc__tbldefs_8h" startline="97">LC_OPER_LT</references>
        <references refid="lc__tbldefs_8h_1a4899524f7ed062c7b311af543aa557e9" compoundref="lc__tbldefs_8h" startline="99">LC_OPER_NE</references>
        <references refid="lc__watch_8c_1a5ad064b7f6f91854e777b9f6d6489a93" compoundref="lc__watch_8c" startline="1174" endline="1201">LC_Uint32IsInfinite</references>
        <references refid="lc__watch_8c_1a115a9eeea1d8588dcedede0121430e42" compoundref="lc__watch_8c" startline="1138" endline="1165">LC_Uint32IsNAN</references>
        <references refid="lc__tbldefs_8h_1ab375eb9a6810f8ed483616227b37846c" compoundref="lc__tbldefs_8h" startline="44">LC_WATCH_NOT_USED</references>
        <references refid="lc__tbldefs_8h_1a7ed7d436460d25c816ec56d9d4748391" compoundref="lc__tbldefs_8h" startline="146">LC_WDTVAL_ERR_DATATYPE</references>
        <references refid="lc__events_8h_1a7cbdf2847f4f3e705711a503d0274a36" compoundref="lc__events_8h" startline="930">LC_WDTVAL_ERR_EID</references>
        <references refid="lc__tbldefs_8h_1a66c8d593d28c6dc8023eb1d135ff29da" compoundref="lc__tbldefs_8h" startline="150">LC_WDTVAL_ERR_FPINF</references>
        <references refid="lc__tbldefs_8h_1a8b06a12b8b2b6f12277e1cde1e64a1a3" compoundref="lc__tbldefs_8h" startline="149">LC_WDTVAL_ERR_FPNAN</references>
        <references refid="lc__tbldefs_8h_1a9f4bfc426fe056eab27a1e9dd5602cfd" compoundref="lc__tbldefs_8h" startline="148">LC_WDTVAL_ERR_MID</references>
        <references refid="lc__tbldefs_8h_1af76b01d098a3f87be35af695ab6e1043" compoundref="lc__tbldefs_8h" startline="147">LC_WDTVAL_ERR_OPER</references>
        <references refid="lc__events_8h_1a98880682ba32f941d813caa1090adeb6" compoundref="lc__events_8h" startline="914">LC_WDTVAL_FPERR_EID</references>
        <references refid="lc__events_8h_1a44b541c902b35ec3543444143773798d" compoundref="lc__events_8h" startline="947">LC_WDTVAL_INF_EID</references>
        <references refid="lc__tbldefs_8h_1adb2a3137d81913199f74020a59737fc5" compoundref="lc__tbldefs_8h" startline="145">LC_WDTVAL_NO_ERR</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a94df08cfb4f5d17da7fb3367d01c6c13" compoundref="lc__tbl_8h" startline="66">LC_WDTEntry_t::MessageID</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a33f201289b89ef0a542fb7a88ad432a4" compoundref="lc__tbl_8h" startline="65">LC_WDTEntry_t::OperatorID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="union_l_c___multi_type__t_1a8fc746ac0dd201dd9f006f92e58199cd" compoundref="lc__tbl_8h" startline="50">LC_MultiType_t::Unsigned32</references>
        <referencedby refid="lc__app_8h_1a4085a38bec3dc28bcfdef58b721b7d0d" compoundref="lc__app_8c" startline="577" endline="723">LC_CreateDefinitionTables</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a99b6bf02d703e90c2ecc8c2f7b3350c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LC_CreateHashTable</definition>
        <argsstring>(void)</argsstring>
        <name>LC_CreateHashTable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create watchpoint hash table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Creates a hash table to optimize the process of getting direct access to all the watchpoint table entries that reference a particular MessageID without having to search the entire table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="see"><para><ref refid="lc__watch_8h_1a8301d8942fa80a77b443e9ad19bdd133" kindref="member">LC_GetHashTableIndex</ref>, <ref refid="lc__watch_8h_1aab872d73326be7501c52ecaae5552b52" kindref="member">LC_AddWatchpoint</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="99" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="67" bodyend="133"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a70ea901e65f03221e3787d73733db060">CFE_SB_Unsubscribe</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="struct_l_c___oper_data__t_1ad38cf7ad568bd1198135eabcd1a8d5b9" compoundref="lc__app_8h" startline="131">LC_OperData_t::CmdPipe</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a9e490f22ea55af96689ea07d7972037f" compoundref="lc__tbl_8h" startline="64">LC_WDTEntry_t::DataType</references>
        <references refid="struct_l_c___oper_data__t_1aad796990d4c961937e9f676bc189de12" compoundref="lc__app_8h" startline="160">LC_OperData_t::HashTable</references>
        <references refid="lc__watch_8c_1aab872d73326be7501c52ecaae5552b52" compoundref="lc__watch_8c" startline="142" endline="238">LC_AddWatchpoint</references>
        <references refid="lc__app_8h_1a2ab61f929681c9166cf5b16b9165da43" compoundref="lc__app_8h" startline="92">LC_HASH_TABLE_ENTRIES</references>
        <references refid="lc__platform__cfg_8h_1a3b43c5fab123709355610bb6382804d3" compoundref="lc__platform__cfg_8h" startline="76">LC_MAX_WATCHPOINTS</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__events_8h_1a3188fd5869e40de65ee08ad6d2eb8f00" compoundref="lc__events_8h" startline="752">LC_UNSUB_WP_ERR_EID</references>
        <references refid="lc__tbldefs_8h_1ab375eb9a6810f8ed483616227b37846c" compoundref="lc__tbldefs_8h" startline="44">LC_WATCH_NOT_USED</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a94df08cfb4f5d17da7fb3367d01c6c13" compoundref="lc__tbl_8h" startline="66">LC_WDTEntry_t::MessageID</references>
        <references refid="struct_l_c___m_list_tag_1a8a6f2748898a08b9196075e1a2eb1adc" compoundref="lc__app_8h" startline="110">LC_MListTag::MessageID</references>
        <references refid="struct_l_c___oper_data__t_1a5515ab6487377f75e4b6de111daca5ff" compoundref="lc__app_8h" startline="153">LC_OperData_t::MessageIDsCount</references>
        <references refid="struct_l_c___oper_data__t_1a6512b238407be0551ce28ba621108fce" compoundref="lc__app_8h" startline="166">LC_OperData_t::MessageLinks</references>
        <references refid="struct_l_c___w_list_tag_1a3d0018412641df4aa4ba28df08c00315" compoundref="lc__app_8h" startline="98">LC_WListTag::Next</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="struct_l_c___w_list_tag_1aa4819e46e56d676d0507c74e8310c033" compoundref="lc__app_8h" startline="100">LC_WListTag::WatchIndex</references>
        <references refid="struct_l_c___oper_data__t_1aaf3e93cd13fa85e92c5943fb2eacd22f" compoundref="lc__app_8h" startline="150">LC_OperData_t::WatchpointCount</references>
        <references refid="struct_l_c___oper_data__t_1a8b90a3b89a22d7f5dc1d268a380404c7" compoundref="lc__app_8h" startline="167">LC_OperData_t::WatchPtLinks</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <referencedby refid="lc__cmds_8h_1a01e5376da2846281e33cad4f77b00376" compoundref="lc__cmds_8c" startline="1066" endline="1128">LC_ManageTables</referencedby>
        <referencedby refid="lc__app_8h_1aa56fa68d9b7c2592c6303f88b8cf767a" compoundref="lc__app_8c" startline="335" endline="496">LC_TableInit</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1acebcdfbd549003d5c9bbde61505e7111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LC_ProcessWP</definition>
        <argsstring>(uint16 WatchIndex, CFE_SB_MsgPtr_t MessagePtr, CFE_TIME_SysTime_t Timestamp)</argsstring>
        <name>LC_ProcessWP</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="cfe__sb_8h_1ab774c47a48e3b6fb0bdd42fb2cb80ad8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref></type>
          <declname>MessagePtr</declname>
        </param>
        <param>
          <type><ref refid="struct_c_f_e___t_i_m_e___sys_time__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TIME_SysTime_t</ref></type>
          <declname>Timestamp</declname>
        </param>
        <briefdescription>
<para>Process a single watchpoint. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will evaluate a single watchpoint</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to evaluate (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MessagePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1ab774c47a48e3b6fb0bdd42fb2cb80ad8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref> pointer that references the software bus message that contains the watchpoint data</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Timestamp</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="struct_c_f_e___t_i_m_e___sys_time__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TIME_SysTime_t</ref> timestamp to use to update the watchpoint results data if a state transition is detected </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="123" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="331" bodyend="448"/>
        <references refid="struct_l_c___w_d_t_entry__t_1aee107f5512c22fa36937f503df52f7a4" compoundref="lc__tbl_8h" startline="71">LC_WDTEntry_t::BitMask</references>
        <references refid="struct_l_c___w_r_t_entry__t_1a2f8ade5c69898efa0d8e1be9ca1171e6" compoundref="lc__tbl_8h" startline="144">LC_WRTEntry_t::ConsecutiveTrueCount</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ae494f7ebfb011f62deed6e3e381f437b" compoundref="lc__tbl_8h" startline="137">LC_WRTEntry_t::CountdownToStale</references>
        <references refid="struct_l_c___w_r_t_entry__t_1a11127c93e7d0cc6b56951b85d0b2e1c2" compoundref="lc__tbl_8h" startline="146">LC_WRTEntry_t::CumulativeTrueCount</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a74a18e402d79a965eace149e8835cb87" compoundref="lc__tbl_8h" startline="78">LC_WDTEntry_t::CustomFuncArgument</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a9e490f22ea55af96689ea07d7972037f" compoundref="lc__tbl_8h" startline="64">LC_WDTEntry_t::DataType</references>
        <references refid="struct_l_c___w_r_t_transition__t_1a3fd9b25221be84b6d4085ef18a2216c0" compoundref="lc__tbl_8h" startline="121">LC_WRTTransition_t::DataType</references>
        <references refid="struct_l_c___w_r_t_entry__t_1a8d314e2e1ba2aed8fa72184d9a13ca84" compoundref="lc__tbl_8h" startline="140">LC_WRTEntry_t::EvaluationCount</references>
        <references refid="struct_l_c___w_r_t_entry__t_1a9522958cefe4681695a8b6e058ba37ac" compoundref="lc__tbl_8h" startline="142">LC_WRTEntry_t::FalseToTrueCount</references>
        <references refid="struct_l_c___w_r_t_entry__t_1a3db983fceb2ea8f20a93ab767c9d143b" compoundref="lc__tbl_8h" startline="148">LC_WRTEntry_t::LastFalseToTrue</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ad556fd47c33e59b29a9db2c65a8848a3" compoundref="lc__tbl_8h" startline="149">LC_WRTEntry_t::LastTrueToFalse</references>
        <references refid="lc__custom_8h_1a1625381bf4633ca9f2031849f33d3e4a">LC_CustomFunction</references>
        <references refid="lc__watch_8c_1ad12e535a25095691f281eb41d1d77d3e" compoundref="lc__watch_8c" startline="884" endline="978">LC_GetSizedWPData</references>
        <references refid="lc__tbldefs_8h_1a641b55ad4210e3a2700b0bc929809cb9" compoundref="lc__tbldefs_8h" startline="103">LC_OPER_CUSTOM</references>
        <references refid="lc__watch_8c_1a75a9d72418617f8fd042643512bfbbbf" compoundref="lc__watch_8c" startline="455" endline="572">LC_OperatorCompare</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" compoundref="lc__tbldefs_8h" startline="126">LC_WATCH_FALSE</references>
        <references refid="lc__tbldefs_8h_1ad577be2d810d1c398053a16fb00c33a9" compoundref="lc__tbldefs_8h" startline="125">LC_WATCH_STALE</references>
        <references refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" compoundref="lc__tbldefs_8h" startline="128">LC_WATCH_TRUE</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a33f201289b89ef0a542fb7a88ad432a4" compoundref="lc__tbl_8h" startline="65">LC_WDTEntry_t::OperatorID</references>
        <references refid="struct_l_c___w_d_t_entry__t_1ab53f23ea713d39892e2c269a50a9b2da" compoundref="lc__tbl_8h" startline="75">LC_WDTEntry_t::ResultAgeWhenStale</references>
        <references refid="struct_c_f_e___t_i_m_e___sys_time__t_1ac10c014228075ee87ea7938348a98c1c">CFE_TIME_SysTime_t::Seconds</references>
        <references refid="struct_c_f_e___t_i_m_e___sys_time__t_1a2af2ad470fa81d8eb5c23f68b54ab81a">CFE_TIME_SysTime_t::Subseconds</references>
        <references refid="struct_l_c___w_r_t_transition__t_1af5c836a49451ea63b2c4b22c948ad03b" compoundref="lc__tbl_8h" startline="125">LC_WRTTransition_t::Timestamp</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_l_c___w_r_t_transition__t_1afaf7bea2f3f0917887dbd40f1d650384" compoundref="lc__tbl_8h" startline="119">LC_WRTTransition_t::Value</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a6f2fa9d965e3adf2c28a224e80330655" compoundref="lc__tbl_8h" startline="68">LC_WDTEntry_t::WatchpointOffset</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ad30ee0f8ef15103e531c33cd5b29b7b9" compoundref="lc__tbl_8h" startline="133">LC_WRTEntry_t::WatchResult</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <references refid="struct_l_c___oper_data__t_1a4c1246004074c422765ed44d323951f9" compoundref="lc__app_8h" startline="136">LC_OperData_t::WRTPtr</references>
        <referencedby refid="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" compoundref="lc__watch_8c" startline="246" endline="323">LC_CheckMsgForWPs</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a75a9d72418617f8fd042643512bfbbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 LC_OperatorCompare</definition>
        <argsstring>(uint16 WatchIndex, uint32 ProcessedWPData)</argsstring>
        <name>LC_OperatorCompare</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>ProcessedWPData</declname>
        </param>
        <briefdescription>
<para>Operator comparison. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will perform the watchpoint data comparison based upon the operator and data type specified in the watchpoint definition table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to compare (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ProcessedWPData</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint data extracted from the message that it was contained in. This is the data after any sizing, bit-masking, and endianess fixing that LC might have done according to the watchpoint definition</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" kindref="member">LC_WATCH_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="lc__watch_8h_1a74722fc33938e1b80caafffccb2ca7cf" kindref="member">LC_SignedCompare</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="lc__watch_8h_1a31b37668a39bebc86b7e461168fd5b6f" kindref="member">LC_UnsignedCompare</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="lc__watch_8h_1a2a2e97b3fdc06ae4b890c8046084d8da" kindref="member">LC_FloatCompare</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="156" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="455" bodyend="572"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="struct_l_c___w_d_t_entry__t_1affb55a4600d30e3d25e6acd417aca669" compoundref="lc__tbl_8h" startline="73">LC_WDTEntry_t::ComparisonValue</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a9e490f22ea55af96689ea07d7972037f" compoundref="lc__tbl_8h" startline="64">LC_WDTEntry_t::DataType</references>
        <references refid="lc__tbldefs_8h_1a91b60c922e73e83d3b2af956667a4e12" compoundref="lc__tbldefs_8h" startline="45">LC_DATA_BYTE</references>
        <references refid="lc__tbldefs_8h_1a2d54600104c4fb3c19df2a6e15a4c765" compoundref="lc__tbldefs_8h" startline="64">LC_DATA_DWORD_BE</references>
        <references refid="lc__tbldefs_8h_1a961e3f3e8995c4465677132cb235077c" compoundref="lc__tbldefs_8h" startline="68">LC_DATA_DWORD_LE</references>
        <references refid="lc__tbldefs_8h_1acac087e06f44c14a08d2bdcaa5d9cd61" compoundref="lc__tbldefs_8h" startline="80">LC_DATA_FLOAT_BE</references>
        <references refid="lc__tbldefs_8h_1aaf89266fbe03b540f36ae66b0489d295" compoundref="lc__tbldefs_8h" startline="86">LC_DATA_FLOAT_LE</references>
        <references refid="lc__tbldefs_8h_1ae41549e9caee6fc4a193d7c14c1440d5" compoundref="lc__tbldefs_8h" startline="46">LC_DATA_UBYTE</references>
        <references refid="lc__tbldefs_8h_1acd57943bfd56ff9f225d56bc813940a0" compoundref="lc__tbldefs_8h" startline="72">LC_DATA_UDWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ac044788699a69206413c99ff79581b52" compoundref="lc__tbldefs_8h" startline="76">LC_DATA_UDWORD_LE</references>
        <references refid="lc__tbldefs_8h_1a10173156d27255ba9b7913d3fbbb1d23" compoundref="lc__tbldefs_8h" startline="56">LC_DATA_UWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ad5fb3e315cfab68863890e49440c4866" compoundref="lc__tbldefs_8h" startline="60">LC_DATA_UWORD_LE</references>
        <references refid="lc__tbldefs_8h_1ac307b33c3f2bf6ae154e07eb94f9afa9" compoundref="lc__tbldefs_8h" startline="48">LC_DATA_WORD_BE</references>
        <references refid="lc__tbldefs_8h_1a1317e31d8439396c33f8b5508c9e1071" compoundref="lc__tbldefs_8h" startline="52">LC_DATA_WORD_LE</references>
        <references refid="lc__watch_8c_1a2a2e97b3fdc06ae4b890c8046084d8da" compoundref="lc__watch_8c" startline="694" endline="777">LC_FloatCompare</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__watch_8c_1a74722fc33938e1b80caafffccb2ca7cf" compoundref="lc__watch_8c" startline="580" endline="630">LC_SignedCompare</references>
        <references refid="lc__watch_8c_1a31b37668a39bebc86b7e461168fd5b6f" compoundref="lc__watch_8c" startline="637" endline="687">LC_UnsignedCompare</references>
        <references refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" compoundref="lc__tbldefs_8h" startline="130">LC_WATCH_ERROR</references>
        <references refid="lc__events_8h_1aa773d0739f68ff03e61016828728ad3e" compoundref="lc__events_8h" startline="844">LC_WP_DATATYPE_ERR_EID</references>
        <references refid="union_l_c___multi_type__t_1a1ecd725deed236ea9cfc00d55309b165" compoundref="lc__tbl_8h" startline="54">LC_MultiType_t::Signed16</references>
        <references refid="union_l_c___multi_type__t_1a4f6c39ad92af7b4ab4c0c15e1b28378e" compoundref="lc__tbl_8h" startline="51">LC_MultiType_t::Signed32</references>
        <references refid="union_l_c___multi_type__t_1a7407f6ffbea00584fa609dea4d841e03" compoundref="lc__tbl_8h" startline="56">LC_MultiType_t::Signed8</references>
        <references refid="union_l_c___multi_type__t_1abc7bf0d8715f52b6caf4f9fbaee9e6f0" compoundref="lc__tbl_8h" startline="53">LC_MultiType_t::Unsigned16</references>
        <references refid="union_l_c___multi_type__t_1a8fc746ac0dd201dd9f006f92e58199cd" compoundref="lc__tbl_8h" startline="50">LC_MultiType_t::Unsigned32</references>
        <references refid="union_l_c___multi_type__t_1ad2f1e75df2662fe54aaa142c47c02ede" compoundref="lc__tbl_8h" startline="55">LC_MultiType_t::Unsigned8</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <referencedby refid="lc__watch_8h_1acebcdfbd549003d5c9bbde61505e7111" compoundref="lc__watch_8c" startline="331" endline="448">LC_ProcessWP</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a74722fc33938e1b80caafffccb2ca7cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 LC_SignedCompare</definition>
        <argsstring>(uint16 WatchIndex, int32 WPValue, int32 CompareValue)</argsstring>
        <name>LC_SignedCompare</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>WPValue</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>CompareValue</declname>
        </param>
        <briefdescription>
<para>Signed comparison. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will perform a signed watchpoint data comparison based upon the operator specified in the watchpoint definition table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to compare (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">WPValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint data extracted from the message that it was contained in. This is the data after any sizing, bit-masking, and endianess fixing that LC might have done according to the watchpoint definition</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">CompareValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The comparison value specified in the watchpoint definition table (sign extended, if needed, in an int32)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" kindref="member">LC_WATCH_TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" kindref="member">LC_WATCH_FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" kindref="member">LC_WATCH_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="191" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="580" bodyend="630"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="lc__tbldefs_8h_1a14f3a372cba17012bb7f75c817d9d01a" compoundref="lc__tbldefs_8h" startline="100">LC_OPER_EQ</references>
        <references refid="lc__tbldefs_8h_1a4de50302ba6fc68af3b53e54f6e3343b" compoundref="lc__tbldefs_8h" startline="101">LC_OPER_GE</references>
        <references refid="lc__tbldefs_8h_1a0f05d0f087c7320999a5e18a3a4c159e" compoundref="lc__tbldefs_8h" startline="102">LC_OPER_GT</references>
        <references refid="lc__tbldefs_8h_1a0a1f43732b16548c0d80e06a572a880b" compoundref="lc__tbldefs_8h" startline="98">LC_OPER_LE</references>
        <references refid="lc__tbldefs_8h_1a71afc99146cd25a4a933675324ecdddf" compoundref="lc__tbldefs_8h" startline="97">LC_OPER_LT</references>
        <references refid="lc__tbldefs_8h_1a4899524f7ed062c7b311af543aa557e9" compoundref="lc__tbldefs_8h" startline="99">LC_OPER_NE</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" compoundref="lc__tbldefs_8h" startline="130">LC_WATCH_ERROR</references>
        <references refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" compoundref="lc__tbldefs_8h" startline="126">LC_WATCH_FALSE</references>
        <references refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" compoundref="lc__tbldefs_8h" startline="128">LC_WATCH_TRUE</references>
        <references refid="lc__events_8h_1afb852734c7ab653c42c799140edb4894" compoundref="lc__events_8h" startline="859">LC_WP_OPERID_ERR_EID</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a33f201289b89ef0a542fb7a88ad432a4" compoundref="lc__tbl_8h" startline="65">LC_WDTEntry_t::OperatorID</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <referencedby refid="lc__watch_8h_1a75a9d72418617f8fd042643512bfbbbf" compoundref="lc__watch_8c" startline="455" endline="572">LC_OperatorCompare</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a31b37668a39bebc86b7e461168fd5b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 LC_UnsignedCompare</definition>
        <argsstring>(uint16 WatchIndex, uint32 WPValue, uint32 CompareValue)</argsstring>
        <name>LC_UnsignedCompare</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>WPValue</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>CompareValue</declname>
        </param>
        <briefdescription>
<para>Unsigned comparison. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will perform an unsigned watchpoint data comparison based upon the operator specified in the watchpoint definition table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to compare (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">WPValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint data extracted from the message that it was contained in. This is the data after any sizing, bit-masking, and endianess fixing that LC might have done according to the watchpoint definition</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">CompareValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The comparison value specified in the watchpoint definition table (zero extended, if needed, in an uint32)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" kindref="member">LC_WATCH_TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" kindref="member">LC_WATCH_FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" kindref="member">LC_WATCH_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="227" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="637" bodyend="687"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="lc__tbldefs_8h_1a14f3a372cba17012bb7f75c817d9d01a" compoundref="lc__tbldefs_8h" startline="100">LC_OPER_EQ</references>
        <references refid="lc__tbldefs_8h_1a4de50302ba6fc68af3b53e54f6e3343b" compoundref="lc__tbldefs_8h" startline="101">LC_OPER_GE</references>
        <references refid="lc__tbldefs_8h_1a0f05d0f087c7320999a5e18a3a4c159e" compoundref="lc__tbldefs_8h" startline="102">LC_OPER_GT</references>
        <references refid="lc__tbldefs_8h_1a0a1f43732b16548c0d80e06a572a880b" compoundref="lc__tbldefs_8h" startline="98">LC_OPER_LE</references>
        <references refid="lc__tbldefs_8h_1a71afc99146cd25a4a933675324ecdddf" compoundref="lc__tbldefs_8h" startline="97">LC_OPER_LT</references>
        <references refid="lc__tbldefs_8h_1a4899524f7ed062c7b311af543aa557e9" compoundref="lc__tbldefs_8h" startline="99">LC_OPER_NE</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" compoundref="lc__tbldefs_8h" startline="130">LC_WATCH_ERROR</references>
        <references refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" compoundref="lc__tbldefs_8h" startline="126">LC_WATCH_FALSE</references>
        <references refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" compoundref="lc__tbldefs_8h" startline="128">LC_WATCH_TRUE</references>
        <references refid="lc__events_8h_1afb852734c7ab653c42c799140edb4894" compoundref="lc__events_8h" startline="859">LC_WP_OPERID_ERR_EID</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a33f201289b89ef0a542fb7a88ad432a4" compoundref="lc__tbl_8h" startline="65">LC_WDTEntry_t::OperatorID</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <referencedby refid="lc__watch_8h_1a75a9d72418617f8fd042643512bfbbbf" compoundref="lc__watch_8c" startline="455" endline="572">LC_OperatorCompare</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a2a2e97b3fdc06ae4b890c8046084d8da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 LC_FloatCompare</definition>
        <argsstring>(uint16 WatchIndex, LC_MultiType_t WPMultiType, LC_MultiType_t CompareMultiType)</argsstring>
        <name>LC_FloatCompare</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="union_l_c___multi_type__t" kindref="compound">LC_MultiType_t</ref></type>
          <declname>WPMultiType</declname>
        </param>
        <param>
          <type><ref refid="union_l_c___multi_type__t" kindref="compound">LC_MultiType_t</ref></type>
          <declname>CompareMultiType</declname>
        </param>
        <briefdescription>
<para>Float comparison. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will perform an floating point watchpoint data comparison based upon the operator specified in the watchpoint definition table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to compare (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">WPMultiType</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint data extracted from the message that it was contained in. Stored in a multi-type union. This is the data after any sizing, bit-masking, and endianess fixing that LC might have done according to the watchpoint definition</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">CompareMultiType</parametername>
</parameternamelist>
<parameterdescription>
<para>The comparison value specified in the watchpoint definition table. Stored in a muti-type union so it can easily be accessed as a uint32 for validity checks</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" kindref="member">LC_WATCH_TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" kindref="member">LC_WATCH_FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" kindref="member">LC_WATCH_ERROR</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="266" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="694" bodyend="777"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="union_l_c___multi_type__t_1a4c54e2126446502db2e389a5932d27da" compoundref="lc__tbl_8h" startline="52">LC_MultiType_t::Float32</references>
        <references refid="lc__platform__cfg_8h_1ac4fb6e7c765b96cf193536d24cc7967d" compoundref="lc__platform__cfg_8h" startline="227">LC_FLOAT_TOLERANCE</references>
        <references refid="lc__tbldefs_8h_1a14f3a372cba17012bb7f75c817d9d01a" compoundref="lc__tbldefs_8h" startline="100">LC_OPER_EQ</references>
        <references refid="lc__tbldefs_8h_1a4de50302ba6fc68af3b53e54f6e3343b" compoundref="lc__tbldefs_8h" startline="101">LC_OPER_GE</references>
        <references refid="lc__tbldefs_8h_1a0f05d0f087c7320999a5e18a3a4c159e" compoundref="lc__tbldefs_8h" startline="102">LC_OPER_GT</references>
        <references refid="lc__tbldefs_8h_1a0a1f43732b16548c0d80e06a572a880b" compoundref="lc__tbldefs_8h" startline="98">LC_OPER_LE</references>
        <references refid="lc__tbldefs_8h_1a71afc99146cd25a4a933675324ecdddf" compoundref="lc__tbldefs_8h" startline="97">LC_OPER_LT</references>
        <references refid="lc__tbldefs_8h_1a4899524f7ed062c7b311af543aa557e9" compoundref="lc__tbldefs_8h" startline="99">LC_OPER_NE</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__watch_8c_1a115a9eeea1d8588dcedede0121430e42" compoundref="lc__watch_8c" startline="1138" endline="1165">LC_Uint32IsNAN</references>
        <references refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" compoundref="lc__tbldefs_8h" startline="130">LC_WATCH_ERROR</references>
        <references refid="lc__tbldefs_8h_1ad3dfc9c5fed52150fb7d7f252cbb5fe3" compoundref="lc__tbldefs_8h" startline="126">LC_WATCH_FALSE</references>
        <references refid="lc__tbldefs_8h_1a460943a8ab1a97e5b296e3b974877abf" compoundref="lc__tbldefs_8h" startline="128">LC_WATCH_TRUE</references>
        <references refid="lc__events_8h_1af4232118af1e1b76c5609a8474d7de18" compoundref="lc__events_8h" startline="876">LC_WP_NAN_ERR_EID</references>
        <references refid="lc__events_8h_1afb852734c7ab653c42c799140edb4894" compoundref="lc__events_8h" startline="859">LC_WP_OPERID_ERR_EID</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a33f201289b89ef0a542fb7a88ad432a4" compoundref="lc__tbl_8h" startline="65">LC_WDTEntry_t::OperatorID</references>
        <references refid="union_l_c___multi_type__t_1a8fc746ac0dd201dd9f006f92e58199cd" compoundref="lc__tbl_8h" startline="50">LC_MultiType_t::Unsigned32</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <referencedby refid="lc__watch_8h_1a75a9d72418617f8fd042643512bfbbbf" compoundref="lc__watch_8c" startline="455" endline="572">LC_OperatorCompare</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a4acd49120c9e78940ae0d0268a12804a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean LC_WPOffsetValid</definition>
        <argsstring>(uint16 WatchIndex, CFE_SB_MsgPtr_t MessagePtr)</argsstring>
        <name>LC_WPOffsetValid</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="cfe__sb_8h_1ab774c47a48e3b6fb0bdd42fb2cb80ad8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref></type>
          <declname>MessagePtr</declname>
        </param>
        <briefdescription>
<para>Watchpoint offset valid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will check if the watchpoint offset specified in the definition table would extend past the message that contains the watchpoint data</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to check (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">MessagePtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1ab774c47a48e3b6fb0bdd42fb2cb80ad8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref> pointer that references the software bus message that contains the watchpoint data</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>Returns TRUE if the offset is within the message size  </para></entry></row>
<row>
<entry thead="no"><para>Returns FALSE if the offset extends past message end  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="294" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="785" bodyend="862"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1ac32b86cf9e1d12a547792853c35f6aa1">CFE_SB_GetTotalMsgLength</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ae494f7ebfb011f62deed6e3e381f437b" compoundref="lc__tbl_8h" startline="137">LC_WRTEntry_t::CountdownToStale</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a9e490f22ea55af96689ea07d7972037f" compoundref="lc__tbl_8h" startline="64">LC_WDTEntry_t::DataType</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="lc__tbldefs_8h_1a91b60c922e73e83d3b2af956667a4e12" compoundref="lc__tbldefs_8h" startline="45">LC_DATA_BYTE</references>
        <references refid="lc__tbldefs_8h_1a2d54600104c4fb3c19df2a6e15a4c765" compoundref="lc__tbldefs_8h" startline="64">LC_DATA_DWORD_BE</references>
        <references refid="lc__tbldefs_8h_1a961e3f3e8995c4465677132cb235077c" compoundref="lc__tbldefs_8h" startline="68">LC_DATA_DWORD_LE</references>
        <references refid="lc__tbldefs_8h_1acac087e06f44c14a08d2bdcaa5d9cd61" compoundref="lc__tbldefs_8h" startline="80">LC_DATA_FLOAT_BE</references>
        <references refid="lc__tbldefs_8h_1aaf89266fbe03b540f36ae66b0489d295" compoundref="lc__tbldefs_8h" startline="86">LC_DATA_FLOAT_LE</references>
        <references refid="lc__tbldefs_8h_1ae41549e9caee6fc4a193d7c14c1440d5" compoundref="lc__tbldefs_8h" startline="46">LC_DATA_UBYTE</references>
        <references refid="lc__tbldefs_8h_1acd57943bfd56ff9f225d56bc813940a0" compoundref="lc__tbldefs_8h" startline="72">LC_DATA_UDWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ac044788699a69206413c99ff79581b52" compoundref="lc__tbldefs_8h" startline="76">LC_DATA_UDWORD_LE</references>
        <references refid="lc__tbldefs_8h_1a10173156d27255ba9b7913d3fbbb1d23" compoundref="lc__tbldefs_8h" startline="56">LC_DATA_UWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ad5fb3e315cfab68863890e49440c4866" compoundref="lc__tbldefs_8h" startline="60">LC_DATA_UWORD_LE</references>
        <references refid="lc__tbldefs_8h_1ac307b33c3f2bf6ae154e07eb94f9afa9" compoundref="lc__tbldefs_8h" startline="48">LC_DATA_WORD_BE</references>
        <references refid="lc__tbldefs_8h_1a1317e31d8439396c33f8b5508c9e1071" compoundref="lc__tbldefs_8h" startline="52">LC_DATA_WORD_LE</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" compoundref="lc__tbldefs_8h" startline="130">LC_WATCH_ERROR</references>
        <references refid="lc__events_8h_1aa773d0739f68ff03e61016828728ad3e" compoundref="lc__events_8h" startline="844">LC_WP_DATATYPE_ERR_EID</references>
        <references refid="lc__events_8h_1a1278adfff1d5625a242aab59ee32b41e" compoundref="lc__events_8h" startline="894">LC_WP_OFFSET_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a6f2fa9d965e3adf2c28a224e80330655" compoundref="lc__tbl_8h" startline="68">LC_WDTEntry_t::WatchpointOffset</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ad30ee0f8ef15103e531c33cd5b29b7b9" compoundref="lc__tbl_8h" startline="133">LC_WRTEntry_t::WatchResult</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <references refid="struct_l_c___oper_data__t_1a4c1246004074c422765ed44d323951f9" compoundref="lc__app_8h" startline="136">LC_OperData_t::WRTPtr</references>
        <referencedby refid="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" compoundref="lc__watch_8c" startline="246" endline="323">LC_CheckMsgForWPs</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1ad12e535a25095691f281eb41d1d77d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean LC_GetSizedWPData</definition>
        <argsstring>(uint16 WatchIndex, uint8 *WPDataPtr, uint32 *SizedDataPtr)</argsstring>
        <name>LC_GetSizedWPData</name>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>WatchIndex</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref> *</type>
          <declname>WPDataPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> *</type>
          <declname>SizedDataPtr</declname>
        </param>
        <briefdescription>
<para>Get sized data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Support function for watchpoint processing that will extract the watchpoint data from a software bus message based upon the data type specified in the watchpoint definition table and store it in a uint32. If there are any endian differences between LC and the watchpoint data, this is where it will get fixed up.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">WatchIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The watchpoint number to extract (zero based watchpoint definition table index)</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">WPDataPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the first byte of the watchpoint data as it exists in the software bus message it was received in</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">SizedDataPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the extracted watchpoint data should be stored</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">*SizedDataPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the extracted watchpoint data. This will be set to zero on error</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>Returns TRUE if no error  </para></entry></row>
<row>
<entry thead="no"><para>Returns FALSE if an error occurred  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="329" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="884" bodyend="978"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ae494f7ebfb011f62deed6e3e381f437b" compoundref="lc__tbl_8h" startline="137">LC_WRTEntry_t::CountdownToStale</references>
        <references refid="struct_l_c___w_d_t_entry__t_1a9e490f22ea55af96689ea07d7972037f" compoundref="lc__tbl_8h" startline="64">LC_WDTEntry_t::DataType</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="lc__watch_8c_1a4641ef7eb8b97a7be1689742cf5c20e2" compoundref="lc__watch_8c" startline="869" endline="877">LC_CopyBytesWithSwap</references>
        <references refid="lc__tbldefs_8h_1a91b60c922e73e83d3b2af956667a4e12" compoundref="lc__tbldefs_8h" startline="45">LC_DATA_BYTE</references>
        <references refid="lc__tbldefs_8h_1a2d54600104c4fb3c19df2a6e15a4c765" compoundref="lc__tbldefs_8h" startline="64">LC_DATA_DWORD_BE</references>
        <references refid="lc__tbldefs_8h_1a961e3f3e8995c4465677132cb235077c" compoundref="lc__tbldefs_8h" startline="68">LC_DATA_DWORD_LE</references>
        <references refid="lc__tbldefs_8h_1acac087e06f44c14a08d2bdcaa5d9cd61" compoundref="lc__tbldefs_8h" startline="80">LC_DATA_FLOAT_BE</references>
        <references refid="lc__tbldefs_8h_1aaf89266fbe03b540f36ae66b0489d295" compoundref="lc__tbldefs_8h" startline="86">LC_DATA_FLOAT_LE</references>
        <references refid="lc__tbldefs_8h_1ae41549e9caee6fc4a193d7c14c1440d5" compoundref="lc__tbldefs_8h" startline="46">LC_DATA_UBYTE</references>
        <references refid="lc__tbldefs_8h_1acd57943bfd56ff9f225d56bc813940a0" compoundref="lc__tbldefs_8h" startline="72">LC_DATA_UDWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ac044788699a69206413c99ff79581b52" compoundref="lc__tbldefs_8h" startline="76">LC_DATA_UDWORD_LE</references>
        <references refid="lc__tbldefs_8h_1a10173156d27255ba9b7913d3fbbb1d23" compoundref="lc__tbldefs_8h" startline="56">LC_DATA_UWORD_BE</references>
        <references refid="lc__tbldefs_8h_1ad5fb3e315cfab68863890e49440c4866" compoundref="lc__tbldefs_8h" startline="60">LC_DATA_UWORD_LE</references>
        <references refid="lc__tbldefs_8h_1ac307b33c3f2bf6ae154e07eb94f9afa9" compoundref="lc__tbldefs_8h" startline="48">LC_DATA_WORD_BE</references>
        <references refid="lc__tbldefs_8h_1a1317e31d8439396c33f8b5508c9e1071" compoundref="lc__tbldefs_8h" startline="52">LC_DATA_WORD_LE</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__tbldefs_8h_1ac92b16019803fd9448eab79d1266973c" compoundref="lc__tbldefs_8h" startline="130">LC_WATCH_ERROR</references>
        <references refid="lc__events_8h_1aa773d0739f68ff03e61016828728ad3e" compoundref="lc__events_8h" startline="844">LC_WP_DATATYPE_ERR_EID</references>
        <references refid="union_l_c___multi_type__t_1a1ecd725deed236ea9cfc00d55309b165" compoundref="lc__tbl_8h" startline="54">LC_MultiType_t::Signed16</references>
        <references refid="union_l_c___multi_type__t_1a4f6c39ad92af7b4ab4c0c15e1b28378e" compoundref="lc__tbl_8h" startline="51">LC_MultiType_t::Signed32</references>
        <references refid="union_l_c___multi_type__t_1a7407f6ffbea00584fa609dea4d841e03" compoundref="lc__tbl_8h" startline="56">LC_MultiType_t::Signed8</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="union_l_c___multi_type__t_1abc7bf0d8715f52b6caf4f9fbaee9e6f0" compoundref="lc__tbl_8h" startline="53">LC_MultiType_t::Unsigned16</references>
        <references refid="union_l_c___multi_type__t_1a8fc746ac0dd201dd9f006f92e58199cd" compoundref="lc__tbl_8h" startline="50">LC_MultiType_t::Unsigned32</references>
        <references refid="union_l_c___multi_type__t_1ad2f1e75df2662fe54aaa142c47c02ede" compoundref="lc__tbl_8h" startline="55">LC_MultiType_t::Unsigned8</references>
        <references refid="struct_l_c___w_r_t_entry__t_1ad30ee0f8ef15103e531c33cd5b29b7b9" compoundref="lc__tbl_8h" startline="133">LC_WRTEntry_t::WatchResult</references>
        <references refid="struct_l_c___oper_data__t_1ace44d8b206b4c394b310669b31c66680" compoundref="lc__app_8h" startline="133">LC_OperData_t::WDTPtr</references>
        <references refid="struct_l_c___oper_data__t_1a4c1246004074c422765ed44d323951f9" compoundref="lc__app_8h" startline="136">LC_OperData_t::WRTPtr</references>
        <referencedby refid="lc__watch_8h_1acebcdfbd549003d5c9bbde61505e7111" compoundref="lc__watch_8c" startline="331" endline="448">LC_ProcessWP</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a115a9eeea1d8588dcedede0121430e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean LC_Uint32IsNAN</definition>
        <argsstring>(uint32 Data)</argsstring>
        <name>LC_Uint32IsNAN</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Check uint32 for float NAN. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Utility function for watchpoint processing that will test if a uint32 value would result in a NAN (not-a-number) value if it was interpreted as a float.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The uint32 value to check</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>Returns TRUE if value is a float NAN  </para></entry></row>
<row>
<entry thead="no"><para>Returns FALSE if value is not a float NAN  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="352" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="1138" bodyend="1165"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="lc__watch_8h_1a2a2e97b3fdc06ae4b890c8046084d8da" compoundref="lc__watch_8c" startline="694" endline="777">LC_FloatCompare</referencedby>
        <referencedby refid="lc__watch_8h_1abf6cf8d9c9ec77aa8a3210c1ec7d3225" compoundref="lc__watch_8c" startline="985" endline="1130">LC_ValidateWDT</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a5ad064b7f6f91854e777b9f6d6489a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean LC_Uint32IsInfinite</definition>
        <argsstring>(uint32 Data)</argsstring>
        <name>LC_Uint32IsInfinite</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>Data</declname>
        </param>
        <briefdescription>
<para>Check uint32 for float infinite. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Utility function for watchpoint processing that will test if a uint32 value would result in an infinite value if it was interpreted as a float.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">Data</parametername>
</parameternamelist>
<parameterdescription>
<para>The uint32 value to check</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para>Returns TRUE if value is an inifinite float  </para></entry></row>
<row>
<entry thead="no"><para>Returns FALSE if value is not an inifinite float  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="373" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="1174" bodyend="1201"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="lc__watch_8h_1abf6cf8d9c9ec77aa8a3210c1ec7d3225" compoundref="lc__watch_8c" startline="985" endline="1130">LC_ValidateWDT</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1a8301d8942fa80a77b443e9ad19bdd133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 LC_GetHashTableIndex</definition>
        <argsstring>(CFE_SB_MsgId_t MessageID)</argsstring>
        <name>LC_GetHashTableIndex</name>
        <param>
          <type><ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref></type>
          <declname>MessageID</declname>
        </param>
        <briefdescription>
<para>Convert messageID into hash table index. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Utility function for watchpoint processing that converts a messageID into an index into the watchpoint hash table.</para></simplesect>
The following code supports use of the watchpoint hash table:</para><para>1) <ref refid="lc__watch_8h_1a8301d8942fa80a77b443e9ad19bdd133" kindref="member">LC_GetHashTableIndex</ref> - convert messageID to hash table index 2) <ref refid="lc__watch_8h_1a99b6bf02d703e90c2ecc8c2f7b3350c5" kindref="member">LC_CreateHashTable</ref> - after load Watchpoint Definition Table 3) <ref refid="lc__watch_8h_1aab872d73326be7501c52ecaae5552b52" kindref="member">LC_AddWatchpoint</ref> - add one watchpoint to hash table 4) <ref refid="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" kindref="member">LC_CheckMsgForWPs</ref> - process all WP&apos;s that reference messageID</para><para>The following data structures support the hash table:</para><para>1) Hash table (256 entries) 2) Array of links for messageID linked lists (LC_MAX_WATCHPOINTS) 3) Array of links for watchpoint linked lists (LC_MAX_WATCHPOINTS)</para><para>Rather than search the entire Watchpoint Definition Table to find the watchpoints that reference a particular messageID, LC does the following:</para><para>1) Call hash table function (convert messageID to hash table index) 2) Get messageID linked list from indexed hash table entry 3) Search messageID list (max 8) for matching messageID 4) Get watchpoint linked list from matching messageID link 5) Done - only watchpoints that reference messageID are in list</para><para><simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MessageID</parametername>
</parameternamelist>
<parameterdescription>
<para>SoftwareBus packet message ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para>Returns index into watchpoint hash table  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="415" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="35" bodyend="58"/>
        <references refid="lc__app_8h_1a5dc12460d6aaf32d106dfbb9adcab4f5" compoundref="lc__app_8h" startline="93">LC_HASH_TABLE_MASK</references>
        <referencedby refid="lc__watch_8h_1aab872d73326be7501c52ecaae5552b52" compoundref="lc__watch_8c" startline="142" endline="238">LC_AddWatchpoint</referencedby>
        <referencedby refid="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" compoundref="lc__watch_8c" startline="246" endline="323">LC_CheckMsgForWPs</referencedby>
      </memberdef>
      <memberdef kind="function" id="lc__watch_8h_1aab872d73326be7501c52ecaae5552b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lc__app_8h_1ad05dc9861b9fc20eea0ec50095d1638a" kindref="member">LC_WatchPtList_t</ref> *</type>
        <definition>LC_WatchPtList_t* LC_AddWatchpoint</definition>
        <argsstring>(CFE_SB_MsgId_t MessageID)</argsstring>
        <name>LC_AddWatchpoint</name>
        <param>
          <type><ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref></type>
          <declname>MessageID</declname>
        </param>
        <briefdescription>
<para>Add one watchpoint linked list entry during creation of hash table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Utility function that adds another link to the watchpoint linked list for the specified messageID. The function will also add a messageID linked list entry to the hash table if this is the first reference to that messageID. The function will also subscribe to the messageID if this is the first reference to that messageID. The function will return a pointer to the watchpoint linked list entry just added.</para></simplesect>
The following code supports use of the watchpoint hash table:</para><para>1) <ref refid="lc__watch_8h_1a8301d8942fa80a77b443e9ad19bdd133" kindref="member">LC_GetHashTableIndex</ref> - convert messageID to hash table index 2) <ref refid="lc__watch_8h_1a99b6bf02d703e90c2ecc8c2f7b3350c5" kindref="member">LC_CreateHashTable</ref> - after load Watchpoint Definition Table 3) <ref refid="lc__watch_8h_1aab872d73326be7501c52ecaae5552b52" kindref="member">LC_AddWatchpoint</ref> - add one watchpoint to hash table 4) <ref refid="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" kindref="member">LC_CheckMsgForWPs</ref> - process all WP&apos;s that reference messageID</para><para>The following data structures support the hash table:</para><para>1) Hash table (256 entries) 2) Array of links for messageID linked lists (LC_MAX_WATCHPOINTS) 3) Array of links for watchpoint linked lists (LC_MAX_WATCHPOINTS)</para><para>Rather than search the entire Watchpoint Definition Table to find the watchpoints that reference a particular messageID, LC does the following:</para><para>1) Call hash table function (convert messageID to hash table index) 2) Get messageID linked list from indexed hash table entry 3) Search messageID list (max 8) for matching messageID 4) Get watchpoint linked list from matching messageID link 5) Done - only watchpoints that reference messageID are in list</para><para><simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MessageID</parametername>
</parameternamelist>
<parameterdescription>
<para>SoftwareBus packet message ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para>Returns pointer to the watchpoint linked list entry just added  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lc/fsw/src/lc_watch.h" line="461" column="1" bodyfile="apps/lc/fsw/src/lc_watch.c" bodystart="142" bodyend="238"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afc2c2db1a504f544b430f33f28be769b">CFE_SB_Subscribe</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="struct_l_c___oper_data__t_1ad38cf7ad568bd1198135eabcd1a8d5b9" compoundref="lc__app_8h" startline="131">LC_OperData_t::CmdPipe</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_l_c___oper_data__t_1aad796990d4c961937e9f676bc189de12" compoundref="lc__app_8h" startline="160">LC_OperData_t::HashTable</references>
        <references refid="lc__watch_8c_1a8301d8942fa80a77b443e9ad19bdd133" compoundref="lc__watch_8c" startline="35" endline="58">LC_GetHashTableIndex</references>
        <references refid="lc__app_8c_1a655dc2ef3aeedac080eef3717bdda5f4" compoundref="lc__app_8c" startline="40">LC_OperData</references>
        <references refid="lc__events_8h_1a5336b2b87a5a1d1c624b222b3fcd079f" compoundref="lc__events_8h" startline="767">LC_SUB_WP_ERR_EID</references>
        <references refid="struct_l_c___m_list_tag_1a8a6f2748898a08b9196075e1a2eb1adc" compoundref="lc__app_8h" startline="110">LC_MListTag::MessageID</references>
        <references refid="struct_l_c___oper_data__t_1a5515ab6487377f75e4b6de111daca5ff" compoundref="lc__app_8h" startline="153">LC_OperData_t::MessageIDsCount</references>
        <references refid="struct_l_c___oper_data__t_1a6512b238407be0551ce28ba621108fce" compoundref="lc__app_8h" startline="166">LC_OperData_t::MessageLinks</references>
        <references refid="struct_l_c___w_list_tag_1a3d0018412641df4aa4ba28df08c00315" compoundref="lc__app_8h" startline="98">LC_WListTag::Next</references>
        <references refid="struct_l_c___m_list_tag_1a99217b291805d655987630ccf5ede49d" compoundref="lc__app_8h" startline="108">LC_MListTag::Next</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_l_c___oper_data__t_1aaf3e93cd13fa85e92c5943fb2eacd22f" compoundref="lc__app_8h" startline="150">LC_OperData_t::WatchpointCount</references>
        <references refid="struct_l_c___oper_data__t_1a8b90a3b89a22d7f5dc1d268a380404c7" compoundref="lc__app_8h" startline="167">LC_OperData_t::WatchPtLinks</references>
        <references refid="struct_l_c___m_list_tag_1af7ae22dc3f82fc2638e691880c489b58" compoundref="lc__app_8h" startline="113">LC_MListTag::WatchPtList</references>
        <referencedby refid="lc__watch_8h_1a99b6bf02d703e90c2ecc8c2f7b3350c5" compoundref="lc__watch_8c" startline="67" endline="133">LC_CreateHashTable</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>File:</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/><sp/><sp/>$Id:<sp/>lc_watch.h<sp/>1.4<sp/>2017/01/22<sp/>17:24:25EST<sp/>sstrege<sp/>Exp<sp/><sp/>$</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/><sp/>Copyright<sp/>(c)<sp/>2007-2014<sp/>United<sp/>States<sp/>Government<sp/>as<sp/>represented<sp/>by<sp/>the<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/><sp/>Administrator<sp/>of<sp/>the<sp/>National<sp/>Aeronautics<sp/>and<sp/>Space<sp/>Administration.<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/><sp/>All<sp/>Other<sp/>Rights<sp/>Reserved.<sp/><sp/></highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/><sp/>This<sp/>software<sp/>was<sp/>created<sp/>at<sp/>NASA&apos;s<sp/>Goddard<sp/>Space<sp/>Flight<sp/>Center.</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>NASA<sp/>Open<sp/>Source<sp/>Agreement<sp/>and<sp/>may<sp/>be<sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/><sp/>used,<sp/>distributed<sp/>and<sp/>modified<sp/>only<sp/>pursuant<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>that<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/><sp/>agreement.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>Purpose:<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/><sp/>Specification<sp/>for<sp/>the<sp/>CFS<sp/>Limit<sp/>Checker<sp/>(LC)<sp/>routines<sp/>that</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/><sp/>handle<sp/>watchpoint<sp/>processing</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/>Notes:</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="comment">**************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_lc_watch_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_lc_watch_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>Includes</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cfe_8h" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">cfe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lc__app_8h" kindref="compound">lc_app.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*************************************************************************</highlight></codeline>
<codeline lineno="32"><highlight class="comment">**<sp/>Exported<sp/>Functions</highlight></codeline>
<codeline lineno="33"><highlight class="comment">*************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="56"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1ab440c20ea75c8b3f418b52abc8da8e23" kindref="member">LC_CheckMsgForWPs</ref>(<ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref><sp/><sp/>MessageID,<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref><sp/>MessagePtr);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref><sp/><ref refid="lc__watch_8h_1abf6cf8d9c9ec77aa8a3210c1ec7d3225" kindref="member">LC_ValidateWDT</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*TableData);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1a99b6bf02d703e90c2ecc8c2f7b3350c5" kindref="member">LC_CreateHashTable</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="123"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1acebcdfbd549003d5c9bbde61505e7111" kindref="member">LC_ProcessWP</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WatchIndex,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref><sp/><sp/><sp/><sp/>MessagePtr,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_f_e___t_i_m_e___sys_time__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TIME_SysTime_t</ref><sp/>Timestamp);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref><sp/><ref refid="lc__watch_8h_1a75a9d72418617f8fd042643512bfbbbf" kindref="member">LC_OperatorCompare</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/>WatchIndex,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/>ProcessedWPData);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref><sp/><ref refid="lc__watch_8h_1a74722fc33938e1b80caafffccb2ca7cf" kindref="member">LC_SignedCompare</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/>WatchIndex,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref><sp/><sp/>WPValue,<sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref><sp/><sp/>CompareValue);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref><sp/><ref refid="lc__watch_8h_1a31b37668a39bebc86b7e461168fd5b6f" kindref="member">LC_UnsignedCompare</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/>WatchIndex,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/>WPValue,<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/>CompareValue);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref><sp/><ref refid="lc__watch_8h_1a2a2e97b3fdc06ae4b890c8046084d8da" kindref="member">LC_FloatCompare</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/>WatchIndex,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_l_c___multi_type__t" kindref="compound">LC_MultiType_t</ref><sp/>WPMultiType,<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_l_c___multi_type__t" kindref="compound">LC_MultiType_t</ref><sp/>CompareMultiType);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="294"><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1a4acd49120c9e78940ae0d0268a12804a" kindref="member">LC_WPOffsetValid</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WatchIndex,<sp/></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgPtr_t</ref><sp/>MessagePtr);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="329"><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1ad12e535a25095691f281eb41d1d77d3e" kindref="member">LC_GetSizedWPData</ref>(<ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref><sp/>WatchIndex,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref><sp/><sp/>*WPDataPtr,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/>*SizedDataPtr);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="352"><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1a115a9eeea1d8588dcedede0121430e42" kindref="member">LC_Uint32IsNAN</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/>Data);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="373"><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="lc__watch_8h_1a5ad064b7f6f91854e777b9f6d6489a93" kindref="member">LC_Uint32IsInfinite</ref>(<ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/>Data);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref><sp/><ref refid="lc__watch_8h_1a8301d8942fa80a77b443e9ad19bdd133" kindref="member">LC_GetHashTableIndex</ref>(<ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref><sp/>MessageID);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************/</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><ref refid="struct_l_c___w_list_tag" kindref="compound">LC_WatchPtList_t</ref><sp/><sp/>*<ref refid="lc__watch_8h_1aab872d73326be7501c52ecaae5552b52" kindref="member">LC_AddWatchpoint</ref>(<ref refid="cfe__sb_8h_1a213323eb4fb69a395a343ad66045ae74" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_MsgId_t</ref><sp/>MessageID);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_lc_watch_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">/************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>End<sp/>of<sp/>File<sp/>Comment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">/************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="apps/lc/fsw/src/lc_watch.h"/>
  </compounddef>
</doxygen>
