<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_m_p_c" kind="class" language="C++" prot="public">
    <compoundname>MPC</compoundname>
    <includes refid="mpc__app_8h" local="no">mpc_app.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_m_p_c_1ad6be46e98df3506d73994c765bc99182" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t MPC::SchPipeId</definition>
        <argsstring></argsstring>
        <name>SchPipeId</name>
        <briefdescription>
<para>Scheduling Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="93" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1ab58f7dadd6c6186f7b56e218c00fcae7" compoundref="mpc__app_8cpp" startline="108" endline="257">InitPipe</referencedby>
        <referencedby refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" compoundref="mpc__app_8cpp" startline="424" endline="490">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a5bf905d5de0a03e493e5425a15efbf6a" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t MPC::CmdPipeId</definition>
        <argsstring></argsstring>
        <name>CmdPipeId</name>
        <briefdescription>
<para>Command Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="96" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1ab58f7dadd6c6186f7b56e218c00fcae7" compoundref="mpc__app_8cpp" startline="108" endline="257">InitPipe</referencedby>
        <referencedby refid="class_m_p_c_1aa2b56b3fbd3ff5db9d4dd820d38ee607" compoundref="mpc__app_8cpp" startline="599" endline="643">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a0cfe729a2e79fd42e303032e6b63801e" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t MPC::DataPipeId</definition>
        <argsstring></argsstring>
        <name>DataPipeId</name>
        <briefdescription>
<para>Data Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="99" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1ab58f7dadd6c6186f7b56e218c00fcae7" compoundref="mpc__app_8cpp" startline="108" endline="257">InitPipe</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a073d2889ff8fca17cfd0ec0fddf09c0d" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 MPC::uiRunStatus</definition>
        <argsstring></argsstring>
        <name>uiRunStatus</name>
        <briefdescription>
<para>Task Run Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="105" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="105" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a9b7afd8e591f9f2c18e3d61ae6dfbf34" compoundref="mpc__app_8cpp" startline="957" endline="1007">AppMain</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t MPC::ConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>ConfigTblHdl</name>
        <briefdescription>
<para>Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="110" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" compoundref="mpc__config__utils_8cpp" startline="98" endline="141">AcquireConfigPointers</referencedby>
        <referencedby refid="class_m_p_c_1aed508a5970bc3c452a769361b106658e" compoundref="mpc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</referencedby>
        <referencedby refid="class_m_p_c_1a51689fa2d1c581b6f3d2382254b80e4e" compoundref="mpc__app_8cpp" startline="3246" endline="3262">UpdateHoldDz</referencedby>
        <referencedby refid="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" compoundref="mpc__app_8cpp" startline="3271" endline="3289">UpdateStickExpo</referencedby>
        <referencedby refid="class_m_p_c_1a22b9caa726c0d54b4ccd2352deb78d4f" compoundref="mpc__app_8cpp" startline="3298" endline="3313">UpdateTakeoffRampTime</referencedby>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" prot="public" static="no" mutable="no">
        <type><ref refid="struct_m_p_c___config_tbl__t" kindref="compound">MPC_ConfigTbl_t</ref> *</type>
        <definition>MPC_ConfigTbl_t* MPC::ConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>ConfigTblPtr</name>
        <briefdescription>
<para>Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="113" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" compoundref="mpc__config__utils_8cpp" startline="98" endline="141">AcquireConfigPointers</referencedby>
        <referencedby refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</referencedby>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a79f43a9d1f2b449a31750e20d1133c95" compoundref="mpc__app_8cpp" startline="3143" endline="3153">GetCruisingSpeedXY</referencedby>
        <referencedby refid="class_m_p_c_1a2e465764754db857c775785aa2d14c8f" compoundref="mpc__app_8cpp" startline="3468" endline="3540">GetVelClose</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
        <referencedby refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
        <referencedby refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</referencedby>
        <referencedby refid="class_m_p_c_1a51689fa2d1c581b6f3d2382254b80e4e" compoundref="mpc__app_8cpp" startline="3246" endline="3262">UpdateHoldDz</referencedby>
        <referencedby refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</referencedby>
        <referencedby refid="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" compoundref="mpc__app_8cpp" startline="3271" endline="3289">UpdateStickExpo</referencedby>
        <referencedby refid="class_m_p_c_1a22b9caa726c0d54b4ccd2352deb78d4f" compoundref="mpc__app_8cpp" startline="3298" endline="3313">UpdateTakeoffRampTime</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" prot="public" static="no" mutable="no">
        <type><ref refid="struct_m_p_c___hk_tlm__t" kindref="compound">MPC_HkTlm_t</ref></type>
        <definition>MPC_HkTlm_t MPC::HkTlm</definition>
        <argsstring></argsstring>
        <name>HkTlm</name>
        <briefdescription>
<para>Housekeeping Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="118" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
        <referencedby refid="class_m_p_c_1aa2b56b3fbd3ff5db9d4dd820d38ee607" compoundref="mpc__app_8cpp" startline="599" endline="643">ProcessCmdPipe</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1a20690d2882592e87569221f8c2bd7c48" compoundref="mpc__app_8cpp" startline="911" endline="936">VerifyCmdLength</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a7c999d46f9a9c48f278a01cd08cba83d" prot="public" static="no" mutable="no">
        <type><ref refid="struct_m_p_c___diag_packet__t" kindref="compound">MPC_DiagPacket_t</ref></type>
        <definition>MPC_DiagPacket_t MPC::DiagTlm</definition>
        <argsstring></argsstring>
        <name>DiagTlm</name>
        <briefdescription>
<para>Diagnositc Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="121" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" prot="public" static="no" mutable="no">
        <type>PX4_VehicleAttitudeSetpointMsg_t</type>
        <definition>PX4_VehicleAttitudeSetpointMsg_t MPC::m_VehicleAttitudeSetpointMsg</definition>
        <argsstring></argsstring>
        <name>m_VehicleAttitudeSetpointMsg</name>
        <briefdescription>
<para>Output Data published at the end of cycle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="124" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</referencedby>
        <referencedby refid="class_m_p_c_1ad9a240550f944a91459f78f8b796238e" compoundref="mpc__app_8cpp" startline="885" endline="889">SendVehicleAttitudeSetpointMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a315ee8ebbc28ff9a9bcb468104e74e94" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLocalPositionSetpointMsg_t</type>
        <definition>PX4_VehicleLocalPositionSetpointMsg_t MPC::m_VehicleLocalPositionSetpointMsg</definition>
        <argsstring></argsstring>
        <name>m_VehicleLocalPositionSetpointMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="125" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="125" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a629fef51ce0ca03063856bedd1d4c2d9" compoundref="mpc__app_8cpp" startline="898" endline="902">SendVehicleLocalPositionSetpointMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a7f352a90a5342605c72b2de2f232424e" prot="public" static="no" mutable="no">
        <type>PX4_ControlStateMsg_t</type>
        <definition>PX4_ControlStateMsg_t MPC::m_ControlStateMsg</definition>
        <argsstring></argsstring>
        <name>m_ControlStateMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="128" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="128" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" prot="public" static="no" mutable="no">
        <type>PX4_ManualControlSetpointMsg_t</type>
        <definition>PX4_ManualControlSetpointMsg_t MPC::m_ManualControlSetpointMsg</definition>
        <argsstring></argsstring>
        <name>m_ManualControlSetpointMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="129" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="129" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a7e0c6a98d730b8ddf0b914d95422a7ef" compoundref="mpc__app_8cpp" startline="3846" endline="3852">ManualWantsTakeoff</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a89cc2587adcb2c8b82241b8373f7866f" prot="public" static="no" mutable="no">
        <type>PX4_HomePositionMsg_t</type>
        <definition>PX4_HomePositionMsg_t MPC::m_HomePositionMsg</definition>
        <argsstring></argsstring>
        <name>m_HomePositionMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="130" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="130" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" prot="public" static="no" mutable="no">
        <type>PX4_VehicleControlModeMsg_t</type>
        <definition>PX4_VehicleControlModeMsg_t MPC::m_VehicleControlModeMsg</definition>
        <argsstring></argsstring>
        <name>m_VehicleControlModeMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="131" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</referencedby>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" compoundref="mpc__app_8cpp" startline="1879" endline="1893">ControlPosition</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a0f94435b85b6bf16f2d652f274bc05c3" compoundref="mpc__app_8cpp" startline="3441" endline="3459">InAutoTakeoff</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a7e0c6a98d730b8ddf0b914d95422a7ef" compoundref="mpc__app_8cpp" startline="3846" endline="3852">ManualWantsTakeoff</referencedby>
        <referencedby refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
        <referencedby refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" compoundref="mpc__app_8cpp" startline="1016" endline="1040">ProcessVehicleLocalPositionMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" prot="public" static="no" mutable="no">
        <type>PX4_PositionSetpointTripletMsg_t</type>
        <definition>PX4_PositionSetpointTripletMsg_t MPC::m_PositionSetpointTripletMsg</definition>
        <argsstring></argsstring>
        <name>m_PositionSetpointTripletMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="132" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="132" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a79f43a9d1f2b449a31750e20d1133c95" compoundref="mpc__app_8cpp" startline="3143" endline="3153">GetCruisingSpeedXY</referencedby>
        <referencedby refid="class_m_p_c_1a0f94435b85b6bf16f2d652f274bc05c3" compoundref="mpc__app_8cpp" startline="3441" endline="3459">InAutoTakeoff</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
        <referencedby refid="class_m_p_c_1af5262f753b6e007c3370521a21f6da52" compoundref="mpc__app_8cpp" startline="1088" endline="1103">ProcessPositionSetpointTripletMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1af7f5aabd74ab9ddb09ccd4f9cfa46738" prot="public" static="no" mutable="no">
        <type>PX4_VehicleStatusMsg_t</type>
        <definition>PX4_VehicleStatusMsg_t MPC::m_VehicleStatusMsg</definition>
        <argsstring></argsstring>
        <name>m_VehicleStatusMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="133" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="133" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLandDetectedMsg_t</type>
        <definition>PX4_VehicleLandDetectedMsg_t MPC::m_VehicleLandDetectedMsg</definition>
        <argsstring></argsstring>
        <name>m_VehicleLandDetectedMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="134" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLocalPositionMsg_t</type>
        <definition>PX4_VehicleLocalPositionMsg_t MPC::m_VehicleLocalPositionMsg</definition>
        <argsstring></argsstring>
        <name>m_VehicleLocalPositionMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="135" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="135" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
        <referencedby refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" compoundref="mpc__app_8cpp" startline="1016" endline="1040">ProcessVehicleLocalPositionMsg</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a1effb253b61f00a41c06e0d2295647ba" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 MPC::m_ResetCounterZ</definition>
        <argsstring></argsstring>
        <name>m_ResetCounterZ</name>
        <briefdescription>
<para>When set to a non-zero integer, m_PositionSetpoint[2] will get set to m_VehicleLocalPositionMsg.Z. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="140" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="140" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" compoundref="mpc__app_8cpp" startline="1016" endline="1040">ProcessVehicleLocalPositionMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ae196aa56c4723c893f58e966422138a7" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 MPC::m_ResetCounterXy</definition>
        <argsstring></argsstring>
        <name>m_ResetCounterXy</name>
        <briefdescription>
<para>When set to a non-zero integer, m_PositionSetpoint[0] and m_PositionSetpoint[1] will get set to m_VehicleLocalPositionMsg.X and m_VehicleLocalPositionMsg.Y respectively. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="144" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="144" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" compoundref="mpc__app_8cpp" startline="1016" endline="1040">ProcessVehicleLocalPositionMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a6bee6ab568f48e89464166a5bf7fe9df" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 MPC::m_HeadingResetCounter</definition>
        <argsstring></argsstring>
        <name>m_HeadingResetCounter</name>
        <briefdescription>
<para>When set to a non-zero integer, m_VehicleAttitudeSetpointMsg.YawBody will get set to the Euler yaw component of the m_ControlStateMsg.QuatResetCounter quaternion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="148" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="148" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_Position</definition>
        <argsstring></argsstring>
        <name>m_Position</name>
        <briefdescription>
<para>Vehicle local position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="153" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="153" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" compoundref="mpc__app_8cpp" startline="1858" endline="1870">ResetAltSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" compoundref="mpc__app_8cpp" startline="1837" endline="1849">ResetPosSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_PositionSetpoint</definition>
        <argsstring></argsstring>
        <name>m_PositionSetpoint</name>
        <briefdescription>
<para>Vehicle local position setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="156" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="156" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" compoundref="mpc__app_8cpp" startline="1016" endline="1040">ProcessVehicleLocalPositionMsg</referencedby>
        <referencedby refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" compoundref="mpc__app_8cpp" startline="1858" endline="1870">ResetAltSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" compoundref="mpc__app_8cpp" startline="1837" endline="1849">ResetPosSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_Velocity</definition>
        <argsstring></argsstring>
        <name>m_Velocity</name>
        <briefdescription>
<para>Vehicle local position velocity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="159" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="159" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
        <referencedby refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1aa90455009127a8b0b3f36c6b31d8ede0" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelocityPrevious</definition>
        <argsstring></argsstring>
        <name>m_VelocityPrevious</name>
        <briefdescription>
<para>Vehicle local position velocity on the previous step. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="162" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="162" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelocitySetpoint</definition>
        <argsstring></argsstring>
        <name>m_VelocitySetpoint</name>
        <briefdescription>
<para>Vehicle local position velocity setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="165" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="165" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</referencedby>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelocitySetpointPrevious</definition>
        <argsstring></argsstring>
        <name>m_VelocitySetpointPrevious</name>
        <briefdescription>
<para>Vehicle local position velocity setpoint on the previous step. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="168" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="168" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
        <referencedby refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a072f30602bd7151e8d8bc3d54679bcba" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelocityErrD</definition>
        <argsstring></argsstring>
        <name>m_VelocityErrD</name>
        <briefdescription>
<para>Derivative of the current vehicle local position velocity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="171" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="171" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a159ff2c69d6fecc09094b6c7956b8c91" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_CurrentPositionSetpoint</definition>
        <argsstring></argsstring>
        <name>m_CurrentPositionSetpoint</name>
        <briefdescription>
<para>Current setpoint of the triplet. </para>        </briefdescription>
        <detaileddescription>
<para>current setpoint of the triplets </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="174" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="174" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a53ae6538f9d2ad32fbc15f117ac7b02a" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_PreviousPositionSetpoint</definition>
        <argsstring></argsstring>
        <name>m_PreviousPositionSetpoint</name>
        <briefdescription>
<para>Previous setpoint position of the triplet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="177" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="177" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a6358d71ebbcecee7f0183e10bdcd554f" prot="public" static="no" mutable="no">
        <type>math::Matrix3F3</type>
        <definition>math::Matrix3F3 MPC::m_RSetpoint</definition>
        <argsstring></argsstring>
        <name>m_RSetpoint</name>
        <briefdescription>
<para>Rotation matrix setpoint used to determine the Vehicle Attitude Setpoint quaternion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="180" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="180" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a687235734c84402db406bb37dba75421" prot="public" static="no" mutable="no">
        <type>math::Matrix3F3</type>
        <definition>math::Matrix3F3 MPC::m_Rotation</definition>
        <argsstring></argsstring>
        <name>m_Rotation</name>
        <briefdescription>
<para>Rotation matrix from attitude in quaternions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="183" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="183" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a025ed791069468ece2b1714038ffb9b6" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_ThrustInt</definition>
        <argsstring></argsstring>
        <name>m_ThrustInt</name>
        <briefdescription>
<para>Thrust vector used to determine the Vehicle Local Position Setpoint acceleration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="186" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="186" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ac5603a5b5912c778f653ab5bedfce2ae" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_DerivativeZ</definition>
        <argsstring></argsstring>
        <name>m_DerivativeZ</name>
        <briefdescription>
<para>Velocity in Z that agrees with the position rate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="189" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="189" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_Yaw</definition>
        <argsstring></argsstring>
        <name>m_Yaw</name>
        <briefdescription>
<para>Yaw Euler angle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="192" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="192" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a2735cf9814c6d80d2c59efe60bcf1337" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_ManYawOffset</definition>
        <argsstring></argsstring>
        <name>m_ManYawOffset</name>
        <briefdescription>
<para>Current yaw offset in manual mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="195" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="195" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_ModeAuto</definition>
        <argsstring></argsstring>
        <name>m_ModeAuto</name>
        <briefdescription>
<para>Briefly set to TRUE when <ref refid="class_m_p_c" kindref="compound">MPC</ref> initially enters automatic mode, causing the state machine to execute specific behavior on state entry. This flag is reset back to FALSE immediately after the entry function has executed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="202" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="202" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ad7f711a3182dc749c9e4df1279dfefe5" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_PositionHoldEngaged</definition>
        <argsstring></argsstring>
        <name>m_PositionHoldEngaged</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will hold position, unless the pilot has applied horizontal control stick deflections beyond the deadband. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="206" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="206" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a99ba99a2619886c6084a9807fea8bf6a" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_AltitudeHoldEngaged</definition>
        <argsstring></argsstring>
        <name>m_AltitudeHoldEngaged</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will hold position, unless the pilot has applied vertical control stick deflections beyond the deadband. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="210" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="210" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_RunPosControl</definition>
        <argsstring></argsstring>
        <name>m_RunPosControl</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will hold position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="213" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="213" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_RunAltControl</definition>
        <argsstring></argsstring>
        <name>m_RunAltControl</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will hold altitude. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="216" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="216" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_ResetPositionSetpoint</definition>
        <argsstring></argsstring>
        <name>m_ResetPositionSetpoint</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will set horizontal components of m_PositionSetpoint to m_Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="220" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="220" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" compoundref="mpc__app_8cpp" startline="1837" endline="1849">ResetPosSetpoint</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_ResetAltitudeSetpoint</definition>
        <argsstring></argsstring>
        <name>m_ResetAltitudeSetpoint</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will set vertical components of m_PositionSetpoint to m_Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="224" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="224" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" compoundref="mpc__app_8cpp" startline="1858" endline="1870">ResetAltSetpoint</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1aac4c489b6edd69f2b00bc46ebf77698f" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_DoResetAltPos</definition>
        <argsstring></argsstring>
        <name>m_DoResetAltPos</name>
        <briefdescription>
<para>When set to TRUE, <ref refid="class_m_p_c" kindref="compound">MPC</ref> will reset both the vertical and horizontal components of m_PositionSetpoint to m_Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="228" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="228" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a1471899d23f4cfc430e059ea1d0fb3ce" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_WasLanded</definition>
        <argsstring></argsstring>
        <name>m_WasLanded</name>
        <briefdescription>
<para>Set by the #m_VehicleLandDetectedMsg.Landed message. Indicates the vehicle has landed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="232" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="232" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_ResetIntZ</definition>
        <argsstring></argsstring>
        <name>m_ResetIntZ</name>
        <briefdescription>
<para>Resets thrust (vertical component) integrals to 0.0 when set to TRUE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="235" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="235" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" compoundref="mpc__app_8cpp" startline="1879" endline="1893">ControlPosition</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a308fcbf69f14791abcb919ca34e0c51e" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_ResetIntXY</definition>
        <argsstring></argsstring>
        <name>m_ResetIntXY</name>
        <briefdescription>
<para>Resets the integrals of the horizontal components to 0.0 when set to TRUE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="238" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="238" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1abf5b31580b84b52266d617ff2452753f" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_ResetYawSetpoint</definition>
        <argsstring></argsstring>
        <name>m_ResetYawSetpoint</name>
        <briefdescription>
<para>Resets yaw setpoint to current position when set to TRUE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="241" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="241" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_HoldOffboardXY</definition>
        <argsstring></argsstring>
        <name>m_HoldOffboardXY</name>
        <briefdescription>
<para>When m_VehicleControlModeMsg.ControlOffboardEnabled is set and this is FALSE, the horizontal component of m_PositionSetpoint is set to the horizontal component of m_Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="246" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="246" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_HoldOffboardZ</definition>
        <argsstring></argsstring>
        <name>m_HoldOffboardZ</name>
        <briefdescription>
<para>When m_VehicleControlModeMsg.ControlOffboardEnabled is set and this is FALSE, the vertical component of m_PositionSetpoint is set to the vertical component of m_Position. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="251" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="251" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_InTakeoff</definition>
        <argsstring></argsstring>
        <name>m_InTakeoff</name>
        <briefdescription>
<para>Indicates that the vehicle is currently in takeoff (automatic or manual), and applying a special velocity setpoint limitation for smooth takeoff. </para>        </briefdescription>
        <detaileddescription>
<para>flag for smooth velocity setpoint takeoff ramp </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="255" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="255" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a224e834e7b808ab279487c154c43f91c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_TripletLatLonFinite</definition>
        <argsstring></argsstring>
        <name>m_TripletLatLonFinite</name>
        <briefdescription>
<para>Indicates with the latitude and longitude have been updated (are &quot;fresh&quot;). When set to TRUE, sets the horizontal components of the Current Position Setpoint equal to <ref refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" kindref="member">m_Position</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="260" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="260" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ab978154eb831059e6b9c6460f1014a3e" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 MPC::m_RefTimestamp</definition>
        <argsstring></argsstring>
        <name>m_RefTimestamp</name>
        <briefdescription>
<para>Set to #m_VehicleLocalPositionMsg.RefTimestamp. When a new Vehicle Local Position message has been received, <ref refid="class_m_p_c" kindref="compound">MPC</ref> detects the new RefTimestamp, causing it to run the <ref refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" kindref="member">UpdateRef</ref> function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="265" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="265" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ad1ae795d5dfb450e0724c1292508a338" prot="public" static="no" mutable="no">
        <type>struct map_projection_reference_s</type>
        <definition>struct map_projection_reference_s MPC::m_RefPos</definition>
        <argsstring></argsstring>
        <name>m_RefPos</name>
        <briefdescription>
<para>Local projection reference. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="265" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="268" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a8e7421f432fb48146f7a985ba81f7d81" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_RefAlt</definition>
        <argsstring></argsstring>
        <name>m_RefAlt</name>
        <briefdescription>
<para>Vehicle local position reference altitude. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="271" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="271" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a6161e06b5b590fa12b3ae93954abdf4c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::m_RefAltIsGlobal</definition>
        <argsstring></argsstring>
        <name>m_RefAltIsGlobal</name>
        <briefdescription>
<para>TRUE when the reference altitude is defined in a global reference frame. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="274" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="274" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a54765d4619cafc7dc83d8204f92aa5d0" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_YawTakeoff</definition>
        <argsstring></argsstring>
        <name>m_YawTakeoff</name>
        <briefdescription>
<para>Home yaw angle present when vehicle was taking off (euler). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="277" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="277" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_PosP</definition>
        <argsstring></argsstring>
        <name>m_PosP</name>
        <briefdescription>
<para>Position Setpoint PID Proportional (gain) value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="281" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="281" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
        <referencedby refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</referencedby>
        <referencedby refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</referencedby>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelP</definition>
        <argsstring></argsstring>
        <name>m_VelP</name>
        <briefdescription>
<para>PID Proportional (gain) value. Used to calculate the thrust component of the Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="285" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="285" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
        <referencedby refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</referencedby>
        <referencedby refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</referencedby>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelI</definition>
        <argsstring></argsstring>
        <name>m_VelI</name>
        <briefdescription>
<para>PID Integral value. Used to calculate the thrust component of the Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="289" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="289" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
        <referencedby refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</referencedby>
        <referencedby refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</referencedby>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" prot="public" static="no" mutable="no">
        <type>math::Vector3F</type>
        <definition>math::Vector3F MPC::m_VelD</definition>
        <argsstring></argsstring>
        <name>m_VelD</name>
        <briefdescription>
<para>PID Differential value. Used to calculate the thrust component of the Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="293" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="293" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
        <referencedby refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</referencedby>
        <referencedby refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</referencedby>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a341012eef955d123987657c75c08b5a6" prot="public" static="no" mutable="no">
        <type>Derivative</type>
        <definition>Derivative MPC::m_VelXDeriv</definition>
        <argsstring></argsstring>
        <name>m_VelXDeriv</name>
        <briefdescription>
<para>Derivative of the velocity X component. Used to calculate the thrust component of the Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="297" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="297" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a7cd0f15610f285c6c81a67e7842dd6a5" prot="public" static="no" mutable="no">
        <type>Derivative</type>
        <definition>Derivative MPC::m_VelYDeriv</definition>
        <argsstring></argsstring>
        <name>m_VelYDeriv</name>
        <briefdescription>
<para>Derivative of the velocity Y component. Used to calculate the thrust component of the Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="301" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="301" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ab35fe04056c200733d9a2806ddcce495" prot="public" static="no" mutable="no">
        <type>Derivative</type>
        <definition>Derivative MPC::m_VelZDeriv</definition>
        <argsstring></argsstring>
        <name>m_VelZDeriv</name>
        <briefdescription>
<para>Derivative of the velocity Z component. Used to calculate the thrust component of the Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="305" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="305" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_AccelerationStateLimitXY</definition>
        <argsstring></argsstring>
        <name>m_AccelerationStateLimitXY</name>
        <briefdescription>
<para>Horizontal acceleration limit applied in manual mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="310" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="310" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_AccelerationStateLimitZ</definition>
        <argsstring></argsstring>
        <name>m_AccelerationStateLimitZ</name>
        <briefdescription>
<para>Vertical acceleration limit applied in manual mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="313" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="313" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a46bc00fe5d42608088ce81a170e2452b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_ManualJerkLimitXY</definition>
        <argsstring></argsstring>
        <name>m_ManualJerkLimitXY</name>
        <briefdescription>
<para>Horizontal jerk limit in manual mode dependent on stick input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="316" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="316" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a92c2c654b34bb2d72b5a3a136016b491" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_ManualJerkLimitZ</definition>
        <argsstring></argsstring>
        <name>m_ManualJerkLimitZ</name>
        <briefdescription>
<para>Vertical jerk limit in manual mode. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="319" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="319" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_VelMaxXy</definition>
        <argsstring></argsstring>
        <name>m_VelMaxXy</name>
        <briefdescription>
<para>Equal to XY_VEL_MAX except in auto mode when close to target. <ref refid="class_m_p_c" kindref="compound">MPC</ref> will reduce this value when close to the target in preparation for a smooth stop. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="323" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="323" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a5b919d5d95787c2dbcb81cbfd0e3f1c6" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float MPC::m_TakeoffVelLimit</definition>
        <argsstring></argsstring>
        <name>m_TakeoffVelLimit</name>
        <briefdescription>
<para>Velocity limit value which gets ramped up during takeoff. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="326" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="326" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a18a7ed0ef81a74046fe4190846f2c556" prot="public" static="no" mutable="no">
        <type>math::LowPassFilter2p</type>
        <definition>math::LowPassFilter2p MPC::m_FilterManualPitch</definition>
        <argsstring></argsstring>
        <name>m_FilterManualPitch</name>
        <briefdescription>
<para>Manual pitch input low pass filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="331" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="331" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a9458bd139670c632036725b8f2bce33a" prot="public" static="no" mutable="no">
        <type>math::LowPassFilter2p</type>
        <definition>math::LowPassFilter2p MPC::m_FilterManualRoll</definition>
        <argsstring></argsstring>
        <name>m_FilterManualRoll</name>
        <briefdescription>
<para>Manual roll input low pass filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="334" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="334" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a20dff91c5bb60c66d4ec4c564a2bdc26" prot="public" static="no" mutable="no">
        <type>math::Vector2F</type>
        <definition>math::Vector2F MPC::m_StickInputXyPrev</definition>
        <argsstring></argsstring>
        <name>m_StickInputXyPrev</name>
        <briefdescription>
<para>The previous value of the stick input. For manual controlled mode to detect direction change. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="338" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="338" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1ab8cc330be5916b27bbe12d5ce6198db2" prot="public" static="no" mutable="no">
        <type><ref refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aa" kindref="member">ManualStickInput</ref></type>
        <definition>ManualStickInput MPC::m_UserIntentionXY</definition>
        <argsstring></argsstring>
        <name>m_UserIntentionXY</name>
        <briefdescription>
<para>Defines what the user intends to do derived from horizontal component of the stick input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="341" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="341" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a0c82008c52ce3a08bf29e83a9c7f3ac8" prot="public" static="no" mutable="no">
        <type><ref refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aa" kindref="member">ManualStickInput</ref></type>
        <definition>ManualStickInput MPC::m_UserIntentionZ</definition>
        <argsstring></argsstring>
        <name>m_UserIntentionZ</name>
        <briefdescription>
<para>Defines what the user intends to do derived from vertical component of the stick input. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="344" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="344" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</referencedby>
        <referencedby refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_m_p_c_1a84f6ac513891845ed2a4288796257d59" prot="public" static="no" mutable="no">
        <type>systemlib::Hysteresis</type>
        <definition>systemlib::Hysteresis MPC::m_ManualDirectionChangeHysteresis</definition>
        <argsstring></argsstring>
        <name>m_ManualDirectionChangeHysteresis</name>
        <briefdescription>
<para>Used for braking. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="347" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="347" bodyend="-1"/>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
        <referencedby refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_m_p_c_1aa00d954d8326ede0331abaf7a7a36815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MPC::MPC</definition>
        <argsstring>()</argsstring>
        <name>MPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="89" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="60" bodyend="66"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a96c471412e292fd52b90bf8cac8473f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MPC::~MPC</definition>
        <argsstring>()</argsstring>
        <name>~MPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="90" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a9b7afd8e591f9f2c18e3d61ae6dfbf34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::AppMain</definition>
        <argsstring>(void)</argsstring>
        <name>AppMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Multicopter Position Control (<ref refid="class_m_p_c" kindref="compound">MPC</ref>) application entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Multicopter Position Control Task application entry point. This function performs app initialization, then waits for the cFE ES Startup Sync, then executes the main processing loop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If there is an unrecoverable failure during initialization the main loop is never executed and the application will exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="362" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="957" bodyend="1007"/>
        <references refid="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" compoundref="mpc__config__utils_8cpp" startline="98" endline="141">AcquireConfigPointers</references>
        <references refid="cfe__es_8h_1abeabe0f94cccfa5bfcfc2f43796da8d1">CFE_ES_APP_ERROR</references>
        <references refid="cfe__es_8h_1a033dfcc82849cfb9a474a2cece5c9803">CFE_ES_APP_RUN</references>
        <references refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325">CFE_ES_ExitApp</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__es__api_8c_1a426ef8e1796ccebba16c63c8e86fb842">CFE_ES_RegisterApp</references>
        <references refid="cfe__es__api_8c_1ae8598bcba38a594d1c868924999da953">CFE_ES_RunLoop</references>
        <references refid="cfe__es__api_8c_1a7dc343ea775a0e5773ecdf700581d548">CFE_ES_WaitForStartupSync</references>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" compoundref="mpc__app_8cpp" startline="366" endline="415">InitApp</references>
        <references refid="mpc__perfids_8h_1a276a07ed7ae50b5d70819b50f4b92195" compoundref="mpc__perfids_8h" startline="8">MPC_MAIN_TASK_PERF_ID</references>
        <references refid="mpc__platform__cfg_8h_1a432a993c334b7f2be86cff5f43ec0679" compoundref="mpc__platform__cfg_8h" startline="49">MPC_SCH_PIPE_PEND_TIME</references>
        <references refid="mpc__platform__cfg_8h_1ac3fa5a38ef7303119d2d65bd21f89efc" compoundref="mpc__platform__cfg_8h" startline="96">MPC_STARTUP_TIMEOUT_MSEC</references>
        <references refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" compoundref="mpc__app_8cpp" startline="424" endline="490">RcvSchPipeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1a073d2889ff8fca17cfd0ec0fddf09c0d" compoundref="mpc__app_8h" startline="105">uiRunStatus</references>
        <referencedby refid="mpc__app_8cpp_1aeaca45edcd74396fe6ed52ebe42aa1f8" compoundref="mpc__app_8cpp" startline="945" endline="948">MPC_AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::InitApp</definition>
        <argsstring>(void)</argsstring>
        <name>InitApp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Multicopter m_Position Control (<ref refid="class_m_p_c" kindref="compound">MPC</ref>) application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Multicopter Position Control application initialization routine. This function performs all the required startup steps to initialize (or restore from CDS) <ref refid="class_m_p_c" kindref="compound">MPC</ref> data structures and get the application registered with the cFE services so it can begin to receive command messages and send events.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_ES_RegisterApp</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #MPC_InitEvent  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #MPC_InitPipe  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #MPC_InitData  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #MPC_InitConfigTbl  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">OS_TaskInstallDeleteHandler</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="388" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="366" bodyend="415"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_m_p_c_1aed508a5970bc3c452a769361b106658e" compoundref="mpc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</references>
        <references refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</references>
        <references refid="class_m_p_c_1a28cb0d241b3a60c95cd0cb94044bf539" compoundref="mpc__app_8cpp" startline="87" endline="99">InitEvent</references>
        <references refid="class_m_p_c_1ab58f7dadd6c6186f7b56e218c00fcae7" compoundref="mpc__app_8cpp" startline="108" endline="257">InitPipe</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a8dab6be34682e582f7cca28a66ca3000" compoundref="mpc__events_8h" startline="76">MPC_INIT_INF_EID</references>
        <references refid="mpc__version_8h_1ac573487a3e5eb56e4d0d94bc9b802086" compoundref="mpc__version_8h" startline="53">MPC_MAJOR_VERSION</references>
        <references refid="mpc__version_8h_1a2a64e4223b19e4737be010ce9ec3c02a" compoundref="mpc__version_8h" startline="67">MPC_MINOR_VERSION</references>
        <references refid="mpc__platform__cfg_8h_1a582414283b32891945dae283a99ec71f" compoundref="mpc__platform__cfg_8h" startline="25">MPC_MISSION_REV</references>
        <references refid="mpc__version_8h_1a1a048045b3439415099aba7b90dcc5ff" compoundref="mpc__version_8h" startline="81">MPC_REVISION</references>
        <referencedby refid="class_m_p_c_1a9b7afd8e591f9f2c18e3d61ae6dfbf34" compoundref="mpc__app_8cpp" startline="957" endline="1007">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a28cb0d241b3a60c95cd0cb94044bf539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::InitEvent</definition>
        <argsstring>(void)</argsstring>
        <name>InitEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Event Services and Event tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup cFE Event Services for use by the <ref refid="class_m_p_c" kindref="compound">MPC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__evs_8h_1aff6913e2ab9a37ae699382c482fdb786" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_EVS_Register</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="406" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="87" bodyend="99"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9c74cb368c56aff83d050a4807132460">CFE_EVS_BINARY_FILTER</references>
        <references refid="cfe__evs_8c_1a991c19d964b501bf0908bb60812fda28">CFE_EVS_Register</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <referencedby refid="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" compoundref="mpc__app_8cpp" startline="366" endline="415">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::InitData</definition>
        <argsstring>(void)</argsstring>
        <name>InitData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize global variables used by <ref refid="class_m_p_c" kindref="compound">MPC</ref> application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to initialize the <ref refid="class_m_p_c" kindref="compound">MPC</ref> application data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="419" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="266" bodyend="357"/>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaa8b23c50cc938e0b366df8d8eeeb1bf9f" compoundref="mpc__msg_8h" startline="330">BRAKE</references>
        <references refid="cfe__sb_8h_1a67765875dfff1d3d6d7cbc4a7ae2f8f0">CFE_SB_InitMsg</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a7c999d46f9a9c48f278a01cd08cba83d" compoundref="mpc__app_8h" startline="121">DiagTlm</references>
        <references refid="mpc__platform__cfg_8h_1a6a925c647dbc92c55f327b3feb405af6" compoundref="mpc__platform__cfg_8h" startline="99">DIRECTION_CHANGE_TRIGGER_TIME_US</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" compoundref="mpc__app_8h" startline="118">HkTlm</references>
        <references refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" compoundref="mpc__app_8h" startline="310">m_AccelerationStateLimitXY</references>
        <references refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" compoundref="mpc__app_8h" startline="313">m_AccelerationStateLimitZ</references>
        <references refid="class_m_p_c_1a99ba99a2619886c6084a9807fea8bf6a" compoundref="mpc__app_8h" startline="210">m_AltitudeHoldEngaged</references>
        <references refid="class_m_p_c_1a7f352a90a5342605c72b2de2f232424e" compoundref="mpc__app_8h" startline="128">m_ControlStateMsg</references>
        <references refid="class_m_p_c_1a159ff2c69d6fecc09094b6c7956b8c91" compoundref="mpc__app_8h" startline="174">m_CurrentPositionSetpoint</references>
        <references refid="class_m_p_c_1ac5603a5b5912c778f653ab5bedfce2ae" compoundref="mpc__app_8h" startline="189">m_DerivativeZ</references>
        <references refid="class_m_p_c_1aac4c489b6edd69f2b00bc46ebf77698f" compoundref="mpc__app_8h" startline="228">m_DoResetAltPos</references>
        <references refid="class_m_p_c_1a6bee6ab568f48e89464166a5bf7fe9df" compoundref="mpc__app_8h" startline="148">m_HeadingResetCounter</references>
        <references refid="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" compoundref="mpc__app_8h" startline="246">m_HoldOffboardXY</references>
        <references refid="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" compoundref="mpc__app_8h" startline="251">m_HoldOffboardZ</references>
        <references refid="class_m_p_c_1a89cc2587adcb2c8b82241b8373f7866f" compoundref="mpc__app_8h" startline="130">m_HomePositionMsg</references>
        <references refid="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" compoundref="mpc__app_8h" startline="255">m_InTakeoff</references>
        <references refid="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" compoundref="mpc__app_8h" startline="129">m_ManualControlSetpointMsg</references>
        <references refid="class_m_p_c_1a84f6ac513891845ed2a4288796257d59" compoundref="mpc__app_8h" startline="347">m_ManualDirectionChangeHysteresis</references>
        <references refid="class_m_p_c_1a46bc00fe5d42608088ce81a170e2452b" compoundref="mpc__app_8h" startline="316">m_ManualJerkLimitXY</references>
        <references refid="class_m_p_c_1a92c2c654b34bb2d72b5a3a136016b491" compoundref="mpc__app_8h" startline="319">m_ManualJerkLimitZ</references>
        <references refid="class_m_p_c_1a2735cf9814c6d80d2c59efe60bcf1337" compoundref="mpc__app_8h" startline="195">m_ManYawOffset</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1ad7f711a3182dc749c9e4df1279dfefe5" compoundref="mpc__app_8h" startline="206">m_PositionHoldEngaged</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a53ae6538f9d2ad32fbc15f117ac7b02a" compoundref="mpc__app_8h" startline="177">m_PreviousPositionSetpoint</references>
        <references refid="class_m_p_c_1a8e7421f432fb48146f7a985ba81f7d81" compoundref="mpc__app_8h" startline="271">m_RefAlt</references>
        <references refid="class_m_p_c_1a6161e06b5b590fa12b3ae93954abdf4c" compoundref="mpc__app_8h" startline="274">m_RefAltIsGlobal</references>
        <references refid="class_m_p_c_1ad1ae795d5dfb450e0724c1292508a338" compoundref="mpc__app_8h" startline="268">m_RefPos</references>
        <references refid="class_m_p_c_1ab978154eb831059e6b9c6460f1014a3e" compoundref="mpc__app_8h" startline="265">m_RefTimestamp</references>
        <references refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" compoundref="mpc__app_8h" startline="224">m_ResetAltitudeSetpoint</references>
        <references refid="class_m_p_c_1ae196aa56c4723c893f58e966422138a7" compoundref="mpc__app_8h" startline="144">m_ResetCounterXy</references>
        <references refid="class_m_p_c_1a1effb253b61f00a41c06e0d2295647ba" compoundref="mpc__app_8h" startline="140">m_ResetCounterZ</references>
        <references refid="class_m_p_c_1a308fcbf69f14791abcb919ca34e0c51e" compoundref="mpc__app_8h" startline="238">m_ResetIntXY</references>
        <references refid="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" compoundref="mpc__app_8h" startline="235">m_ResetIntZ</references>
        <references refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" compoundref="mpc__app_8h" startline="220">m_ResetPositionSetpoint</references>
        <references refid="class_m_p_c_1abf5b31580b84b52266d617ff2452753f" compoundref="mpc__app_8h" startline="241">m_ResetYawSetpoint</references>
        <references refid="class_m_p_c_1a687235734c84402db406bb37dba75421" compoundref="mpc__app_8h" startline="183">m_Rotation</references>
        <references refid="class_m_p_c_1a6358d71ebbcecee7f0183e10bdcd554f" compoundref="mpc__app_8h" startline="180">m_RSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1a20dff91c5bb60c66d4ec4c564a2bdc26" compoundref="mpc__app_8h" startline="338">m_StickInputXyPrev</references>
        <references refid="class_m_p_c_1a5b919d5d95787c2dbcb81cbfd0e3f1c6" compoundref="mpc__app_8h" startline="326">m_TakeoffVelLimit</references>
        <references refid="class_m_p_c_1a025ed791069468ece2b1714038ffb9b6" compoundref="mpc__app_8h" startline="186">m_ThrustInt</references>
        <references refid="class_m_p_c_1a224e834e7b808ab279487c154c43f91c" compoundref="mpc__app_8h" startline="260">m_TripletLatLonFinite</references>
        <references refid="class_m_p_c_1ab8cc330be5916b27bbe12d5ce6198db2" compoundref="mpc__app_8h" startline="341">m_UserIntentionXY</references>
        <references refid="class_m_p_c_1a0c82008c52ce3a08bf29e83a9c7f3ac8" compoundref="mpc__app_8h" startline="344">m_UserIntentionZ</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" compoundref="mpc__app_8h" startline="134">m_VehicleLandDetectedMsg</references>
        <references refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" compoundref="mpc__app_8h" startline="135">m_VehicleLocalPositionMsg</references>
        <references refid="class_m_p_c_1a315ee8ebbc28ff9a9bcb468104e74e94" compoundref="mpc__app_8h" startline="125">m_VehicleLocalPositionSetpointMsg</references>
        <references refid="class_m_p_c_1af7f5aabd74ab9ddb09ccd4f9cfa46738" compoundref="mpc__app_8h" startline="133">m_VehicleStatusMsg</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" compoundref="mpc__app_8h" startline="323">m_VelMaxXy</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a072f30602bd7151e8d8bc3d54679bcba" compoundref="mpc__app_8h" startline="171">m_VelocityErrD</references>
        <references refid="class_m_p_c_1aa90455009127a8b0b3f36c6b31d8ede0" compoundref="mpc__app_8h" startline="162">m_VelocityPrevious</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" compoundref="mpc__app_8h" startline="168">m_VelocitySetpointPrevious</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="class_m_p_c_1a1471899d23f4cfc430e059ea1d0fb3ce" compoundref="mpc__app_8h" startline="232">m_WasLanded</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="class_m_p_c_1a54765d4619cafc7dc83d8204f92aa5d0" compoundref="mpc__app_8h" startline="277">m_YawTakeoff</references>
        <references refid="mpc__msgids_8h_1acda5f1101015f4ad69e082878d0749f9" compoundref="mpc__msgids_8h" startline="12">MPC_DIAG_TLM_MID</references>
        <references refid="mpc__msgids_8h_1adddc6de890c87ea038785bae331bb756" compoundref="mpc__msgids_8h" startline="8">MPC_HK_TLM_MID</references>
        <references refid="struct_m_p_c___config_tbl__t_1a31187c25a95a14b9cf2eef9adb9c1a32" compoundref="mpc__tbldefs_8h" startline="601">MPC_ConfigTbl_t::MPC_JERK_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6a9ca3f988321f325b0760a83af82edc" compoundref="mpc__tbldefs_8h" startline="610">MPC_ConfigTbl_t::MPC_JERK_MIN</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaac157bdf0b85a40d2619cbc8bc1ae5fe2" compoundref="mpc__msg_8h" startline="334">NONE</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</references>
        <referencedby refid="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" compoundref="mpc__app_8cpp" startline="366" endline="415">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ab58f7dadd6c6186f7b56e218c00fcae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::InitPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_m_p_c" kindref="compound">MPC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="440" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="108" bodyend="257"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1afc2c2db1a504f544b430f33f28be769b">CFE_SB_Subscribe</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_m_p_c_1a5bf905d5de0a03e493e5425a15efbf6a" compoundref="mpc__app_8h" startline="96">CmdPipeId</references>
        <references refid="class_m_p_c_1a0cfe729a2e79fd42e303032e6b63801e" compoundref="mpc__app_8h" startline="99">DataPipeId</references>
        <references refid="mpc__msgids_8h_1af857afe94782197546475e3aaeb7c321" compoundref="mpc__msgids_8h" startline="11">MPC_CMD_MID</references>
        <references refid="mpc__platform__cfg_8h_1afb533b3ffaee05f6e0275cfe088961fa" compoundref="mpc__platform__cfg_8h" startline="74">MPC_CMD_PIPE_DEPTH</references>
        <references refid="mpc__platform__cfg_8h_1afa8890844978997718905ffcb2f64e23" compoundref="mpc__platform__cfg_8h" startline="81">MPC_CMD_PIPE_NAME</references>
        <references refid="mpc__app_8h_1a53db9ddde4cc1e91bd9f79f229b78fdc" compoundref="mpc__app_8h" startline="72">MPC_DATA_PIPE_DEPTH</references>
        <references refid="mpc__app_8h_1afa1446fb1e9a8bfc0dccb001a427028c" compoundref="mpc__app_8h" startline="75">MPC_DATA_PIPE_NAME</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9af2e487e10f4506be5fbd92f3f083a85f" compoundref="mpc__events_8h" startline="132">MPC_PIPE_INIT_ERR_EID</references>
        <references refid="mpc__platform__cfg_8h_1a945525c838dbf3c8deded662cdfde9f9" compoundref="mpc__platform__cfg_8h" startline="32">MPC_SCH_PIPE_DEPTH</references>
        <references refid="mpc__platform__cfg_8h_1ab1f8a0508782ba0f95bef6d683e0251f" compoundref="mpc__platform__cfg_8h" startline="39">MPC_SCH_PIPE_NAME</references>
        <references refid="mpc__msgids_8h_1ac2fbb3aaf3301843c4adb1fca03319ec" compoundref="mpc__msgids_8h" startline="9">MPC_SEND_HK_MID</references>
        <references refid="mpc__platform__cfg_8h_1a9ee389eb60c7bc571dada4654acdd47c" compoundref="mpc__platform__cfg_8h" startline="67">MPC_SEND_HK_MID_MAX_MSG_COUNT</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9ab0bcf83aedb7fa8a8ce6fa7efa534c60" compoundref="mpc__events_8h" startline="116">MPC_SUBSCRIBE_ERR_EID</references>
        <references refid="mpc__msgids_8h_1ab7aae52323666706d257521db24cc114" compoundref="mpc__msgids_8h" startline="10">MPC_WAKEUP_MID</references>
        <references refid="mpc__platform__cfg_8h_1a385cb80e7f0eb5ea02d1cb72aad2880d" compoundref="mpc__platform__cfg_8h" startline="58">MPC_WAKEUP_MID_MAX_MSG_COUNT</references>
        <references refid="class_m_p_c_1ad6be46e98df3506d73994c765bc99182" compoundref="mpc__app_8h" startline="93">SchPipeId</references>
        <referencedby refid="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" compoundref="mpc__app_8cpp" startline="366" endline="415">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::RcvSchPipeMsg</definition>
        <argsstring>(int32 iBlocking)</argsstring>
        <name>RcvSchPipeMsg</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>iBlocking</declname>
        </param>
        <briefdescription>
<para>Receive and process messages from the scheduler pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function receives and processes messages for the <ref refid="class_m_p_c" kindref="compound">MPC</ref> application from the SCH pipe. This function will pend for the type defined by iBlocking, allowing it to wait for messages, i.e. wakeup messages from scheduler.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iBlocking</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1acc9e6f66cd026d1c987c4c3de827366f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PEND_FOREVER</ref>, <ref refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_POLL</ref> or millisecond timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_RcvMsg</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="463" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="424" bodyend="490"/>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1a68b8b8ed93cecb670c945388a797e970">CFE_SB_TIME_OUT</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</references>
        <references refid="mpc__perfids_8h_1a276a07ed7ae50b5d70819b50f4b92195" compoundref="mpc__perfids_8h" startline="8">MPC_MAIN_TASK_PERF_ID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a0983c2d8ead65f33a9adb96923fa9ed9" compoundref="mpc__events_8h" startline="189">MPC_MSGID_ERR_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a12fd5b041c06c4477a2443f91375526d" compoundref="mpc__events_8h" startline="174">MPC_RCVMSG_ERR_EID</references>
        <references refid="mpc__msgids_8h_1ac2fbb3aaf3301843c4adb1fca03319ec" compoundref="mpc__msgids_8h" startline="9">MPC_SEND_HK_MID</references>
        <references refid="mpc__msgids_8h_1ab7aae52323666706d257521db24cc114" compoundref="mpc__msgids_8h" startline="10">MPC_WAKEUP_MID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_m_p_c_1aa2b56b3fbd3ff5db9d4dd820d38ee607" compoundref="mpc__app_8cpp" startline="599" endline="643">ProcessCmdPipe</references>
        <references refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</references>
        <references refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" compoundref="mpc__app_8cpp" startline="816" endline="838">ReportHousekeeping</references>
        <references refid="class_m_p_c_1ad6be46e98df3506d73994c765bc99182" compoundref="mpc__app_8h" startline="93">SchPipeId</references>
        <referencedby refid="class_m_p_c_1a9b7afd8e591f9f2c18e3d61ae6dfbf34" compoundref="mpc__app_8cpp" startline="957" endline="1007">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::ProcessDataPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessDataPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Multicopter Position Control Task incoming data processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming data subscribed by <ref refid="class_m_p_c" kindref="compound">MPC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates messages were successfully received with no errors.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="482" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="499" bodyend="590"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_m_p_c_1a0cfe729a2e79fd42e303032e6b63801e" compoundref="mpc__app_8h" startline="99">DataPipeId</references>
        <references refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" compoundref="mpc__app_8h" startline="118">HkTlm</references>
        <references refid="class_m_p_c_1a7f352a90a5342605c72b2de2f232424e" compoundref="mpc__app_8h" startline="128">m_ControlStateMsg</references>
        <references refid="class_m_p_c_1a89cc2587adcb2c8b82241b8373f7866f" compoundref="mpc__app_8h" startline="130">m_HomePositionMsg</references>
        <references refid="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" compoundref="mpc__app_8h" startline="129">m_ManualControlSetpointMsg</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" compoundref="mpc__app_8h" startline="134">m_VehicleLandDetectedMsg</references>
        <references refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" compoundref="mpc__app_8h" startline="135">m_VehicleLocalPositionMsg</references>
        <references refid="class_m_p_c_1af7f5aabd74ab9ddb09ccd4f9cfa46738" compoundref="mpc__app_8h" startline="133">m_VehicleStatusMsg</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a0983c2d8ead65f33a9adb96923fa9ed9" compoundref="mpc__events_8h" startline="189">MPC_MSGID_ERR_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a12fd5b041c06c4477a2443f91375526d" compoundref="mpc__events_8h" startline="174">MPC_RCVMSG_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" compoundref="mpc__app_8cpp" startline="1049" endline="1079">ProcessControlStateMsg</references>
        <references refid="class_m_p_c_1af5262f753b6e007c3370521a21f6da52" compoundref="mpc__app_8cpp" startline="1088" endline="1103">ProcessPositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" compoundref="mpc__app_8cpp" startline="1016" endline="1040">ProcessVehicleLocalPositionMsg</references>
        <references refid="struct_m_p_c___hk_tlm__t_1abb1092cc9d8681f036942c155a58173a" compoundref="mpc__msg_8h" startline="361">MPC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" compoundref="mpc__app_8cpp" startline="424" endline="490">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1aa2b56b3fbd3ff5db9d4dd820d38ee607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ProcessCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Multicopter Position Control Task incoming command processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming commands subscribed by <ref refid="class_m_p_c" kindref="compound">MPC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="495" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="599" bodyend="643"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_m_p_c_1a5bf905d5de0a03e493e5425a15efbf6a" compoundref="mpc__app_8h" startline="96">CmdPipeId</references>
        <references refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" compoundref="mpc__app_8h" startline="118">HkTlm</references>
        <references refid="mpc__msgids_8h_1af857afe94782197546475e3aaeb7c321" compoundref="mpc__msgids_8h" startline="11">MPC_CMD_MID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a0983c2d8ead65f33a9adb96923fa9ed9" compoundref="mpc__events_8h" startline="189">MPC_MSGID_ERR_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a12fd5b041c06c4477a2443f91375526d" compoundref="mpc__events_8h" startline="174">MPC_RCVMSG_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</references>
        <references refid="struct_m_p_c___hk_tlm__t_1abb1092cc9d8681f036942c155a58173a" compoundref="mpc__msg_8h" startline="361">MPC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" compoundref="mpc__app_8cpp" startline="424" endline="490">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ProcessAppCmds</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr)</argsstring>
        <name>ProcessAppCmds</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Multicopter Position Control Task application commands. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes command messages specific to the <ref refid="class_m_p_c" kindref="compound">MPC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="511" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="652" bodyend="807"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" compoundref="mpc__app_8h" startline="118">HkTlm</references>
        <references refid="struct_m_p_c___config_tbl__t_1a96be4f8eb09622fbbc0423b53a1b404c" compoundref="mpc__tbldefs_8h" startline="425">MPC_ConfigTbl_t::HOLD_DZ</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a7b4df59bfcf6ce0cc5774efff9c6d8aa" compoundref="mpc__events_8h" startline="203">MPC_CC_ERR_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a3a93669dc68a35f1b4dfe3e2e76ed27a" compoundref="mpc__events_8h" startline="99">MPC_CMD_NOOP_EID</references>
        <references refid="mpc__version_8h_1ac573487a3e5eb56e4d0d94bc9b802086" compoundref="mpc__version_8h" startline="53">MPC_MAJOR_VERSION</references>
        <references refid="mpc__version_8h_1a2a64e4223b19e4737be010ce9ec3c02a" compoundref="mpc__version_8h" startline="67">MPC_MINOR_VERSION</references>
        <references refid="mpc__platform__cfg_8h_1a582414283b32891945dae283a99ec71f" compoundref="mpc__platform__cfg_8h" startline="25">MPC_MISSION_REV</references>
        <references refid="mpc__msg_8h_1ac99b2c08bf85fae37fdd225127e4b200" compoundref="mpc__msg_8h" startline="90">MPC_NOOP_CC</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a6c5b59f1ecd76daa3f3ea614ac6731bc" compoundref="mpc__events_8h" startline="284">MPC_PID_UPDATE_EID</references>
        <references refid="mpc__msg_8h_1ae8b8925b6ec7823eaecf6f39b48092c7" compoundref="mpc__msg_8h" startline="124">MPC_RESET_CC</references>
        <references refid="mpc__version_8h_1a1a048045b3439415099aba7b90dcc5ff" compoundref="mpc__version_8h" startline="81">MPC_REVISION</references>
        <references refid="mpc__msg_8h_1a55e15ef6cc6d65519b0d3f12659b173d" compoundref="mpc__msg_8h" startline="222">MPC_SEND_DIAG_CC</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a040b739c8330c11a3df9158c0ae9d4c2" compoundref="mpc__events_8h" startline="298">MPC_SEND_DIAG_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9ac4f1399c46cf1f7f817e24c7a7935381" compoundref="mpc__events_8h" startline="312">MPC_SET_DZ_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a9eb7df4465dc88d65e03082df729199c" compoundref="mpc__events_8h" startline="326">MPC_SET_EXPO_EID</references>
        <references refid="mpc__msg_8h_1a44a1a16db9c377e98f247f14680693dc" compoundref="mpc__msg_8h" startline="255">MPC_SET_HOLD_DZ_CC</references>
        <references refid="mpc__msg_8h_1a535ce3d5c905feace3c3e21140031504" compoundref="mpc__msg_8h" startline="289">MPC_SET_STICK_EXPO_CC</references>
        <references refid="mpc__msg_8h_1a60f7da031ce504c37c9d605e130a9d46" compoundref="mpc__msg_8h" startline="322">MPC_SET_TKO_RAMP_CC</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a8da1c68d15fe77d50756583a71786eb3" compoundref="mpc__events_8h" startline="340">MPC_SET_TKO_RAMP_EID</references>
        <references refid="mpc__msg_8h_1a8d67e632afd77a63706e14db880bd232" compoundref="mpc__msg_8h" startline="158">MPC_SET_XY_PID_CC</references>
        <references refid="mpc__msg_8h_1ab19353eb3c6d712e1195f80106dd4cf6" compoundref="mpc__msg_8h" startline="191">MPC_SET_Z_PID_CC</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" compoundref="mpc__app_8cpp" startline="847" endline="876">ReportDiagnostic</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0341372f873c3fdc42c308770dbe418" compoundref="mpc__tbldefs_8h" startline="550">MPC_ConfigTbl_t::TKO_RAMP_T</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1a51689fa2d1c581b6f3d2382254b80e4e" compoundref="mpc__app_8cpp" startline="3246" endline="3262">UpdateHoldDz</references>
        <references refid="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" compoundref="mpc__app_8cpp" startline="3271" endline="3289">UpdateStickExpo</references>
        <references refid="class_m_p_c_1a22b9caa726c0d54b4ccd2352deb78d4f" compoundref="mpc__app_8cpp" startline="3298" endline="3313">UpdateTakeoffRampTime</references>
        <references refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</references>
        <references refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a56271591609f9484ab70171fd8030d0b" compoundref="mpc__msg_8h" startline="357">MPC_HkTlm_t::usCmdCnt</references>
        <references refid="struct_m_p_c___hk_tlm__t_1abb1092cc9d8681f036942c155a58173a" compoundref="mpc__msg_8h" startline="361">MPC_HkTlm_t::usCmdErrCnt</references>
        <references refid="class_m_p_c_1a20690d2882592e87569221f8c2bd7c48" compoundref="mpc__app_8cpp" startline="911" endline="936">VerifyCmdLength</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab84a855f46ccdc16da15ba64026a9df0" compoundref="mpc__tbldefs_8h" startline="500">MPC_ConfigTbl_t::XY_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae5a13fd047a93a7fcdbc60955149dbae" compoundref="mpc__tbldefs_8h" startline="513">MPC_ConfigTbl_t::Z_MAN_EXPO</references>
        <referencedby refid="class_m_p_c_1aa2b56b3fbd3ff5db9d4dd820d38ee607" compoundref="mpc__app_8cpp" startline="599" endline="643">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ReportHousekeeping</definition>
        <argsstring>(void)</argsstring>
        <name>ReportHousekeeping</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_m_p_c" kindref="compound">MPC</ref> housekeeping message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the housekeeping message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="523" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="816" bodyend="838"/>
        <references refid="struct_m_p_c___hk_tlm__t_1ab22b514a0f5c902f1a2433321eb9c770" compoundref="mpc__msg_8h" startline="364">MPC_HkTlm_t::AccelerationStateLimitXY</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a023f533261169aac04209d086e3b8d9c" compoundref="mpc__msg_8h" startline="367">MPC_HkTlm_t::AccelerationStateLimitZ</references>
        <references refid="struct_m_p_c___hk_tlm__t_1ada7c24fa39ba7e2dd502c83e9d59ff02" compoundref="mpc__msg_8h" startline="400">MPC_HkTlm_t::AltitudeHoldEngaged</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" compoundref="mpc__app_8h" startline="118">HkTlm</references>
        <references refid="struct_m_p_c___hk_tlm__t_1adb4d9fe6e9f48dfd0d556380235ce078" compoundref="mpc__msg_8h" startline="409">MPC_HkTlm_t::InTakeoff</references>
        <references refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" compoundref="mpc__app_8h" startline="310">m_AccelerationStateLimitXY</references>
        <references refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" compoundref="mpc__app_8h" startline="313">m_AccelerationStateLimitZ</references>
        <references refid="class_m_p_c_1a99ba99a2619886c6084a9807fea8bf6a" compoundref="mpc__app_8h" startline="210">m_AltitudeHoldEngaged</references>
        <references refid="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" compoundref="mpc__app_8h" startline="255">m_InTakeoff</references>
        <references refid="class_m_p_c_1a46bc00fe5d42608088ce81a170e2452b" compoundref="mpc__app_8h" startline="316">m_ManualJerkLimitXY</references>
        <references refid="class_m_p_c_1a92c2c654b34bb2d72b5a3a136016b491" compoundref="mpc__app_8h" startline="319">m_ManualJerkLimitZ</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1ad7f711a3182dc749c9e4df1279dfefe5" compoundref="mpc__app_8h" startline="206">m_PositionHoldEngaged</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1a5b919d5d95787c2dbcb81cbfd0e3f1c6" compoundref="mpc__app_8h" startline="326">m_TakeoffVelLimit</references>
        <references refid="class_m_p_c_1a224e834e7b808ab279487c154c43f91c" compoundref="mpc__app_8h" startline="260">m_TripletLatLonFinite</references>
        <references refid="class_m_p_c_1ab8cc330be5916b27bbe12d5ce6198db2" compoundref="mpc__app_8h" startline="341">m_UserIntentionXY</references>
        <references refid="class_m_p_c_1a0c82008c52ce3a08bf29e83a9c7f3ac8" compoundref="mpc__app_8h" startline="344">m_UserIntentionZ</references>
        <references refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" compoundref="mpc__app_8h" startline="323">m_VelMaxXy</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="class_m_p_c_1a54765d4619cafc7dc83d8204f92aa5d0" compoundref="mpc__app_8h" startline="277">m_YawTakeoff</references>
        <references refid="struct_m_p_c___hk_tlm__t_1ab757c608aacff7584cfb593a84f45f4c" compoundref="mpc__msg_8h" startline="370">MPC_HkTlm_t::ManualJerkLimitXY</references>
        <references refid="struct_m_p_c___hk_tlm__t_1abc3fd8c3dfe334561306db86f51350b6" compoundref="mpc__msg_8h" startline="373">MPC_HkTlm_t::ManualJerkLimitZ</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a9aff9a825fa044887d5e9ceaf15761c6" compoundref="mpc__msg_8h" startline="394">MPC_HkTlm_t::ModeAuto</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a79a8fc0257b51c687b0a2a4ae66ff1c7" compoundref="mpc__msg_8h" startline="397">MPC_HkTlm_t::PositionHoldEngaged</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a469a7ab0b84034fc54f704ae8d4001fa" compoundref="mpc__msg_8h" startline="406">MPC_HkTlm_t::RunAltControl</references>
        <references refid="struct_m_p_c___hk_tlm__t_1ac2aaea0a9f4b97a1b9de5aae60077898" compoundref="mpc__msg_8h" startline="403">MPC_HkTlm_t::RunPosControl</references>
        <references refid="struct_m_p_c___hk_tlm__t_1af0a391998d3caba411814827132efc07" compoundref="mpc__msg_8h" startline="376">MPC_HkTlm_t::TakeoffVelLimit</references>
        <references refid="struct_m_p_c___hk_tlm__t_1af854d067395560d3ead6bcf5d93b41c7" compoundref="mpc__msg_8h" startline="412">MPC_HkTlm_t::TripletLatLonFinite</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a87eefffec5e721d9cde0df34a0c401ad" compoundref="mpc__msg_8h" startline="388">MPC_HkTlm_t::UserIntentionXY</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a54e05f6b063fce07a107ecb993985530" compoundref="mpc__msg_8h" startline="391">MPC_HkTlm_t::UserIntentionZ</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a777db5ac0be61c43f36ff2b770ef64ce" compoundref="mpc__msg_8h" startline="379">MPC_HkTlm_t::VelMaxXy</references>
        <references refid="struct_m_p_c___hk_tlm__t_1a89202c928455a7dfca81b1b1da9b6b07" compoundref="mpc__msg_8h" startline="385">MPC_HkTlm_t::Yaw</references>
        <references refid="struct_m_p_c___hk_tlm__t_1ae0e9b31300cf1201f22c7e42d6c16bae" compoundref="mpc__msg_8h" startline="382">MPC_HkTlm_t::YawTakeoff</references>
        <referencedby refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" compoundref="mpc__app_8cpp" startline="424" endline="490">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ReportDiagnostic</definition>
        <argsstring>(void)</argsstring>
        <name>ReportDiagnostic</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_m_p_c" kindref="compound">MPC</ref> Diagnostic message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the diagnostic message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="535" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="847" bodyend="876"/>
        <references refid="struct_m_p_c___config_tbl__t_1a77b8609906cbeb14abbadc39a46854ab" compoundref="mpc__tbldefs_8h" startline="481">MPC_ConfigTbl_t::ACC_DOWN_MAX</references>
        <references refid="struct_m_p_c___diag_packet__t_1a78518009f2694f485033ba0529ebadb7" compoundref="mpc__msg_8h" startline="484">MPC_DiagPacket_t::ACC_DOWN_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1af7afc87d6bbd108b801b59200f7f1429" compoundref="mpc__tbldefs_8h" startline="463">MPC_ConfigTbl_t::ACC_HOR_MAX</references>
        <references refid="struct_m_p_c___diag_packet__t_1a3ebb07f572f35f4d1f9a809c16c91121" compoundref="mpc__msg_8h" startline="478">MPC_DiagPacket_t::ACC_HOR_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3e6cad9cec7f403f92d522e31d163e02" compoundref="mpc__tbldefs_8h" startline="472">MPC_ConfigTbl_t::ACC_UP_MAX</references>
        <references refid="struct_m_p_c___diag_packet__t_1aa90c6c9e02dd0134832f0d3f9ffb68c8" compoundref="mpc__msg_8h" startline="481">MPC_DiagPacket_t::ACC_UP_MAX</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a7c999d46f9a9c48f278a01cd08cba83d" compoundref="mpc__app_8h" startline="121">DiagTlm</references>
        <references refid="struct_m_p_c___config_tbl__t_1a96be4f8eb09622fbbc0423b53a1b404c" compoundref="mpc__tbldefs_8h" startline="425">MPC_ConfigTbl_t::HOLD_DZ</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="struct_m_p_c___diag_packet__t_1acf8c53569783014708c2e1bfb57d94fa" compoundref="mpc__msg_8h" startline="487">MPC_DiagPacket_t::MPC_DEC_HOR_SLOW</references>
        <references refid="struct_m_p_c___config_tbl__t_1acaa04aaf9d4c95fafa84747f2d3aa46d" compoundref="mpc__tbldefs_8h" startline="619">MPC_ConfigTbl_t::MPC_DEC_HOR_SLOW</references>
        <references refid="struct_m_p_c___diag_packet__t_1a7880c0143b85420dfac4a787e077ba17" compoundref="mpc__msg_8h" startline="490">MPC_DiagPacket_t::MPC_HOLD_DZ</references>
        <references refid="struct_m_p_c___diag_packet__t_1aba82e7024e24d5ee187cb63cafd1199e" compoundref="mpc__msg_8h" startline="466">MPC_DiagPacket_t::MPC_VEL_MANUAL</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0acc58bb7322f24a8491e872ab1101b" compoundref="mpc__tbldefs_8h" startline="631">MPC_ConfigTbl_t::MPC_VEL_MANUAL</references>
        <references refid="struct_m_p_c___config_tbl__t_1af9ec607deb88ae941d48baf777e960ab" compoundref="mpc__tbldefs_8h" startline="369">MPC_ConfigTbl_t::TILTMAX_AIR</references>
        <references refid="struct_m_p_c___diag_packet__t_1ab29e03b88eee4cc8861777c08192f298" compoundref="mpc__msg_8h" startline="475">MPC_DiagPacket_t::TILTMAX_AIR</references>
        <references refid="struct_m_p_c___diag_packet__t_1a96334bb96a3264559cb11db3376b4b07" compoundref="mpc__msg_8h" startline="499">MPC_DiagPacket_t::TKO_RAMP_T</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0341372f873c3fdc42c308770dbe418" compoundref="mpc__tbldefs_8h" startline="550">MPC_ConfigTbl_t::TKO_RAMP_T</references>
        <references refid="struct_m_p_c___config_tbl__t_1a4df59eedd1d9f9bc4fb19e3f14d766cb" compoundref="mpc__tbldefs_8h" startline="323">MPC_ConfigTbl_t::XY_CRUISE</references>
        <references refid="struct_m_p_c___diag_packet__t_1a3964fd5008839cb87bc0df5f972a7a11" compoundref="mpc__msg_8h" startline="463">MPC_DiagPacket_t::XY_CRUISE</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab71d7bd78c417fbe917f92eaa5481404" compoundref="mpc__tbldefs_8h" startline="358">MPC_ConfigTbl_t::XY_FF</references>
        <references refid="struct_m_p_c___diag_packet__t_1a0307c80deb8d43f07e1730f1deb615e2" compoundref="mpc__msg_8h" startline="472">MPC_DiagPacket_t::XY_FF</references>
        <references refid="struct_m_p_c___diag_packet__t_1aeb611383a9d047a46d5a94439f063628" compoundref="mpc__msg_8h" startline="493">MPC_DiagPacket_t::XY_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab84a855f46ccdc16da15ba64026a9df0" compoundref="mpc__tbldefs_8h" startline="500">MPC_ConfigTbl_t::XY_MAN_EXPO</references>
        <references refid="struct_m_p_c___diag_packet__t_1a45907e7a2408b36ec2d43b25eb2bcd8d" compoundref="mpc__msg_8h" startline="451">MPC_DiagPacket_t::XY_P</references>
        <references refid="struct_m_p_c___diag_packet__t_1a4f7a886475b0a312126a5bbea9aaa4a5" compoundref="mpc__msg_8h" startline="460">MPC_DiagPacket_t::XY_VEL_D</references>
        <references refid="struct_m_p_c___diag_packet__t_1a9bf4a7900ed4787698b9765bd6dec598" compoundref="mpc__msg_8h" startline="457">MPC_DiagPacket_t::XY_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6e83ca52baecb072e11679b36861b6b0" compoundref="mpc__tbldefs_8h" startline="348">MPC_ConfigTbl_t::XY_VEL_MAX</references>
        <references refid="struct_m_p_c___diag_packet__t_1a84897aff4565ed4896da9a3cee5759e1" compoundref="mpc__msg_8h" startline="469">MPC_DiagPacket_t::XY_VEL_MAX</references>
        <references refid="struct_m_p_c___diag_packet__t_1aad1cef734be3255630ad682028ae27ad" compoundref="mpc__msg_8h" startline="454">MPC_DiagPacket_t::XY_VEL_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7ab4a24fb8ce4a8efa0664ccfd221515" compoundref="mpc__tbldefs_8h" startline="284">MPC_ConfigTbl_t::Z_FF</references>
        <references refid="struct_m_p_c___diag_packet__t_1a55f231db983a512609b36d32d29d7ad3" compoundref="mpc__msg_8h" startline="448">MPC_DiagPacket_t::Z_FF</references>
        <references refid="struct_m_p_c___diag_packet__t_1a2654686066becbce88eb33502314b7fc" compoundref="mpc__msg_8h" startline="496">MPC_DiagPacket_t::Z_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae5a13fd047a93a7fcdbc60955149dbae" compoundref="mpc__tbldefs_8h" startline="513">MPC_ConfigTbl_t::Z_MAN_EXPO</references>
        <references refid="struct_m_p_c___diag_packet__t_1a13a93630deb5d3e9164340fe914a210f" compoundref="mpc__msg_8h" startline="430">MPC_DiagPacket_t::Z_P</references>
        <references refid="struct_m_p_c___diag_packet__t_1a257ce99ea589566651d7462ee67a71f3" compoundref="mpc__msg_8h" startline="439">MPC_DiagPacket_t::Z_VEL_D</references>
        <references refid="struct_m_p_c___diag_packet__t_1a3aee6e91572d2659409689d63e3d039a" compoundref="mpc__msg_8h" startline="436">MPC_DiagPacket_t::Z_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1aeeedefa7fb775cfd3da9100cf9155470" compoundref="mpc__tbldefs_8h" startline="273">MPC_ConfigTbl_t::Z_VEL_MAX_DN</references>
        <references refid="struct_m_p_c___diag_packet__t_1afdaaca114f7a0223ff58b30889e99cb8" compoundref="mpc__msg_8h" startline="445">MPC_DiagPacket_t::Z_VEL_MAX_DN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a88f8962ab99b2964010499c28578539f" compoundref="mpc__tbldefs_8h" startline="261">MPC_ConfigTbl_t::Z_VEL_MAX_UP</references>
        <references refid="struct_m_p_c___diag_packet__t_1a8be4c72447f4cd5ae2de7311700e7017" compoundref="mpc__msg_8h" startline="442">MPC_DiagPacket_t::Z_VEL_MAX_UP</references>
        <references refid="struct_m_p_c___diag_packet__t_1a2356d7de3c2dd141eaf50ead12622ac9" compoundref="mpc__msg_8h" startline="433">MPC_DiagPacket_t::Z_VEL_P</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ad9a240550f944a91459f78f8b796238e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::SendVehicleAttitudeSetpointMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleAttitudeSetpointMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleAttitudeSetpointMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleAttitudeSetpointMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="548" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="885" bodyend="889"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a629fef51ce0ca03063856bedd1d4c2d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::SendVehicleLocalPositionSetpointMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleLocalPositionSetpointMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleLocalPosition message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleLocalPosition message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="561" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="898" bodyend="902"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_m_p_c_1a315ee8ebbc28ff9a9bcb468104e74e94" compoundref="mpc__app_8h" startline="125">m_VehicleLocalPositionSetpointMsg</references>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a20690d2882592e87569221f8c2bd7c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::VerifyCmdLength</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr, uint16 usExpectedLen)</argsstring>
        <name>VerifyCmdLength</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>usExpectedLen</declname>
        </param>
        <briefdescription>
<para>Verify Command Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function verifies the command message length.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usExpectedLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected length of the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE if the message length matches expectations, FALSE if it does not.  </para></entry></row>
</table>
</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="586" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="911" bodyend="936"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1ac32b86cf9e1d12a547792853c35f6aa1">CFE_SB_GetTotalMsgLength</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" compoundref="mpc__app_8h" startline="118">HkTlm</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a234cbf0783ad801854bd49be67c53fc0" compoundref="mpc__events_8h" startline="220">MPC_MSGLEN_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_m_p_c___hk_tlm__t_1abb1092cc9d8681f036942c155a58173a" compoundref="mpc__msg_8h" startline="361">MPC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1aed508a5970bc3c452a769361b106658e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::InitConfigTbl</definition>
        <argsstring>(void)</argsstring>
        <name>InitConfigTbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="class_m_p_c" kindref="compound">MPC</ref> configuration tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes <ref refid="class_m_p_c" kindref="compound">MPC</ref>&apos;s configuration tables. This includes &lt;TODO&gt;.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Register</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Load</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #MPC_AcquireConfigPointers  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="606" column="1" bodyfile="apps/mpc/fsw/src/mpc_config_utils.cpp" bodystart="51" bodyend="89"/>
        <references refid="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" compoundref="mpc__config__utils_8cpp" startline="98" endline="141">AcquireConfigPointers</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50">CFE_TBL_Load</references>
        <references refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462">CFE_TBL_OPT_DEFAULT</references>
        <references refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683">CFE_TBL_Register</references>
        <references refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be">CFE_TBL_SRC_FILE</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a2bb02737efc29d2dab604f09a00875e3" compoundref="mpc__events_8h" startline="252">MPC_CFGTBL_LOAD_ERR_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a60e7bb54d4e93593d325c01dfbbf5737" compoundref="mpc__events_8h" startline="236">MPC_CFGTBL_REG_ERR_EID</references>
        <references refid="mpc__platform__cfg_8h_1a7b182786d23013f621b3cd98a78ba1e7" compoundref="mpc__platform__cfg_8h" startline="89">MPC_CONFIG_TABLE_FILENAME</references>
        <references refid="mpc__tbldefs_8h_1af15f63d5ef9e87484de5b88b03a8a17c" compoundref="mpc__tbldefs_8h" startline="157">MPC_CONFIG_TABLENAME</references>
        <references refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</references>
        <referencedby refid="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" compoundref="mpc__app_8cpp" startline="366" endline="415">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::AcquireConfigPointers</definition>
        <argsstring>(void)</argsstring>
        <name>AcquireConfigPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Obtain <ref refid="class_m_p_c" kindref="compound">MPC</ref> configuration tables data pointers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function manages the configuration tables and obtains a pointer to their data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="623" column="1" bodyfile="apps/mpc/fsw/src/mpc_config_utils.cpp" bodystart="98" bodyend="141"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface">CFE_TBL_GetAddress</references>
        <references refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5">CFE_TBL_INFO_UPDATED</references>
        <references refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c">CFE_TBL_Manage</references>
        <references refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a">CFE_TBL_ReleaseAddress</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9af497a0bd3253917d77f48cdf6b289eb2" compoundref="mpc__events_8h" startline="158">MPC_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9ae89b9338365932030273a90d1294a044" compoundref="mpc__events_8h" startline="145">MPC_CFGTBL_MANAGE_ERR_EID</references>
        <references refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" compoundref="mpc__app_8cpp" startline="3322" endline="3342">UpdateParamsFromTable</references>
        <referencedby refid="class_m_p_c_1a9b7afd8e591f9f2c18e3d61ae6dfbf34" compoundref="mpc__app_8cpp" startline="957" endline="1007">AppMain</referencedby>
        <referencedby refid="class_m_p_c_1aed508a5970bc3c452a769361b106658e" compoundref="mpc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ProcessControlStateMsg</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessControlStateMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process Control State Message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates yaw and Euler angles from the current control state message.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="636" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1049" bodyend="1079"/>
        <references refid="class_m_p_c_1a7f352a90a5342605c72b2de2f232424e" compoundref="mpc__app_8h" startline="128">m_ControlStateMsg</references>
        <references refid="class_m_p_c_1a6bee6ab568f48e89464166a5bf7fe9df" compoundref="mpc__app_8h" startline="148">m_HeadingResetCounter</references>
        <references refid="class_m_p_c_1a687235734c84402db406bb37dba75421" compoundref="mpc__app_8h" startline="183">m_Rotation</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ProcessVehicleLocalPositionMsg</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessVehicleLocalPositionMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process Vehicle Local Position message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs Position Setpoint resets, as directed by the #VehicleLocalPositionMsg message.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="649" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1016" bodyend="1040"/>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1ae196aa56c4723c893f58e966422138a7" compoundref="mpc__app_8h" startline="144">m_ResetCounterXy</references>
        <references refid="class_m_p_c_1a1effb253b61f00a41c06e0d2295647ba" compoundref="mpc__app_8h" startline="140">m_ResetCounterZ</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" compoundref="mpc__app_8h" startline="135">m_VehicleLocalPositionMsg</references>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1af5262f753b6e007c3370521a21f6da52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ProcessPositionSetpointTripletMsg</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessPositionSetpointTripletMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Process Position Setpoint Triplet message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function determines if the setpoint positions are valid and sets the Valid flag to FALSE when they are invalid.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="662" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1088" bodyend="1103"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <referencedby refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" compoundref="mpc__app_8cpp" startline="499" endline="590">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>The main cyclic Execution function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This is the function called in the main cyclic loop of the <ref refid="class_m_p_c" kindref="compound">MPC</ref> application. This is triggered by the <ref refid="mpc__msgids_8h_1ab7aae52323666706d257521db24cc114" kindref="member">MPC_WAKEUP_MID</ref> function and performs the bulk of the <ref refid="class_m_p_c" kindref="compound">MPC</ref> functionality.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="676" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1112" bodyend="1250"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</references>
        <references refid="class_m_p_c_1a99ba99a2619886c6084a9807fea8bf6a" compoundref="mpc__app_8h" startline="210">m_AltitudeHoldEngaged</references>
        <references refid="class_m_p_c_1aac4c489b6edd69f2b00bc46ebf77698f" compoundref="mpc__app_8h" startline="228">m_DoResetAltPos</references>
        <references refid="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" compoundref="mpc__app_8h" startline="246">m_HoldOffboardXY</references>
        <references refid="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" compoundref="mpc__app_8h" startline="251">m_HoldOffboardZ</references>
        <references refid="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" compoundref="mpc__app_8h" startline="255">m_InTakeoff</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1ad7f711a3182dc749c9e4df1279dfefe5" compoundref="mpc__app_8h" startline="206">m_PositionHoldEngaged</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" compoundref="mpc__app_8h" startline="224">m_ResetAltitudeSetpoint</references>
        <references refid="class_m_p_c_1a308fcbf69f14791abcb919ca34e0c51e" compoundref="mpc__app_8h" startline="238">m_ResetIntXY</references>
        <references refid="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" compoundref="mpc__app_8h" startline="235">m_ResetIntZ</references>
        <references refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" compoundref="mpc__app_8h" startline="220">m_ResetPositionSetpoint</references>
        <references refid="class_m_p_c_1abf5b31580b84b52266d617ff2452753f" compoundref="mpc__app_8h" startline="241">m_ResetYawSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1a5b919d5d95787c2dbcb81cbfd0e3f1c6" compoundref="mpc__app_8h" startline="326">m_TakeoffVelLimit</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" compoundref="mpc__app_8h" startline="134">m_VehicleLandDetectedMsg</references>
        <references refid="class_m_p_c_1a315ee8ebbc28ff9a9bcb468104e74e94" compoundref="mpc__app_8h" startline="125">m_VehicleLocalPositionSetpointMsg</references>
        <references refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" compoundref="mpc__app_8h" startline="323">m_VelMaxXy</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1aa90455009127a8b0b3f36c6b31d8ede0" compoundref="mpc__app_8h" startline="162">m_VelocityPrevious</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" compoundref="mpc__app_8h" startline="168">m_VelocitySetpointPrevious</references>
        <references refid="class_m_p_c_1a1471899d23f4cfc430e059ea1d0fb3ce" compoundref="mpc__app_8h" startline="232">m_WasLanded</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="class_m_p_c_1a54765d4619cafc7dc83d8204f92aa5d0" compoundref="mpc__app_8h" startline="277">m_YawTakeoff</references>
        <references refid="class_m_p_c_1ad9a240550f944a91459f78f8b796238e" compoundref="mpc__app_8cpp" startline="885" endline="889">SendVehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a629fef51ce0ca03063856bedd1d4c2d9" compoundref="mpc__app_8cpp" startline="898" endline="902">SendVehicleLocalPositionSetpointMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" compoundref="mpc__app_8cpp" startline="1259" endline="1305">UpdateRef</references>
        <references refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" compoundref="mpc__app_8cpp" startline="1314" endline="1373">UpdateVelocityDerivative</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6e83ca52baecb072e11679b36861b6b0" compoundref="mpc__tbldefs_8h" startline="348">MPC_ConfigTbl_t::XY_VEL_MAX</references>
        <referencedby refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" compoundref="mpc__app_8cpp" startline="424" endline="490">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::UpdateRef</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateRef</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update the reference position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function updates the reference position.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="688" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1259" bodyend="1305"/>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1a8e7421f432fb48146f7a985ba81f7d81" compoundref="mpc__app_8h" startline="271">m_RefAlt</references>
        <references refid="class_m_p_c_1a6161e06b5b590fa12b3ae93954abdf4c" compoundref="mpc__app_8h" startline="274">m_RefAltIsGlobal</references>
        <references refid="class_m_p_c_1ad1ae795d5dfb450e0724c1292508a338" compoundref="mpc__app_8h" startline="268">m_RefPos</references>
        <references refid="class_m_p_c_1ab978154eb831059e6b9c6460f1014a3e" compoundref="mpc__app_8h" startline="265">m_RefTimestamp</references>
        <references refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" compoundref="mpc__app_8h" startline="135">m_VehicleLocalPositionMsg</references>
        <references refid="class_m_p_c_1af7f5aabd74ab9ddb09ccd4f9cfa46738" compoundref="mpc__app_8h" startline="133">m_VehicleStatusMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::UpdateVelocityDerivative</definition>
        <argsstring>(float dt)</argsstring>
        <name>UpdateVelocityDerivative</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Update velocity derivative. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function updates the velocity and the velocity derivative independent of the current flight mode.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="701" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1314" bodyend="1373"/>
        <references refid="struct_m_p_c___config_tbl__t_1a0f7bdcf158a4b168fb8461b2424c0729" compoundref="mpc__tbldefs_8h" startline="490">MPC_ConfigTbl_t::ALT_MODE</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="struct_m_p_c___config_tbl__t_1a40cde4beb9b297b1617864e70af6f060" compoundref="mpc__tbldefs_8h" startline="389">MPC_ConfigTbl_t::LAND_SPEED</references>
        <references refid="class_m_p_c_1ac5603a5b5912c778f653ab5bedfce2ae" compoundref="mpc__app_8h" startline="189">m_DerivativeZ</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" compoundref="mpc__app_8h" startline="135">m_VehicleLocalPositionMsg</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a072f30602bd7151e8d8bc3d54679bcba" compoundref="mpc__app_8h" startline="171">m_VelocityErrD</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a341012eef955d123987657c75c08b5a6" compoundref="mpc__app_8h" startline="297">m_VelXDeriv</references>
        <references refid="class_m_p_c_1a7cd0f15610f285c6c81a67e7842dd6a5" compoundref="mpc__app_8h" startline="301">m_VelYDeriv</references>
        <references refid="class_m_p_c_1ab35fe04056c200733d9a2806ddcce495" compoundref="mpc__app_8h" startline="305">m_VelZDeriv</references>
        <references refid="struct_m_p_c___config_tbl__t_1a747b97f961a8b2ab5ebdee6e53067e8c" compoundref="mpc__tbldefs_8h" startline="454">MPC_ConfigTbl_t::VELD_LP</references>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::DoControl</definition>
        <argsstring>(float dt)</argsstring>
        <name>DoControl</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Execute the control functions. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function either executes the <ref refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" kindref="member">ControlManual</ref> or the <ref refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" kindref="member">ControlNonManual</ref> function, depending on the current flight mode.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="714" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1382" bodyend="1412"/>
        <references refid="struct_m_p_c___config_tbl__t_1af7afc87d6bbd108b801b59200f7f1429" compoundref="mpc__tbldefs_8h" startline="463">MPC_ConfigTbl_t::ACC_HOR_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3e6cad9cec7f403f92d522e31d163e02" compoundref="mpc__tbldefs_8h" startline="472">MPC_ConfigTbl_t::ACC_UP_MAX</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</references>
        <references refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" compoundref="mpc__app_8h" startline="310">m_AccelerationStateLimitXY</references>
        <references refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" compoundref="mpc__app_8h" startline="313">m_AccelerationStateLimitZ</references>
        <references refid="class_m_p_c_1a159ff2c69d6fecc09094b6c7956b8c91" compoundref="mpc__app_8h" startline="174">m_CurrentPositionSetpoint</references>
        <references refid="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" compoundref="mpc__app_8h" startline="246">m_HoldOffboardXY</references>
        <references refid="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" compoundref="mpc__app_8h" startline="251">m_HoldOffboardZ</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::GenerateAttitudeSetpoint</definition>
        <argsstring>(float dt)</argsstring>
        <name>GenerateAttitudeSetpoint</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Generate attitude setpoint. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function generates the <ref refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" kindref="member">m_VehicleAttitudeSetpointMsg</ref> message.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="727" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1421" bodyend="1521"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" compoundref="mpc__app_8h" startline="129">m_ManualControlSetpointMsg</references>
        <references refid="class_m_p_c_1a2735cf9814c6d80d2c59efe60bcf1337" compoundref="mpc__app_8h" startline="195">m_ManYawOffset</references>
        <references refid="class_m_p_c_1abf5b31580b84b52266d617ff2452753f" compoundref="mpc__app_8h" startline="241">m_ResetYawSetpoint</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" compoundref="mpc__app_8h" startline="134">m_VehicleLandDetectedMsg</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9e80a94cce1e08d38501ac197ab5381a" compoundref="mpc__tbldefs_8h" startline="407">MPC_ConfigTbl_t::MAN_TILT_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7b64bf2a0c585df99ae09eb9944cdb05" compoundref="mpc__tbldefs_8h" startline="416">MPC_ConfigTbl_t::MAN_Y_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a5ca863f40df7f0a079791c3b6759e251" compoundref="mpc__tbldefs_8h" startline="218">MPC_ConfigTbl_t::MANTHR_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8d1a416bd62c5467a08f4a9690ba44b2" compoundref="mpc__tbldefs_8h" startline="206">MPC_ConfigTbl_t::MANTHR_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a14b5a7f67bf7facc2ed774d0f0d31eb6" compoundref="mpc__tbldefs_8h" startline="570">MPC_ConfigTbl_t::MC_YAW_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a299900ee7d149d256c27daad8236b762" compoundref="mpc__tbldefs_8h" startline="559">MPC_ConfigTbl_t::MC_YAWRATE_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8b6ed9c83f8de1ce2e5720933e61c07f" compoundref="mpc__tbldefs_8h" startline="184">MPC_ConfigTbl_t::THR_HOVER</references>
        <references refid="class_m_p_c_1aa35415883f81661b8652f8bc028512c5" compoundref="mpc__app_8cpp" startline="1812" endline="1828">ThrottleCurve</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_m_p_c___config_tbl__t_1a2a1e9092b8006f2a7ca211383beb6481" compoundref="mpc__tbldefs_8h" startline="572">MPC_ConfigTbl_t::VT_OPT_RECOV_EN</references>
        <referencedby refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" compoundref="mpc__app_8cpp" startline="1112" endline="1250">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ControlManual</definition>
        <argsstring>(float dt)</argsstring>
        <name>ControlManual</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Control Manual. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the tasks required to control manual flight.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="740" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1530" bodyend="1706"/>
        <references refid="struct_m_p_c___config_tbl__t_1af7afc87d6bbd108b801b59200f7f1429" compoundref="mpc__tbldefs_8h" startline="463">MPC_ConfigTbl_t::ACC_HOR_MAX</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaa8b23c50cc938e0b366df8d8eeeb1bf9f" compoundref="mpc__msg_8h" startline="330">BRAKE</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" compoundref="mpc__app_8cpp" startline="1879" endline="1893">ControlPosition</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_m_p_c___config_tbl__t_1a96be4f8eb09622fbbc0423b53a1b404c" compoundref="mpc__tbldefs_8h" startline="425">MPC_ConfigTbl_t::HOLD_DZ</references>
        <references refid="struct_m_p_c___config_tbl__t_1a17d93a9bdf4b60c1d16a2da784537a4e" compoundref="mpc__tbldefs_8h" startline="435">MPC_ConfigTbl_t::HOLD_MAX_XY</references>
        <references refid="struct_m_p_c___config_tbl__t_1af13a3142a5b7a0bac7daf4c22c804f6f" compoundref="mpc__tbldefs_8h" startline="445">MPC_ConfigTbl_t::HOLD_MAX_Z</references>
        <references refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" compoundref="mpc__app_8h" startline="310">m_AccelerationStateLimitXY</references>
        <references refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" compoundref="mpc__app_8h" startline="313">m_AccelerationStateLimitZ</references>
        <references refid="class_m_p_c_1a99ba99a2619886c6084a9807fea8bf6a" compoundref="mpc__app_8h" startline="210">m_AltitudeHoldEngaged</references>
        <references refid="class_m_p_c_1aac4c489b6edd69f2b00bc46ebf77698f" compoundref="mpc__app_8h" startline="228">m_DoResetAltPos</references>
        <references refid="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" compoundref="mpc__app_8h" startline="129">m_ManualControlSetpointMsg</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1ad7f711a3182dc749c9e4df1279dfefe5" compoundref="mpc__app_8h" startline="206">m_PositionHoldEngaged</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" compoundref="mpc__app_8h" startline="224">m_ResetAltitudeSetpoint</references>
        <references refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" compoundref="mpc__app_8h" startline="220">m_ResetPositionSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1ab8cc330be5916b27bbe12d5ce6198db2" compoundref="mpc__app_8h" startline="341">m_UserIntentionXY</references>
        <references refid="class_m_p_c_1a0c82008c52ce3a08bf29e83a9c7f3ac8" compoundref="mpc__app_8h" startline="344">m_UserIntentionZ</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" compoundref="mpc__app_8h" startline="323">m_VelMaxXy</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a54765d4619cafc7dc83d8204f92aa5d0" compoundref="mpc__app_8h" startline="277">m_YawTakeoff</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0acc58bb7322f24a8491e872ab1101b" compoundref="mpc__tbldefs_8h" startline="631">MPC_ConfigTbl_t::MPC_VEL_MANUAL</references>
        <references refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" compoundref="mpc__app_8cpp" startline="1858" endline="1870">ResetAltSetpoint</references>
        <references refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" compoundref="mpc__app_8cpp" startline="1837" endline="1849">ResetPosSetpoint</references>
        <references refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" compoundref="mpc__app_8cpp" startline="3615" endline="3837">SetManualAccelerationXY</references>
        <references refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" compoundref="mpc__app_8cpp" startline="3549" endline="3606">SetManualAccelerationZ</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab84a855f46ccdc16da15ba64026a9df0" compoundref="mpc__tbldefs_8h" startline="500">MPC_ConfigTbl_t::XY_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae5a13fd047a93a7fcdbc60955149dbae" compoundref="mpc__tbldefs_8h" startline="513">MPC_ConfigTbl_t::Z_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1aeeedefa7fb775cfd3da9100cf9155470" compoundref="mpc__tbldefs_8h" startline="273">MPC_ConfigTbl_t::Z_VEL_MAX_DN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a88f8962ab99b2964010499c28578539f" compoundref="mpc__tbldefs_8h" startline="261">MPC_ConfigTbl_t::Z_VEL_MAX_UP</references>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ControlNonManual</definition>
        <argsstring>(float dt)</argsstring>
        <name>ControlNonManual</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Control Non-Manual. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the tasks required to control non-manual (automatic) flight.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="753" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1715" bodyend="1803"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</references>
        <references refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</references>
        <references refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" compoundref="mpc__app_8cpp" startline="1879" endline="1893">ControlPosition</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_m_p_c___config_tbl__t_1a40cde4beb9b297b1617864e70af6f060" compoundref="mpc__tbldefs_8h" startline="389">MPC_ConfigTbl_t::LAND_SPEED</references>
        <references refid="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" compoundref="mpc__app_8h" startline="246">m_HoldOffboardXY</references>
        <references refid="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" compoundref="mpc__app_8h" startline="251">m_HoldOffboardZ</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a6358d71ebbcecee7f0183e10bdcd554f" compoundref="mpc__app_8h" startline="180">m_RSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" compoundref="mpc__app_8cpp" startline="1382" endline="1412">DoControl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1aa35415883f81661b8652f8bc028512c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float MPC::ThrottleCurve</definition>
        <argsstring>(float ctl, float ctr)</argsstring>
        <name>ThrottleCurve</name>
        <param>
          <type>float</type>
          <declname>ctl</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ctr</declname>
        </param>
        <briefdescription>
<para>Throttle Curve. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function maps #m_ManualControlSetpointMsg.Z (throttle) to 0.0 to 1.0, with 0.5 mapping to the hover throttle.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
mapped throttle value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="770" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1812" bodyend="1828"/>
        <referencedby refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" compoundref="mpc__app_8cpp" startline="1421" endline="1521">GenerateAttitudeSetpoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ResetAltSetpoint</definition>
        <argsstring>(void)</argsstring>
        <name>ResetAltSetpoint</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset Altitude Setpoint. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>When <ref refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" kindref="member">m_ResetAltitudeSetpoint</ref> is set to TRUE, this function will reset <ref refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" kindref="member">m_PositionSetpoint</ref>[2] (altitude) to <ref refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" kindref="member">m_Position</ref>[2].</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="783" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1858" bodyend="1870"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" compoundref="mpc__app_8h" startline="224">m_ResetAltitudeSetpoint</references>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ResetPosSetpoint</definition>
        <argsstring>(void)</argsstring>
        <name>ResetPosSetpoint</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Reset Position Setpoint. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>When m_ResetPositionSetpoint is set to TRUE, this function will reset the horizontal compoments of <ref refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" kindref="member">m_PositionSetpoint</ref> to <ref refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" kindref="member">m_Position</ref>.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="797" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1837" bodyend="1849"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" compoundref="mpc__app_8h" startline="220">m_ResetPositionSetpoint</references>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" compoundref="mpc__app_8cpp" startline="1902" endline="2023">ControlOffboard</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ControlPosition</definition>
        <argsstring>(float dt)</argsstring>
        <name>ControlPosition</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Control Position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>If #m_VehicleControlModeMsg.ControlClimbRateEnabled, #m_VehicleControlModeMsg.ControlVelocityEnabled, or #m_VehicleControlModeMsg.ControlAccelerationEnabled are set to TRUE, this function will call the <ref refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" kindref="member">CalculateThrustSetpoint</ref> function. Otherwise, this will set <ref refid="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" kindref="member">m_ResetIntZ</ref> to TRUE and reset the thrust integral to to 0.0.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="814" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1879" bodyend="1893"/>
        <references refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</references>
        <references refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</references>
        <references refid="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" compoundref="mpc__app_8h" startline="235">m_ResetIntZ</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ControlOffboard</definition>
        <argsstring>(float dt)</argsstring>
        <name>ControlOffboard</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Control Offboard. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called when #m_VehicleControlModeMsg.ControlOffboardEnabled is set to TRUE, allowing the vehicle to be controlled by <ref refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" kindref="member">m_PositionSetpointTripletMsg</ref> received from an external source.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="830" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="1902" bodyend="2023"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" compoundref="mpc__app_8h" startline="246">m_HoldOffboardXY</references>
        <references refid="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" compoundref="mpc__app_8h" startline="251">m_HoldOffboardZ</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" compoundref="mpc__app_8h" startline="135">m_VehicleLocalPositionMsg</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7b64bf2a0c585df99ae09eb9944cdb05" compoundref="mpc__tbldefs_8h" startline="416">MPC_ConfigTbl_t::MAN_Y_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a14b5a7f67bf7facc2ed774d0f0d31eb6" compoundref="mpc__tbldefs_8h" startline="570">MPC_ConfigTbl_t::MC_YAW_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a299900ee7d149d256c27daad8236b762" compoundref="mpc__tbldefs_8h" startline="559">MPC_ConfigTbl_t::MC_YAWRATE_MAX</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a81a4659a46b282bdbffdca7f97458f6a" compoundref="mpc__events_8h" startline="266">MPC_UNK_VEL_FRM_ERR_EID</references>
        <references refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" compoundref="mpc__app_8cpp" startline="1858" endline="1870">ResetAltSetpoint</references>
        <references refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" compoundref="mpc__app_8cpp" startline="1837" endline="1849">ResetPosSetpoint</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ControlAuto</definition>
        <argsstring>(float dt)</argsstring>
        <name>ControlAuto</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Control Auto. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs all tasks required for <ref refid="class_m_p_c" kindref="compound">MPC</ref> provided automatic control.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="843" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="2032" bodyend="2662"/>
        <references refid="struct_m_p_c___config_tbl__t_1a77b8609906cbeb14abbadc39a46854ab" compoundref="mpc__tbldefs_8h" startline="481">MPC_ConfigTbl_t::ACC_DOWN_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1af7afc87d6bbd108b801b59200f7f1429" compoundref="mpc__tbldefs_8h" startline="463">MPC_ConfigTbl_t::ACC_HOR_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3e6cad9cec7f403f92d522e31d163e02" compoundref="mpc__tbldefs_8h" startline="472">MPC_ConfigTbl_t::ACC_UP_MAX</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a79f43a9d1f2b449a31750e20d1133c95" compoundref="mpc__app_8cpp" startline="3143" endline="3153">GetCruisingSpeedXY</references>
        <references refid="class_m_p_c_1a2e465764754db857c775785aa2d14c8f" compoundref="mpc__app_8cpp" startline="3468" endline="3540">GetVelClose</references>
        <references refid="class_m_p_c_1a159ff2c69d6fecc09094b6c7956b8c91" compoundref="mpc__app_8h" startline="174">m_CurrentPositionSetpoint</references>
        <references refid="class_m_p_c_1aac4c489b6edd69f2b00bc46ebf77698f" compoundref="mpc__app_8h" startline="228">m_DoResetAltPos</references>
        <references refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" compoundref="mpc__app_8h" startline="202">m_ModeAuto</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a53ae6538f9d2ad32fbc15f117ac7b02a" compoundref="mpc__app_8h" startline="177">m_PreviousPositionSetpoint</references>
        <references refid="class_m_p_c_1a8e7421f432fb48146f7a985ba81f7d81" compoundref="mpc__app_8h" startline="271">m_RefAlt</references>
        <references refid="class_m_p_c_1ad1ae795d5dfb450e0724c1292508a338" compoundref="mpc__app_8h" startline="268">m_RefPos</references>
        <references refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" compoundref="mpc__app_8h" startline="224">m_ResetAltitudeSetpoint</references>
        <references refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" compoundref="mpc__app_8h" startline="220">m_ResetPositionSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1a224e834e7b808ab279487c154c43f91c" compoundref="mpc__app_8h" startline="260">m_TripletLatLonFinite</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1af7f5aabd74ab9ddb09ccd4f9cfa46738" compoundref="mpc__app_8h" startline="133">m_VehicleStatusMsg</references>
        <references refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" compoundref="mpc__app_8h" startline="323">m_VelMaxXy</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" compoundref="mpc__app_8h" startline="192">m_Yaw</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9ae318af9af27c0e63cfad5f459c0d4980" compoundref="mpc__events_8h" startline="369">MPC_POS_SP_NOT_FINITE_ERR_EID</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8e1eedc760be3be56b454a3b0ee48161" compoundref="mpc__tbldefs_8h" startline="644">MPC_ConfigTbl_t::NAV_ACC_RAD</references>
        <references refid="struct_m_p_c___config_tbl__t_1adace14483b8cf66c44568ae18c2218fb" compoundref="mpc__tbldefs_8h" startline="655">MPC_ConfigTbl_t::NAV_MIS_YAW_ERR</references>
        <references refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" compoundref="mpc__app_8cpp" startline="1858" endline="1870">ResetAltSetpoint</references>
        <references refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" compoundref="mpc__app_8cpp" startline="1837" endline="1849">ResetPosSetpoint</references>
        <references refid="mpc__app_8cpp_1aa81c951a1c8d31c5947264badcfc6dbf" compoundref="mpc__app_8cpp" startline="31">SIGMA_NORM</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_m_p_c___config_tbl__t_1aeeedefa7fb775cfd3da9100cf9155470" compoundref="mpc__tbldefs_8h" startline="273">MPC_ConfigTbl_t::Z_VEL_MAX_DN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a88f8962ab99b2964010499c28578539f" compoundref="mpc__tbldefs_8h" startline="261">MPC_ConfigTbl_t::Z_VEL_MAX_UP</references>
        <referencedby refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" compoundref="mpc__app_8cpp" startline="1715" endline="1803">ControlNonManual</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::CalculateVelocitySetpoint</definition>
        <argsstring>(float dt)</argsstring>
        <name>CalculateVelocitySetpoint</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Calculate Velocity Setpoint. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the <ref refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" kindref="member">m_VelocitySetpoint</ref> vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="855" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="2671" bodyend="2791"/>
        <references refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" compoundref="mpc__app_8cpp" startline="3399" endline="3432">ApplyVelocitySetpointSlewRate</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="struct_m_p_c___config_tbl__t_1af4b5388809a89355055008f2a23bd86d" compoundref="mpc__tbldefs_8h" startline="527">MPC_ConfigTbl_t::LAND_ALT1</references>
        <references refid="struct_m_p_c___config_tbl__t_1a861de1094d44d8edbd491a774270548c" compoundref="mpc__tbldefs_8h" startline="539">MPC_ConfigTbl_t::LAND_ALT2</references>
        <references refid="struct_m_p_c___config_tbl__t_1a40cde4beb9b297b1617864e70af6f060" compoundref="mpc__tbldefs_8h" startline="389">MPC_ConfigTbl_t::LAND_SPEED</references>
        <references refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" compoundref="mpc__app_8cpp" startline="3351" endline="3390">LimitAltitude</references>
        <references refid="class_m_p_c_1a89cc2587adcb2c8b82241b8373f7866f" compoundref="mpc__app_8h" startline="130">m_HomePositionMsg</references>
        <references refid="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" compoundref="mpc__app_8h" startline="255">m_InTakeoff</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" compoundref="mpc__app_8h" startline="224">m_ResetAltitudeSetpoint</references>
        <references refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" compoundref="mpc__app_8h" startline="220">m_ResetPositionSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" compoundref="mpc__app_8h" startline="213">m_RunPosControl</references>
        <references refid="class_m_p_c_1a5b919d5d95787c2dbcb81cbfd0e3f1c6" compoundref="mpc__app_8h" startline="326">m_TakeoffVelLimit</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" compoundref="mpc__app_8h" startline="168">m_VelocitySetpointPrevious</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0341372f873c3fdc42c308770dbe418" compoundref="mpc__tbldefs_8h" startline="550">MPC_ConfigTbl_t::TKO_RAMP_T</references>
        <references refid="struct_m_p_c___config_tbl__t_1a02276af74fbfb1dc4e0f4ffb28cd3483" compoundref="mpc__tbldefs_8h" startline="398">MPC_ConfigTbl_t::TKO_SPEED</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6e83ca52baecb072e11679b36861b6b0" compoundref="mpc__tbldefs_8h" startline="348">MPC_ConfigTbl_t::XY_VEL_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1aeeedefa7fb775cfd3da9100cf9155470" compoundref="mpc__tbldefs_8h" startline="273">MPC_ConfigTbl_t::Z_VEL_MAX_DN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a88f8962ab99b2964010499c28578539f" compoundref="mpc__tbldefs_8h" startline="261">MPC_ConfigTbl_t::Z_VEL_MAX_UP</references>
        <referencedby refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" compoundref="mpc__app_8cpp" startline="1879" endline="1893">ControlPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1af603adbc4848b140333e799c31f67b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::CalculateThrustSetpoint</definition>
        <argsstring>(float dt)</argsstring>
        <name>CalculateThrustSetpoint</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Calculate Thrust Setpoint. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the ThrustSp vector and generates the <ref refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" kindref="member">m_VehicleAttitudeSetpointMsg</ref> message.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="868" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="2800" bodyend="3134"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a0f94435b85b6bf16f2d652f274bc05c3" compoundref="mpc__app_8cpp" startline="3441" endline="3459">InAutoTakeoff</references>
        <references refid="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" compoundref="mpc__app_8h" startline="255">m_InTakeoff</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a308fcbf69f14791abcb919ca34e0c51e" compoundref="mpc__app_8h" startline="238">m_ResetIntXY</references>
        <references refid="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" compoundref="mpc__app_8h" startline="235">m_ResetIntZ</references>
        <references refid="class_m_p_c_1a687235734c84402db406bb37dba75421" compoundref="mpc__app_8h" startline="183">m_Rotation</references>
        <references refid="class_m_p_c_1a6358d71ebbcecee7f0183e10bdcd554f" compoundref="mpc__app_8h" startline="180">m_RSetpoint</references>
        <references refid="class_m_p_c_1a025ed791069468ece2b1714038ffb9b6" compoundref="mpc__app_8h" startline="186">m_ThrustInt</references>
        <references refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" compoundref="mpc__app_8h" startline="124">m_VehicleAttitudeSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" compoundref="mpc__app_8h" startline="134">m_VehicleLandDetectedMsg</references>
        <references refid="class_m_p_c_1a315ee8ebbc28ff9a9bcb468104e74e94" compoundref="mpc__app_8h" startline="125">m_VehicleLocalPositionSetpointMsg</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a072f30602bd7151e8d8bc3d54679bcba" compoundref="mpc__app_8h" startline="171">m_VelocityErrD</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="class_m_p_c_1a7e0c6a98d730b8ddf0b914d95422a7ef" compoundref="mpc__app_8cpp" startline="3846" endline="3852">ManualWantsTakeoff</references>
        <references refid="mpc__app_8cpp_1a134e036eb0ed7e2c65a8eb5ca4f41c64" compoundref="mpc__app_8cpp" startline="29">MPC_CONSTANTS_ONE_G</references>
        <references refid="mpc__app_8cpp_1aa3d6c9a2fadff868f799774caf86cdf9" compoundref="mpc__app_8cpp" startline="42">MPC_TILT_COS_MAX</references>
        <references refid="mpc__app_8cpp_1aa81c951a1c8d31c5947264badcfc6dbf" compoundref="mpc__app_8cpp" startline="31">SIGMA_NORM</references>
        <references refid="mpc__app_8cpp_1a4e481560463dc9016934bd04d09580ba" compoundref="mpc__app_8cpp" startline="30">SIGMA_SINGLE_OP</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8b6ed9c83f8de1ce2e5720933e61c07f" compoundref="mpc__tbldefs_8h" startline="184">MPC_ConfigTbl_t::THR_HOVER</references>
        <references refid="struct_m_p_c___config_tbl__t_1a64244aa5fc3ba4ea0c6c5234e2d158c5" compoundref="mpc__tbldefs_8h" startline="196">MPC_ConfigTbl_t::THR_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1aa3470e0857efe0c09fa1860285ac0f12" compoundref="mpc__tbldefs_8h" startline="170">MPC_ConfigTbl_t::THR_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1af9ec607deb88ae941d48baf777e960ab" compoundref="mpc__tbldefs_8h" startline="369">MPC_ConfigTbl_t::TILTMAX_AIR</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae0091820930a4849ec4c5bf6491e5309" compoundref="mpc__tbldefs_8h" startline="380">MPC_ConfigTbl_t::TILTMAX_LND</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" compoundref="mpc__app_8cpp" startline="1879" endline="1893">ControlPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a79f43a9d1f2b449a31750e20d1133c95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float MPC::GetCruisingSpeedXY</definition>
        <argsstring>(void)</argsstring>
        <name>GetCruisingSpeedXY</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get horizontal cruising speed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns the horizontal cruising speed, from either #m_PositionSetpointTripletMsg.Current.CruisingSpeed when greater than 0, or from the #XY_CRUISE configuration parameter.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
horizontal cruising speed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="886" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3143" bodyend="3153"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="mpc__app_8cpp_1aa81c951a1c8d31c5947264badcfc6dbf" compoundref="mpc__app_8cpp" startline="31">SIGMA_NORM</references>
        <references refid="struct_m_p_c___config_tbl__t_1a4df59eedd1d9f9bc4fb19e3f14d766cb" compoundref="mpc__tbldefs_8h" startline="323">MPC_ConfigTbl_t::XY_CRUISE</references>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
        <referencedby refid="class_m_p_c_1a2e465764754db857c775785aa2d14c8f" compoundref="mpc__app_8cpp" startline="3468" endline="3540">GetVelClose</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a038bd07deae297e9892da169854a980a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::UpdateParamsFromTable</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateParamsFromTable</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update internal parameters from table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function function will update some internal parameters from the newly loaded CFE table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="899" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3322" bodyend="3342"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="struct_m_p_c___config_tbl__t_1a94ab7c6f7ef05f6ede934d3919c857d5" compoundref="mpc__tbldefs_8h" startline="291">MPC_ConfigTbl_t::XY_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a63e4e58da916b0e00410947e9c343367" compoundref="mpc__tbldefs_8h" startline="314">MPC_ConfigTbl_t::XY_VEL_D</references>
        <references refid="struct_m_p_c___config_tbl__t_1a02e2532daab6a272416fa01826d12141" compoundref="mpc__tbldefs_8h" startline="305">MPC_ConfigTbl_t::XY_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1a28b0e7bf1b7693bffd920311b9af90e7" compoundref="mpc__tbldefs_8h" startline="298">MPC_ConfigTbl_t::XY_VEL_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3342170e65db19336da03839ca8b9caa" compoundref="mpc__tbldefs_8h" startline="225">MPC_ConfigTbl_t::Z_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7cda035e0f5db994eefa95d09a9f8068" compoundref="mpc__tbldefs_8h" startline="249">MPC_ConfigTbl_t::Z_VEL_D</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9e5d62c8a70363efc86040419ad4c123" compoundref="mpc__tbldefs_8h" startline="242">MPC_ConfigTbl_t::Z_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1a07c3b877884a93521d6c9757ef227ac1" compoundref="mpc__tbldefs_8h" startline="232">MPC_ConfigTbl_t::Z_VEL_P</references>
        <referencedby refid="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" compoundref="mpc__config__utils_8cpp" startline="98" endline="141">AcquireConfigPointers</referencedby>
        <referencedby refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" compoundref="mpc__app_8cpp" startline="266" endline="357">InitData</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a33ff948ee937c108297199a3408941ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::LimitAltitude</definition>
        <argsstring>(void)</argsstring>
        <name>LimitAltitude</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Apply an altitude limit. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function applies an altitude limit, when present. The altitude limit is defined in the #m_VehicleLandDetectedMsg.AltMax message.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="913" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3351" bodyend="3390"/>
        <references refid="struct_m_p_c___config_tbl__t_1a77b8609906cbeb14abbadc39a46854ab" compoundref="mpc__tbldefs_8h" startline="481">MPC_ConfigTbl_t::ACC_DOWN_MAX</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a89cc2587adcb2c8b82241b8373f7866f" compoundref="mpc__app_8h" startline="130">m_HomePositionMsg</references>
        <references refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" compoundref="mpc__app_8h" startline="153">m_Position</references>
        <references refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" compoundref="mpc__app_8h" startline="156">m_PositionSetpoint</references>
        <references refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" compoundref="mpc__app_8h" startline="216">m_RunAltControl</references>
        <references refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" compoundref="mpc__app_8h" startline="134">m_VehicleLandDetectedMsg</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a0f94435b85b6bf16f2d652f274bc05c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::InAutoTakeoff</definition>
        <argsstring>(void)</argsstring>
        <name>InAutoTakeoff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>In Auto Takeoff. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns TRUE if we are in an auto takeoff mode.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates vehicle is in auto takeoff mode  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="932" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3441" bodyend="3459"/>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" compoundref="mpc__app_8h" startline="132">m_PositionSetpointTripletMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::ApplyVelocitySetpointSlewRate</definition>
        <argsstring>(float dt)</argsstring>
        <name>ApplyVelocitySetpointSlewRate</name>
        <param>
          <type>float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Apply Velocity Setpoint Slew Rate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function applies a slew rate to reach the target velocity setpoint.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="945" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3399" bodyend="3432"/>
        <references refid="struct_m_p_c___config_tbl__t_1a77b8609906cbeb14abbadc39a46854ab" compoundref="mpc__tbldefs_8h" startline="481">MPC_ConfigTbl_t::ACC_DOWN_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3e6cad9cec7f403f92d522e31d163e02" compoundref="mpc__tbldefs_8h" startline="472">MPC_ConfigTbl_t::ACC_UP_MAX</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" compoundref="mpc__app_8h" startline="310">m_AccelerationStateLimitXY</references>
        <references refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" compoundref="mpc__app_8h" startline="313">m_AccelerationStateLimitZ</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" compoundref="mpc__app_8h" startline="165">m_VelocitySetpoint</references>
        <references refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" compoundref="mpc__app_8h" startline="168">m_VelocitySetpointPrevious</references>
        <referencedby refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" compoundref="mpc__app_8cpp" startline="2671" endline="2791">CalculateVelocitySetpoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a2e465764754db857c775785aa2d14c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float MPC::GetVelClose</definition>
        <argsstring>(const math::Vector2F &amp;UnitPrevToCurrent, const math::Vector2F &amp;UnitCurrentToNext)</argsstring>
        <name>GetVelClose</name>
        <param>
          <type>const math::Vector2F &amp;</type>
          <declname>UnitPrevToCurrent</declname>
        </param>
        <param>
          <type>const math::Vector2F &amp;</type>
          <declname>UnitCurrentToNext</declname>
        </param>
        <briefdescription>
<para>Get velocity close. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Get velocity close to current that depends on angle between prev-current and current-next line.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
velocity </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="962" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3468" bodyend="3540"/>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a79f43a9d1f2b449a31750e20d1133c95" compoundref="mpc__app_8cpp" startline="3143" endline="3153">GetCruisingSpeedXY</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9424f764d9980affef29a2187a54948f" compoundref="mpc__tbldefs_8h" startline="586">MPC_ConfigTbl_t::MPC_CRUISE_90</references>
        <references refid="mpc__app_8cpp_1aa81c951a1c8d31c5947264badcfc6dbf" compoundref="mpc__app_8cpp" startline="31">SIGMA_NORM</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" compoundref="mpc__app_8cpp" startline="2032" endline="2662">ControlAuto</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::SetManualAccelerationZ</definition>
        <argsstring>(float &amp;max_acceleration, const float stick_z, const float dt)</argsstring>
        <name>SetManualAccelerationZ</name>
        <param>
          <type>float &amp;</type>
          <declname>max_acceleration</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>stick_z</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Set manual vertical acceleration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>In manual altitude control, set the vertical acceleration based on whether the user is accelerating or braking.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="975" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3549" bodyend="3606"/>
        <references refid="struct_m_p_c___config_tbl__t_1a77b8609906cbeb14abbadc39a46854ab" compoundref="mpc__tbldefs_8h" startline="481">MPC_ConfigTbl_t::ACC_DOWN_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3e6cad9cec7f403f92d522e31d163e02" compoundref="mpc__tbldefs_8h" startline="472">MPC_ConfigTbl_t::ACC_UP_MAX</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaacc313c985549b695d777b0cd3d772555" compoundref="mpc__msg_8h" startline="332">ACCELERATION</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaa8b23c50cc938e0b366df8d8eeeb1bf9f" compoundref="mpc__msg_8h" startline="330">BRAKE</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" compoundref="mpc__app_8h" startline="313">m_AccelerationStateLimitZ</references>
        <references refid="class_m_p_c_1a92c2c654b34bb2d72b5a3a136016b491" compoundref="mpc__app_8h" startline="319">m_ManualJerkLimitZ</references>
        <references refid="class_m_p_c_1a0c82008c52ce3a08bf29e83a9c7f3ac8" compoundref="mpc__app_8h" startline="344">m_UserIntentionZ</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" compoundref="mpc__app_8h" startline="168">m_VelocitySetpointPrevious</references>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MPC::SetManualAccelerationXY</definition>
        <argsstring>(math::Vector2F &amp;stick_xy, const float dt)</argsstring>
        <name>SetManualAccelerationXY</name>
        <param>
          <type>math::Vector2F &amp;</type>
          <declname>stick_xy</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
<para>Set manual horizontal acceleration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>In manual altitude control, set the horizontal acceleration based on whether the user is accelerating or braking.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="988" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3615" bodyend="3837"/>
        <references refid="struct_m_p_c___config_tbl__t_1af7afc87d6bbd108b801b59200f7f1429" compoundref="mpc__tbldefs_8h" startline="463">MPC_ConfigTbl_t::ACC_HOR_MAX</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaacc313c985549b695d777b0cd3d772555" compoundref="mpc__msg_8h" startline="332">ACCELERATION</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaa8b23c50cc938e0b366df8d8eeeb1bf9f" compoundref="mpc__msg_8h" startline="330">BRAKE</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaa9cb29a842aedd4694675119389bd5724" compoundref="mpc__msg_8h" startline="333">DECELERATION</references>
        <references refid="mpc__msg_8h_1a5797da710dfeb80a0d0388c81885c6aaabe141ba91fcd7bedb8aa9bf1e16eaf1d" compoundref="mpc__msg_8h" startline="331">DIRECTION_CHANGE</references>
        <references refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" compoundref="mpc__app_8h" startline="310">m_AccelerationStateLimitXY</references>
        <references refid="class_m_p_c_1a18a7ed0ef81a74046fe4190846f2c556" compoundref="mpc__app_8h" startline="331">m_FilterManualPitch</references>
        <references refid="class_m_p_c_1a9458bd139670c632036725b8f2bce33a" compoundref="mpc__app_8h" startline="334">m_FilterManualRoll</references>
        <references refid="class_m_p_c_1a84f6ac513891845ed2a4288796257d59" compoundref="mpc__app_8h" startline="347">m_ManualDirectionChangeHysteresis</references>
        <references refid="class_m_p_c_1a46bc00fe5d42608088ce81a170e2452b" compoundref="mpc__app_8h" startline="316">m_ManualJerkLimitXY</references>
        <references refid="class_m_p_c_1a20dff91c5bb60c66d4ec4c564a2bdc26" compoundref="mpc__app_8h" startline="338">m_StickInputXyPrev</references>
        <references refid="class_m_p_c_1ab8cc330be5916b27bbe12d5ce6198db2" compoundref="mpc__app_8h" startline="341">m_UserIntentionXY</references>
        <references refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" compoundref="mpc__app_8h" startline="323">m_VelMaxXy</references>
        <references refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" compoundref="mpc__app_8h" startline="159">m_Velocity</references>
        <references refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" compoundref="mpc__app_8h" startline="168">m_VelocitySetpointPrevious</references>
        <references refid="struct_m_p_c___config_tbl__t_1acaa04aaf9d4c95fafa84747f2d3aa46d" compoundref="mpc__tbldefs_8h" startline="619">MPC_ConfigTbl_t::MPC_DEC_HOR_SLOW</references>
        <references refid="mpc__app_8cpp_1a0ca7c070f20f4120e8846403b923f727" compoundref="mpc__app_8cpp" startline="39">MPC_HOR_JERK_LIMIT_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a31187c25a95a14b9cf2eef9adb9c1a32" compoundref="mpc__tbldefs_8h" startline="601">MPC_ConfigTbl_t::MPC_JERK_MAX</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6a9ca3f988321f325b0760a83af82edc" compoundref="mpc__tbldefs_8h" startline="610">MPC_ConfigTbl_t::MPC_JERK_MIN</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a013a3f84e5d6cce3d4e88f26e9c83562" compoundref="mpc__events_8h" startline="354">MPC_UNKNOWN_USER_INTENTION_ERR_EID</references>
        <referencedby refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" compoundref="mpc__app_8cpp" startline="1530" endline="1706">ControlManual</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a7e0c6a98d730b8ddf0b914d95422a7ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::ManualWantsTakeoff</definition>
        <argsstring>(void)</argsstring>
        <name>ManualWantsTakeoff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Pilot is commanding a manual takeoff. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns true if the manual control setpoint Z (throttle) is greater than 65%.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates pilot is commanding a manual takeoff  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1008" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3846" bodyend="3852"/>
        <references refid="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" compoundref="mpc__app_8h" startline="129">m_ManualControlSetpointMsg</references>
        <references refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" compoundref="mpc__app_8h" startline="131">m_VehicleControlModeMsg</references>
        <references refid="mpc__app_8cpp_1a6849ad9f76c312c214c16fb2c594399b" compoundref="mpc__app_8cpp" startline="36">MPC_MANUAL_TAKEOFF_THRESHOLD</references>
        <referencedby refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" compoundref="mpc__app_8cpp" startline="2800" endline="3134">CalculateThrustSetpoint</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::UpdateXyPids</definition>
        <argsstring>(MPC_SetPidCmd_t *PidMsg)</argsstring>
        <name>UpdateXyPids</name>
        <param>
          <type><ref refid="struct_m_p_c___set_pid_cmd__t" kindref="compound">MPC_SetPidCmd_t</ref> *</type>
          <declname>PidMsg</declname>
        </param>
        <briefdescription>
<para>Update XY PIDs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function updates the horizontal (XY) position and velocity PIDs, both member functions and configuration table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the command was valid and the change was successful.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1028" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3162" bodyend="3198"/>
        <references refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26">CFE_TBL_Modified</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a4d07b7e7f848248f9d423ae11af3a0c8" compoundref="mpc__msg_8h" startline="514">MPC_SetPidCmd_t::PidGain</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a4f1c3728f9274133569f213756641e91" compoundref="mpc__msg_8h" startline="523">MPC_SetPidCmd_t::PidVelD</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a91e4c72c4ed41a0db0d5282c529bd584" compoundref="mpc__msg_8h" startline="520">MPC_SetPidCmd_t::PidVelI</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a524406842365dc432ae7115727f2f1a9" compoundref="mpc__msg_8h" startline="517">MPC_SetPidCmd_t::PidVelP</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1ae7849d9bb1c9132b087cdae018942809" compoundref="mpc__app_8cpp" startline="3861" endline="3873">Validate_XY_P</references>
        <references refid="class_m_p_c_1a5fb95b06413073de8b276e9ee959e095" compoundref="mpc__app_8cpp" startline="3924" endline="3936">Validate_XY_VEL_D</references>
        <references refid="class_m_p_c_1ac7330b1d9fd785a578101cad3f50733e" compoundref="mpc__app_8cpp" startline="3903" endline="3915">Validate_XY_VEL_I</references>
        <references refid="class_m_p_c_1a262bf3526e1bbb9261b57c22da21615c" compoundref="mpc__app_8cpp" startline="3882" endline="3894">Validate_XY_VEL_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a94ab7c6f7ef05f6ede934d3919c857d5" compoundref="mpc__tbldefs_8h" startline="291">MPC_ConfigTbl_t::XY_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a63e4e58da916b0e00410947e9c343367" compoundref="mpc__tbldefs_8h" startline="314">MPC_ConfigTbl_t::XY_VEL_D</references>
        <references refid="struct_m_p_c___config_tbl__t_1a02e2532daab6a272416fa01826d12141" compoundref="mpc__tbldefs_8h" startline="305">MPC_ConfigTbl_t::XY_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1a28b0e7bf1b7693bffd920311b9af90e7" compoundref="mpc__tbldefs_8h" startline="298">MPC_ConfigTbl_t::XY_VEL_P</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::UpdateZPids</definition>
        <argsstring>(MPC_SetPidCmd_t *PidMsg)</argsstring>
        <name>UpdateZPids</name>
        <param>
          <type><ref refid="struct_m_p_c___set_pid_cmd__t" kindref="compound">MPC_SetPidCmd_t</ref> *</type>
          <declname>PidMsg</declname>
        </param>
        <briefdescription>
<para>Update Z PIDs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function updates the vertical (Z) position and velocity PIDs, both member functions and configuration table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the command was valid and the change was successful.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1048" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3207" bodyend="3237"/>
        <references refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26">CFE_TBL_Modified</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" compoundref="mpc__app_8h" startline="281">m_PosP</references>
        <references refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" compoundref="mpc__app_8h" startline="293">m_VelD</references>
        <references refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" compoundref="mpc__app_8h" startline="289">m_VelI</references>
        <references refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" compoundref="mpc__app_8h" startline="285">m_VelP</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a4d07b7e7f848248f9d423ae11af3a0c8" compoundref="mpc__msg_8h" startline="514">MPC_SetPidCmd_t::PidGain</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a4f1c3728f9274133569f213756641e91" compoundref="mpc__msg_8h" startline="523">MPC_SetPidCmd_t::PidVelD</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a91e4c72c4ed41a0db0d5282c529bd584" compoundref="mpc__msg_8h" startline="520">MPC_SetPidCmd_t::PidVelI</references>
        <references refid="struct_m_p_c___set_pid_cmd__t_1a524406842365dc432ae7115727f2f1a9" compoundref="mpc__msg_8h" startline="517">MPC_SetPidCmd_t::PidVelP</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1aeb43311b826bb60e65f25d30f7ef0c87" compoundref="mpc__app_8cpp" startline="3945" endline="3957">Validate_Z_P</references>
        <references refid="class_m_p_c_1a9700b388b92bc3aebe7dde73c493b15d" compoundref="mpc__app_8cpp" startline="4008" endline="4020">Validate_Z_VEL_D</references>
        <references refid="class_m_p_c_1a5ede3b329e73a7a0859185f0b58ac699" compoundref="mpc__app_8cpp" startline="3987" endline="3999">Validate_Z_VEL_I</references>
        <references refid="class_m_p_c_1a605148e745632e3ff5adc2cff18c0259" compoundref="mpc__app_8cpp" startline="3966" endline="3978">Validate_Z_VEL_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3342170e65db19336da03839ca8b9caa" compoundref="mpc__tbldefs_8h" startline="225">MPC_ConfigTbl_t::Z_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7cda035e0f5db994eefa95d09a9f8068" compoundref="mpc__tbldefs_8h" startline="249">MPC_ConfigTbl_t::Z_VEL_D</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9e5d62c8a70363efc86040419ad4c123" compoundref="mpc__tbldefs_8h" startline="242">MPC_ConfigTbl_t::Z_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1a07c3b877884a93521d6c9757ef227ac1" compoundref="mpc__tbldefs_8h" startline="232">MPC_ConfigTbl_t::Z_VEL_P</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a51689fa2d1c581b6f3d2382254b80e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::UpdateHoldDz</definition>
        <argsstring>(MPC_SetDzCmd_t *DzMsg)</argsstring>
        <name>UpdateHoldDz</name>
        <param>
          <type><ref refid="struct_m_p_c___set_dz_cmd__t" kindref="compound">MPC_SetDzCmd_t</ref> *</type>
          <declname>DzMsg</declname>
        </param>
        <briefdescription>
<para>Update the hold dead zone (HOLD_DZ) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function updates the hold dead zone (HOLD_DZ) in the configuration table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the command was valid and the change was successful.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1068" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3246" bodyend="3262"/>
        <references refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26">CFE_TBL_Modified</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="struct_m_p_c___set_dz_cmd__t_1a00f9155f3cd0f9d62f0a2d7fa079e1d6" compoundref="mpc__msg_8h" startline="538">MPC_SetDzCmd_t::Deadzone</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_m_p_c___config_tbl__t_1a96be4f8eb09622fbbc0423b53a1b404c" compoundref="mpc__tbldefs_8h" startline="425">MPC_ConfigTbl_t::HOLD_DZ</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1ab40e62638018ba4e9bd63414fb4e8d62" compoundref="mpc__app_8cpp" startline="4029" endline="4041">Validate_HOLD_DZ</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::UpdateStickExpo</definition>
        <argsstring>(MPC_SetStickExpoCmd_t *ExpoMsg)</argsstring>
        <name>UpdateStickExpo</name>
        <param>
          <type><ref refid="struct_m_p_c___set_stick_expo_cmd__t" kindref="compound">MPC_SetStickExpoCmd_t</ref> *</type>
          <declname>ExpoMsg</declname>
        </param>
        <briefdescription>
<para>Set manual stick EXPO (XY_MAN_EXPO and Z_MAN_EXPO) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sets the #XY_MAN_EXPO and #Z_MAN_EXPO parameters in the configuration table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the command was valid and the change was successful.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1088" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3271" bodyend="3289"/>
        <references refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26">CFE_TBL_Modified</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1a8af256a26a1345f41f6776907aa94454" compoundref="mpc__app_8cpp" startline="4050" endline="4062">Validate_XY_MAN_EXPO</references>
        <references refid="class_m_p_c_1a4cad93d34b3555ca0c9032cd3ea171d1" compoundref="mpc__app_8cpp" startline="4071" endline="4083">Validate_Z_MAN_EXPO</references>
        <references refid="struct_m_p_c___set_stick_expo_cmd__t_1a110766c577f15caa4e0aba463c35e085" compoundref="mpc__msg_8h" startline="553">MPC_SetStickExpoCmd_t::XY</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab84a855f46ccdc16da15ba64026a9df0" compoundref="mpc__tbldefs_8h" startline="500">MPC_ConfigTbl_t::XY_MAN_EXPO</references>
        <references refid="struct_m_p_c___set_stick_expo_cmd__t_1aef70249c8e3358ba5e7f12ddde621485" compoundref="mpc__msg_8h" startline="556">MPC_SetStickExpoCmd_t::Z</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae5a13fd047a93a7fcdbc60955149dbae" compoundref="mpc__tbldefs_8h" startline="513">MPC_ConfigTbl_t::Z_MAN_EXPO</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a22b9caa726c0d54b4ccd2352deb78d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::UpdateTakeoffRampTime</definition>
        <argsstring>(MPC_SetTkoRampCmd_t *TkoRampMsg)</argsstring>
        <name>UpdateTakeoffRampTime</name>
        <param>
          <type><ref refid="struct_m_p_c___set_tko_ramp_cmd__t" kindref="compound">MPC_SetTkoRampCmd_t</ref> *</type>
          <declname>TkoRampMsg</declname>
        </param>
        <briefdescription>
<para>Update the takeoff ramp time (TKO_RAMP_T) </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the command was valid and the change was successful.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1107" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3298" bodyend="3313"/>
        <references refid="cfe__tbl_8h_1ace4437318fa89c22b50ce866adf36c26">CFE_TBL_Modified</references>
        <references refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" compoundref="mpc__app_8h" startline="110">ConfigTblHdl</references>
        <references refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" compoundref="mpc__app_8h" startline="113">ConfigTblPtr</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0341372f873c3fdc42c308770dbe418" compoundref="mpc__tbldefs_8h" startline="550">MPC_ConfigTbl_t::TKO_RAMP_T</references>
        <references refid="struct_m_p_c___set_tko_ramp_cmd__t_1a669a07c853bd55f186d8584c2af75aba" compoundref="mpc__msg_8h" startline="571">MPC_SetTkoRampCmd_t::TKO_RAMP_T</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1a0c51b692fb8ad64f87145b4c9f998082" compoundref="mpc__app_8cpp" startline="4092" endline="4104">Validate_TKO_RAMP_T</references>
        <referencedby refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" compoundref="mpc__app_8cpp" startline="652" endline="807">ProcessAppCmds</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 MPC::ValidateConfigTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidateConfigTbl</name>
        <param>
          <type>void *</type>
          <defname>ConfigTblPtr</defname>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_m_p_c" kindref="compound">MPC</ref> configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_m_p_c" kindref="compound">MPC</ref>&apos;s configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1125" column="1" bodyfile="apps/mpc/fsw/src/mpc_config_utils.cpp" bodystart="150" bodyend="398"/>
        <references refid="struct_m_p_c___config_tbl__t_1a77b8609906cbeb14abbadc39a46854ab" compoundref="mpc__tbldefs_8h" startline="481">MPC_ConfigTbl_t::ACC_DOWN_MAX</references>
        <references refid="mpc__tbldefs_8h_1a68ea485d57a2945bf4cb685346f2732a" compoundref="mpc__tbldefs_8h" startline="120">ACC_DOWN_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1a3dc7ff9dbd11e71444b1ae005e30597b" compoundref="mpc__tbldefs_8h" startline="119">ACC_DOWN_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1af7afc87d6bbd108b801b59200f7f1429" compoundref="mpc__tbldefs_8h" startline="463">MPC_ConfigTbl_t::ACC_HOR_MAX</references>
        <references refid="mpc__tbldefs_8h_1add77acde07e21f0e624d6ebd7935ceea" compoundref="mpc__tbldefs_8h" startline="116">ACC_HOR_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1aae601a48c49efe8b89147b2882fe081e" compoundref="mpc__tbldefs_8h" startline="115">ACC_HOR_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3e6cad9cec7f403f92d522e31d163e02" compoundref="mpc__tbldefs_8h" startline="472">MPC_ConfigTbl_t::ACC_UP_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac44dabeeef1133d2a20ff8cab01683fc" compoundref="mpc__tbldefs_8h" startline="118">ACC_UP_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1af4caf097e1630fbfa5b5b0ceca7e3aad" compoundref="mpc__tbldefs_8h" startline="117">ACC_UP_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a0f7bdcf158a4b168fb8461b2424c0729" compoundref="mpc__tbldefs_8h" startline="490">MPC_ConfigTbl_t::ALT_MODE</references>
        <references refid="mpc__tbldefs_8h_1a87e4677c8d51ff363103e68ddf5d67a5" compoundref="mpc__tbldefs_8h" startline="122">ALT_MODE_MAX</references>
        <references refid="mpc__tbldefs_8h_1a45049b702dda14b0efcc23aaf199f467" compoundref="mpc__tbldefs_8h" startline="121">ALT_MODE_MIN</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_m_p_c___config_tbl__t_1a96be4f8eb09622fbbc0423b53a1b404c" compoundref="mpc__tbldefs_8h" startline="425">MPC_ConfigTbl_t::HOLD_DZ</references>
        <references refid="struct_m_p_c___config_tbl__t_1a17d93a9bdf4b60c1d16a2da784537a4e" compoundref="mpc__tbldefs_8h" startline="435">MPC_ConfigTbl_t::HOLD_MAX_XY</references>
        <references refid="mpc__tbldefs_8h_1aa46e28124c0da1705746cdbeb71f131f" compoundref="mpc__tbldefs_8h" startline="110">HOLD_MAX_XY_MAX</references>
        <references refid="mpc__tbldefs_8h_1a26724c1b1f62d480369eeae37ccc7b05" compoundref="mpc__tbldefs_8h" startline="109">HOLD_MAX_XY_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1af13a3142a5b7a0bac7daf4c22c804f6f" compoundref="mpc__tbldefs_8h" startline="445">MPC_ConfigTbl_t::HOLD_MAX_Z</references>
        <references refid="mpc__tbldefs_8h_1a5092555a13a03fe614ca2583b280200b" compoundref="mpc__tbldefs_8h" startline="112">HOLD_MAX_Z_MAX</references>
        <references refid="mpc__tbldefs_8h_1af1dafb3bbb905376ec409e4adef2b4ca" compoundref="mpc__tbldefs_8h" startline="111">HOLD_MAX_Z_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1af4b5388809a89355055008f2a23bd86d" compoundref="mpc__tbldefs_8h" startline="527">MPC_ConfigTbl_t::LAND_ALT1</references>
        <references refid="mpc__tbldefs_8h_1a1bab47596322120bdb348df7cb4fad7b" compoundref="mpc__tbldefs_8h" startline="128">LAND_ALT1_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac7d9683d84e8190940d0aca339ef055f" compoundref="mpc__tbldefs_8h" startline="127">LAND_ALT1_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a861de1094d44d8edbd491a774270548c" compoundref="mpc__tbldefs_8h" startline="539">MPC_ConfigTbl_t::LAND_ALT2</references>
        <references refid="mpc__tbldefs_8h_1ab209b2a2278a1b00b28abaae818373c9" compoundref="mpc__tbldefs_8h" startline="130">LAND_ALT2_MAX</references>
        <references refid="mpc__tbldefs_8h_1a5713dc5308c1d2b8c028aa6fc4d3006a" compoundref="mpc__tbldefs_8h" startline="129">LAND_ALT2_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a40cde4beb9b297b1617864e70af6f060" compoundref="mpc__tbldefs_8h" startline="389">MPC_ConfigTbl_t::LAND_SPEED</references>
        <references refid="mpc__tbldefs_8h_1adbe878b29b97c03608c6aa8df271de61" compoundref="mpc__tbldefs_8h" startline="100">LAND_SPEED_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac97284b0dcd7d149a94f741b2e76bd8e" compoundref="mpc__tbldefs_8h" startline="99">LAND_SPEED_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9e80a94cce1e08d38501ac197ab5381a" compoundref="mpc__tbldefs_8h" startline="407">MPC_ConfigTbl_t::MAN_TILT_MAX</references>
        <references refid="mpc__tbldefs_8h_1a964170e23f134c2b510f331b1da7bacb" compoundref="mpc__tbldefs_8h" startline="104">MAN_TILT_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1abc131179fd1fdfb9ef74a9670eaca0b3" compoundref="mpc__tbldefs_8h" startline="103">MAN_TILT_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7b64bf2a0c585df99ae09eb9944cdb05" compoundref="mpc__tbldefs_8h" startline="416">MPC_ConfigTbl_t::MAN_Y_MAX</references>
        <references refid="mpc__tbldefs_8h_1a27992a34316c794d054d3ccd9bb123ff" compoundref="mpc__tbldefs_8h" startline="106">MAN_Y_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1a6b48f36f5efaaf0fcaea5d89e70cfa78" compoundref="mpc__tbldefs_8h" startline="105">MAN_Y_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a5ca863f40df7f0a079791c3b6759e251" compoundref="mpc__tbldefs_8h" startline="218">MPC_ConfigTbl_t::MANTHR_MAX</references>
        <references refid="mpc__tbldefs_8h_1a020c16f6e863f610753f1935ced2e6a6" compoundref="mpc__tbldefs_8h" startline="64">MANTHR_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1a893fa75666a813d07c43b187775db5ea" compoundref="mpc__tbldefs_8h" startline="63">MANTHR_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8d1a416bd62c5467a08f4a9690ba44b2" compoundref="mpc__tbldefs_8h" startline="206">MPC_ConfigTbl_t::MANTHR_MIN</references>
        <references refid="mpc__tbldefs_8h_1a937dbe7bc883c00a4c8a70ec5bd203f9" compoundref="mpc__tbldefs_8h" startline="62">MANTHR_MIN_MAX</references>
        <references refid="mpc__tbldefs_8h_1a418c867ce1b26d62b30618f09ad6dd8d" compoundref="mpc__tbldefs_8h" startline="61">MANTHR_MIN_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a14b5a7f67bf7facc2ed774d0f0d31eb6" compoundref="mpc__tbldefs_8h" startline="570">MPC_ConfigTbl_t::MC_YAW_P</references>
        <references refid="mpc__tbldefs_8h_1a7fba694faac19a3188ca7dca86000da0" compoundref="mpc__tbldefs_8h" startline="136">MC_YAW_P_MAX</references>
        <references refid="mpc__tbldefs_8h_1ae9abb92bda9f54e149db7d62d883f034" compoundref="mpc__tbldefs_8h" startline="135">MC_YAW_P_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a299900ee7d149d256c27daad8236b762" compoundref="mpc__tbldefs_8h" startline="559">MPC_ConfigTbl_t::MC_YAWRATE_MAX</references>
        <references refid="mpc__tbldefs_8h_1a00143ab68a5c7b9fac1da2248be0edef" compoundref="mpc__tbldefs_8h" startline="134">MC_YAWRATE_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1a88acc52b2766be7317852233c1c00566" compoundref="mpc__tbldefs_8h" startline="133">MC_YAWRATE_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9424f764d9980affef29a2187a54948f" compoundref="mpc__tbldefs_8h" startline="586">MPC_ConfigTbl_t::MPC_CRUISE_90</references>
        <references refid="mpc__tbldefs_8h_1ad8d6f864013ab5c8e7da9eca2d7a2635" compoundref="mpc__tbldefs_8h" startline="138">MPC_CRUISE_90_MAX</references>
        <references refid="mpc__tbldefs_8h_1a667c34a68b10aa0049799f5d315e3b81" compoundref="mpc__tbldefs_8h" startline="137">MPC_CRUISE_90_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1acaa04aaf9d4c95fafa84747f2d3aa46d" compoundref="mpc__tbldefs_8h" startline="619">MPC_ConfigTbl_t::MPC_DEC_HOR_SLOW</references>
        <references refid="mpc__tbldefs_8h_1a6d64ad00ba960b778623006e4dc0c1ee" compoundref="mpc__tbldefs_8h" startline="144">MPC_DEC_HOR_SLOW_MAX</references>
        <references refid="mpc__tbldefs_8h_1a64b9f935dca917e5cc3d2ae625fc9243" compoundref="mpc__tbldefs_8h" startline="143">MPC_DEC_HOR_SLOW_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a31187c25a95a14b9cf2eef9adb9c1a32" compoundref="mpc__tbldefs_8h" startline="601">MPC_ConfigTbl_t::MPC_JERK_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac3011aa2ea30dd9288d0187a041d60cd" compoundref="mpc__tbldefs_8h" startline="140">MPC_JERK_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1ad507d1041b8a9199db9e36f75d7c5a88" compoundref="mpc__tbldefs_8h" startline="139">MPC_JERK_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6a9ca3f988321f325b0760a83af82edc" compoundref="mpc__tbldefs_8h" startline="610">MPC_ConfigTbl_t::MPC_JERK_MIN</references>
        <references refid="mpc__tbldefs_8h_1abcb9303fbdd82031cb55810918f365ea" compoundref="mpc__tbldefs_8h" startline="142">MPC_JERK_MIN_MAX</references>
        <references refid="mpc__tbldefs_8h_1a54eaa8f528b4f495362e85754bf8060d" compoundref="mpc__tbldefs_8h" startline="141">MPC_JERK_MIN_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0acc58bb7322f24a8491e872ab1101b" compoundref="mpc__tbldefs_8h" startline="631">MPC_ConfigTbl_t::MPC_VEL_MANUAL</references>
        <references refid="mpc__tbldefs_8h_1a1d181b69f73d47da48206fd8ac8c02a9" compoundref="mpc__tbldefs_8h" startline="146">MPC_VEL_MANUAL_MAX</references>
        <references refid="mpc__tbldefs_8h_1aa3261ddc015186460c9549f59166639f" compoundref="mpc__tbldefs_8h" startline="145">MPC_VEL_MANUAL_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8e1eedc760be3be56b454a3b0ee48161" compoundref="mpc__tbldefs_8h" startline="644">MPC_ConfigTbl_t::NAV_ACC_RAD</references>
        <references refid="mpc__tbldefs_8h_1ac245a3d7feae40068694010f806ed2d1" compoundref="mpc__tbldefs_8h" startline="148">NAV_ACC_RAD_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac6d35fb58628eeadfe1b20010fc58d79" compoundref="mpc__tbldefs_8h" startline="147">NAV_ACC_RAD_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1adace14483b8cf66c44568ae18c2218fb" compoundref="mpc__tbldefs_8h" startline="655">MPC_ConfigTbl_t::NAV_MIS_YAW_ERR</references>
        <references refid="mpc__tbldefs_8h_1ab698f88b2997d781308b0e60e6bd4057" compoundref="mpc__tbldefs_8h" startline="150">NAV_MIS_YAW_ERR_MAX</references>
        <references refid="mpc__tbldefs_8h_1a024e2b7ef0d3267233ee76d9f8211d35" compoundref="mpc__tbldefs_8h" startline="149">NAV_MIS_YAW_ERR_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1af871daf2670a00262f7de4806f7921a0" compoundref="mpc__tbldefs_8h" startline="336">MPC_ConfigTbl_t::TARGET_THRE</references>
        <references refid="mpc__tbldefs_8h_1a7bbb18fcb0c9518f376f763cf22cc21d" compoundref="mpc__tbldefs_8h" startline="90">TARGET_THRE_MAX</references>
        <references refid="mpc__tbldefs_8h_1a2c98f7b22a81bad2bfddcf36af3fdc00" compoundref="mpc__tbldefs_8h" startline="89">TARGET_THRE_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a8b6ed9c83f8de1ce2e5720933e61c07f" compoundref="mpc__tbldefs_8h" startline="184">MPC_ConfigTbl_t::THR_HOVER</references>
        <references refid="mpc__tbldefs_8h_1aa40a7b2f6f5ff14146123b2aab3ee9a8" compoundref="mpc__tbldefs_8h" startline="58">THR_HOVER_MAX</references>
        <references refid="mpc__tbldefs_8h_1a6c16c2f760364427fd45ed1239feb98d" compoundref="mpc__tbldefs_8h" startline="57">THR_HOVER_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a64244aa5fc3ba4ea0c6c5234e2d158c5" compoundref="mpc__tbldefs_8h" startline="196">MPC_ConfigTbl_t::THR_MAX</references>
        <references refid="mpc__tbldefs_8h_1af4168482aa4ab6ee7e6d9b5bdcd363ae" compoundref="mpc__tbldefs_8h" startline="60">THR_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1a8e56956b6364623fb716a88916b71c45" compoundref="mpc__tbldefs_8h" startline="59">THR_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1aa3470e0857efe0c09fa1860285ac0f12" compoundref="mpc__tbldefs_8h" startline="170">MPC_ConfigTbl_t::THR_MIN</references>
        <references refid="mpc__tbldefs_8h_1adf6e6a65986bcc1837a716acb48d656e" compoundref="mpc__tbldefs_8h" startline="56">THR_MIN_MAX</references>
        <references refid="mpc__tbldefs_8h_1af7a90e7f3312c18eb8ecbdd49d998479" compoundref="mpc__tbldefs_8h" startline="55">THR_MIN_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1af9ec607deb88ae941d48baf777e960ab" compoundref="mpc__tbldefs_8h" startline="369">MPC_ConfigTbl_t::TILTMAX_AIR</references>
        <references refid="mpc__tbldefs_8h_1a95b3ad53449015020a4203ffedd3ddda" compoundref="mpc__tbldefs_8h" startline="96">TILTMAX_AIR_MAX</references>
        <references refid="mpc__tbldefs_8h_1a5a68e6ed0e1e1db7fdd2f76cc92c615e" compoundref="mpc__tbldefs_8h" startline="95">TILTMAX_AIR_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae0091820930a4849ec4c5bf6491e5309" compoundref="mpc__tbldefs_8h" startline="380">MPC_ConfigTbl_t::TILTMAX_LND</references>
        <references refid="mpc__tbldefs_8h_1a83234c6109e037c58a0533b3cc7915cb" compoundref="mpc__tbldefs_8h" startline="98">TILTMAX_LND_MAX</references>
        <references refid="mpc__tbldefs_8h_1a4af5139332c922f9689f86ca085cec39" compoundref="mpc__tbldefs_8h" startline="97">TILTMAX_LND_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1ad0341372f873c3fdc42c308770dbe418" compoundref="mpc__tbldefs_8h" startline="550">MPC_ConfigTbl_t::TKO_RAMP_T</references>
        <references refid="struct_m_p_c___config_tbl__t_1a02276af74fbfb1dc4e0f4ffb28cd3483" compoundref="mpc__tbldefs_8h" startline="398">MPC_ConfigTbl_t::TKO_SPEED</references>
        <references refid="mpc__tbldefs_8h_1a6f013a97bd2441306300b32ea3dc3535" compoundref="mpc__tbldefs_8h" startline="102">TKO_SPEED_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac448ecc5cfd188b34934070b301cf017" compoundref="mpc__tbldefs_8h" startline="101">TKO_SPEED_MIN</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_m_p_c_1ab40e62638018ba4e9bd63414fb4e8d62" compoundref="mpc__app_8cpp" startline="4029" endline="4041">Validate_HOLD_DZ</references>
        <references refid="class_m_p_c_1a0c51b692fb8ad64f87145b4c9f998082" compoundref="mpc__app_8cpp" startline="4092" endline="4104">Validate_TKO_RAMP_T</references>
        <references refid="class_m_p_c_1a8af256a26a1345f41f6776907aa94454" compoundref="mpc__app_8cpp" startline="4050" endline="4062">Validate_XY_MAN_EXPO</references>
        <references refid="class_m_p_c_1ae7849d9bb1c9132b087cdae018942809" compoundref="mpc__app_8cpp" startline="3861" endline="3873">Validate_XY_P</references>
        <references refid="class_m_p_c_1a5fb95b06413073de8b276e9ee959e095" compoundref="mpc__app_8cpp" startline="3924" endline="3936">Validate_XY_VEL_D</references>
        <references refid="class_m_p_c_1ac7330b1d9fd785a578101cad3f50733e" compoundref="mpc__app_8cpp" startline="3903" endline="3915">Validate_XY_VEL_I</references>
        <references refid="class_m_p_c_1a262bf3526e1bbb9261b57c22da21615c" compoundref="mpc__app_8cpp" startline="3882" endline="3894">Validate_XY_VEL_P</references>
        <references refid="class_m_p_c_1a4cad93d34b3555ca0c9032cd3ea171d1" compoundref="mpc__app_8cpp" startline="4071" endline="4083">Validate_Z_MAN_EXPO</references>
        <references refid="class_m_p_c_1aeb43311b826bb60e65f25d30f7ef0c87" compoundref="mpc__app_8cpp" startline="3945" endline="3957">Validate_Z_P</references>
        <references refid="class_m_p_c_1a9700b388b92bc3aebe7dde73c493b15d" compoundref="mpc__app_8cpp" startline="4008" endline="4020">Validate_Z_VEL_D</references>
        <references refid="class_m_p_c_1a5ede3b329e73a7a0859185f0b58ac699" compoundref="mpc__app_8cpp" startline="3987" endline="3999">Validate_Z_VEL_I</references>
        <references refid="class_m_p_c_1a605148e745632e3ff5adc2cff18c0259" compoundref="mpc__app_8cpp" startline="3966" endline="3978">Validate_Z_VEL_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a747b97f961a8b2ab5ebdee6e53067e8c" compoundref="mpc__tbldefs_8h" startline="454">MPC_ConfigTbl_t::VELD_LP</references>
        <references refid="mpc__tbldefs_8h_1a28d102c6d2b5525ecff79e4776c50758" compoundref="mpc__tbldefs_8h" startline="114">VELD_LP_MAX</references>
        <references refid="mpc__tbldefs_8h_1a44cad12ce74503ccb77cf3bcf362db56" compoundref="mpc__tbldefs_8h" startline="113">VELD_LP_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a4df59eedd1d9f9bc4fb19e3f14d766cb" compoundref="mpc__tbldefs_8h" startline="323">MPC_ConfigTbl_t::XY_CRUISE</references>
        <references refid="mpc__tbldefs_8h_1ab78efdb4e98ca75ff17e5085859d2080" compoundref="mpc__tbldefs_8h" startline="88">XY_CRUISE_MAX</references>
        <references refid="mpc__tbldefs_8h_1a13d91d635ac142ade7bb428e1f62b864" compoundref="mpc__tbldefs_8h" startline="87">XY_CRUISE_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab71d7bd78c417fbe917f92eaa5481404" compoundref="mpc__tbldefs_8h" startline="358">MPC_ConfigTbl_t::XY_FF</references>
        <references refid="mpc__tbldefs_8h_1aea321954b025de2ba6253dae46ebd405" compoundref="mpc__tbldefs_8h" startline="94">XY_FF_MAX</references>
        <references refid="mpc__tbldefs_8h_1ac797312432a05e9805765a1e3b9ec49b" compoundref="mpc__tbldefs_8h" startline="93">XY_FF_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1ab84a855f46ccdc16da15ba64026a9df0" compoundref="mpc__tbldefs_8h" startline="500">MPC_ConfigTbl_t::XY_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1a94ab7c6f7ef05f6ede934d3919c857d5" compoundref="mpc__tbldefs_8h" startline="291">MPC_ConfigTbl_t::XY_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a63e4e58da916b0e00410947e9c343367" compoundref="mpc__tbldefs_8h" startline="314">MPC_ConfigTbl_t::XY_VEL_D</references>
        <references refid="struct_m_p_c___config_tbl__t_1a02e2532daab6a272416fa01826d12141" compoundref="mpc__tbldefs_8h" startline="305">MPC_ConfigTbl_t::XY_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1a6e83ca52baecb072e11679b36861b6b0" compoundref="mpc__tbldefs_8h" startline="348">MPC_ConfigTbl_t::XY_VEL_MAX</references>
        <references refid="mpc__tbldefs_8h_1a53a0681992debc0abab169bea202d252" compoundref="mpc__tbldefs_8h" startline="92">XY_VEL_MAX_MAX</references>
        <references refid="mpc__tbldefs_8h_1ae9e06c03a5731e658f661a54a27b110e" compoundref="mpc__tbldefs_8h" startline="91">XY_VEL_MAX_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a28b0e7bf1b7693bffd920311b9af90e7" compoundref="mpc__tbldefs_8h" startline="298">MPC_ConfigTbl_t::XY_VEL_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7ab4a24fb8ce4a8efa0664ccfd221515" compoundref="mpc__tbldefs_8h" startline="284">MPC_ConfigTbl_t::Z_FF</references>
        <references refid="mpc__tbldefs_8h_1ad530fd8c73161b5fcdaaa11404d7133d" compoundref="mpc__tbldefs_8h" startline="78">Z_FF_MAX</references>
        <references refid="mpc__tbldefs_8h_1aec3e41bce5538f618072a8737497641e" compoundref="mpc__tbldefs_8h" startline="77">Z_FF_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1ae5a13fd047a93a7fcdbc60955149dbae" compoundref="mpc__tbldefs_8h" startline="513">MPC_ConfigTbl_t::Z_MAN_EXPO</references>
        <references refid="struct_m_p_c___config_tbl__t_1a3342170e65db19336da03839ca8b9caa" compoundref="mpc__tbldefs_8h" startline="225">MPC_ConfigTbl_t::Z_P</references>
        <references refid="struct_m_p_c___config_tbl__t_1a7cda035e0f5db994eefa95d09a9f8068" compoundref="mpc__tbldefs_8h" startline="249">MPC_ConfigTbl_t::Z_VEL_D</references>
        <references refid="struct_m_p_c___config_tbl__t_1a9e5d62c8a70363efc86040419ad4c123" compoundref="mpc__tbldefs_8h" startline="242">MPC_ConfigTbl_t::Z_VEL_I</references>
        <references refid="struct_m_p_c___config_tbl__t_1aeeedefa7fb775cfd3da9100cf9155470" compoundref="mpc__tbldefs_8h" startline="273">MPC_ConfigTbl_t::Z_VEL_MAX_DN</references>
        <references refid="mpc__tbldefs_8h_1a4bf7a5d9976039fe1602a4ee56e3b8ae" compoundref="mpc__tbldefs_8h" startline="76">Z_VEL_MAX_DN_MAX</references>
        <references refid="mpc__tbldefs_8h_1a5d9443b621390e04d0a0955da71c8f66" compoundref="mpc__tbldefs_8h" startline="75">Z_VEL_MAX_DN_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a88f8962ab99b2964010499c28578539f" compoundref="mpc__tbldefs_8h" startline="261">MPC_ConfigTbl_t::Z_VEL_MAX_UP</references>
        <references refid="mpc__tbldefs_8h_1adb45201291902a560fb4a24fb75fe2f6" compoundref="mpc__tbldefs_8h" startline="74">Z_VEL_MAX_UP_MAX</references>
        <references refid="mpc__tbldefs_8h_1aaa698db031042bf22fd763c45e7ed50a" compoundref="mpc__tbldefs_8h" startline="73">Z_VEL_MAX_UP_MIN</references>
        <references refid="struct_m_p_c___config_tbl__t_1a07c3b877884a93521d6c9757ef227ac1" compoundref="mpc__tbldefs_8h" startline="232">MPC_ConfigTbl_t::Z_VEL_P</references>
        <referencedby refid="class_m_p_c_1aed508a5970bc3c452a769361b106658e" compoundref="mpc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ae7849d9bb1c9132b087cdae018942809" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_XY_P</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_XY_P</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the XY_P parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the XY_P parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1145" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3861" bodyend="3873"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a2d921c03b66aa50c6dea1694adcb0c54" compoundref="mpc__tbldefs_8h" startline="80">XY_P_MAX</references>
        <references refid="mpc__tbldefs_8h_1acbaeda91deb849a97e463da41e941c0a" compoundref="mpc__tbldefs_8h" startline="79">XY_P_MIN</references>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a262bf3526e1bbb9261b57c22da21615c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_XY_VEL_P</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_XY_VEL_P</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the XY_VEL_P parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the XY_VEL_P parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1165" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3882" bodyend="3894"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1adfcc9a9c8d2c102f318c68cdf395e38e" compoundref="mpc__tbldefs_8h" startline="82">XY_VEL_P_MAX</references>
        <references refid="mpc__tbldefs_8h_1a6909884c676af82373a88f4497c7cd24" compoundref="mpc__tbldefs_8h" startline="81">XY_VEL_P_MIN</references>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ac7330b1d9fd785a578101cad3f50733e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_XY_VEL_I</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_XY_VEL_I</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the XY_VEL_I parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the XY_VEL_I parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1185" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3903" bodyend="3915"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a03b93878478c0a04fcaf3abc4e7b4ca4" compoundref="mpc__tbldefs_8h" startline="84">XY_VEL_I_MAX</references>
        <references refid="mpc__tbldefs_8h_1ada2dc7911490bf9b996992293cb89f78" compoundref="mpc__tbldefs_8h" startline="83">XY_VEL_I_MIN</references>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a5fb95b06413073de8b276e9ee959e095" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_XY_VEL_D</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_XY_VEL_D</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the XY_VEL_D parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the XY_VEL_D parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1205" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3924" bodyend="3936"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a3b14934e263d3972e82f058e92addc5f" compoundref="mpc__tbldefs_8h" startline="86">XY_VEL_D_MAX</references>
        <references refid="mpc__tbldefs_8h_1af1903317b3a00d49a7e5dfb313040548" compoundref="mpc__tbldefs_8h" startline="85">XY_VEL_D_MIN</references>
        <referencedby refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" compoundref="mpc__app_8cpp" startline="3162" endline="3198">UpdateXyPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1aeb43311b826bb60e65f25d30f7ef0c87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_Z_P</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_Z_P</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the Z_P parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the Z_P parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1225" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3945" bodyend="3957"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1af474e52b5d2b69a7d7a102c6348e8bc8" compoundref="mpc__tbldefs_8h" startline="66">Z_P_MAX</references>
        <references refid="mpc__tbldefs_8h_1a90ea19aa209a8ba522fb4f04b21eb884" compoundref="mpc__tbldefs_8h" startline="65">Z_P_MIN</references>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a605148e745632e3ff5adc2cff18c0259" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_Z_VEL_P</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_Z_VEL_P</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the Z_VEL_P parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the Z_VEL_P parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1245" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3966" bodyend="3978"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1af3b303149df66c991bc4dee6ae846b5c" compoundref="mpc__tbldefs_8h" startline="68">Z_VEL_P_MAX</references>
        <references refid="mpc__tbldefs_8h_1a689401292a0fff4c3d718fa1c345ae0a" compoundref="mpc__tbldefs_8h" startline="67">Z_VEL_P_MIN</references>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a5ede3b329e73a7a0859185f0b58ac699" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_Z_VEL_I</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_Z_VEL_I</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the Z_VEL_I parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the Z_VEL_I parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1265" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="3987" bodyend="3999"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a07b4bebcd003185acf58d4dc96031c16" compoundref="mpc__tbldefs_8h" startline="70">Z_VEL_I_MAX</references>
        <references refid="mpc__tbldefs_8h_1ad3ca541be1e30b49215f0ade40778353" compoundref="mpc__tbldefs_8h" startline="69">Z_VEL_I_MIN</references>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a9700b388b92bc3aebe7dde73c493b15d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_Z_VEL_D</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_Z_VEL_D</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the Z_VEL_D parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the Z_VEL_D parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1285" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="4008" bodyend="4020"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a96fb1bd4396641bd54046e7aedc0784c" compoundref="mpc__tbldefs_8h" startline="72">Z_VEL_D_MAX</references>
        <references refid="mpc__tbldefs_8h_1a76c81351095e357fcf0851502a091c2d" compoundref="mpc__tbldefs_8h" startline="71">Z_VEL_D_MIN</references>
        <referencedby refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" compoundref="mpc__app_8cpp" startline="3207" endline="3237">UpdateZPids</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1ab40e62638018ba4e9bd63414fb4e8d62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_HOLD_DZ</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_HOLD_DZ</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the HOLD_DZ parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the HOLD_DZ parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1305" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="4029" bodyend="4041"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__tbldefs_8h_1ad6858085890986bb8daa5d482db89cb2" compoundref="mpc__tbldefs_8h" startline="108">HOLD_DZ_MAX</references>
        <references refid="mpc__tbldefs_8h_1a24f1802df13fb4d68e8ae0eb7b2e8281" compoundref="mpc__tbldefs_8h" startline="107">HOLD_DZ_MIN</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a51689fa2d1c581b6f3d2382254b80e4e" compoundref="mpc__app_8cpp" startline="3246" endline="3262">UpdateHoldDz</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a8af256a26a1345f41f6776907aa94454" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_XY_MAN_EXPO</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_XY_MAN_EXPO</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the XY_MAN_EXPO parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the XY_MAN_EXPO parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1325" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="4050" bodyend="4062"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a2cc9be1fb5e0bfdac7ffce8212853755" compoundref="mpc__tbldefs_8h" startline="124">XY_MAN_EXPO_MAX</references>
        <references refid="mpc__tbldefs_8h_1a639f3c27cee23c6b86b91e878e0a5b34" compoundref="mpc__tbldefs_8h" startline="123">XY_MAN_EXPO_MIN</references>
        <referencedby refid="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" compoundref="mpc__app_8cpp" startline="3271" endline="3289">UpdateStickExpo</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a4cad93d34b3555ca0c9032cd3ea171d1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_Z_MAN_EXPO</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_Z_MAN_EXPO</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the Z_MAN_EXPO parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the Z_MAN_EXPO parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1345" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="4071" bodyend="4083"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="mpc__tbldefs_8h_1a01b7078f9faa5133ac8f5952d4de1d20" compoundref="mpc__tbldefs_8h" startline="126">Z_MAN_EXPO_MAX</references>
        <references refid="mpc__tbldefs_8h_1a33c7a38f497168320b6052be889a6fc4" compoundref="mpc__tbldefs_8h" startline="125">Z_MAN_EXPO_MIN</references>
        <referencedby refid="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" compoundref="mpc__app_8cpp" startline="3271" endline="3289">UpdateStickExpo</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_m_p_c_1a0c51b692fb8ad64f87145b4c9f998082" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool MPC::Validate_TKO_RAMP_T</definition>
        <argsstring>(float value)</argsstring>
        <name>Validate_TKO_RAMP_T</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Validate the TKO_RAMP_T parameter. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates the TKO_RAMP_T parameter</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>The <ref refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" kindref="member">MPC_INVLD_PARAM_ERR_EID</ref> error event message will be sent if the function fails validation.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be validated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="3" cols="2"><row>
<entry thead="no"><para><ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para><ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Boolean TRUE indicates the value passed is valid.  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/mpc/fsw/src/mpc_app.h" line="1366" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.cpp" bodystart="4092" bodyend="4104"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="mpc__events_8h_1ad2368f05d297c79cc0e89bf2322380d9a43353160b9cc44a9171f965c3a220a85" compoundref="mpc__events_8h" startline="382">MPC_INVLD_PARAM_ERR_EID</references>
        <references refid="mpc__tbldefs_8h_1a1b975097915bf9d68965c2c8e4aa1471" compoundref="mpc__tbldefs_8h" startline="132">TKO_RAMP_T_MAX</references>
        <references refid="mpc__tbldefs_8h_1ab0129ce02d7e2dac0a70d34f01a52784" compoundref="mpc__tbldefs_8h" startline="131">TKO_RAMP_T_MIN</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_m_p_c_1a22b9caa726c0d54b4ccd2352deb78d4f" compoundref="mpc__app_8cpp" startline="3298" endline="3313">UpdateTakeoffRampTime</referencedby>
        <referencedby refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" compoundref="mpc__config__utils_8cpp" startline="150" endline="398">ValidateConfigTbl</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_m_p_c" kindref="compound">MPC</ref> Application Class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>MPC_ConfigTbl_t</label>
        <link refid="struct_m_p_c___config_tbl__t"/>
      </node>
      <node id="2">
        <label>MPC_HkTlm_t</label>
        <link refid="struct_m_p_c___hk_tlm__t"/>
      </node>
      <node id="4">
        <label>MPC_DiagPacket_t</label>
        <link refid="struct_m_p_c___diag_packet__t"/>
      </node>
      <node id="1">
        <label>MPC</label>
        <link refid="class_m_p_c"/>
        <childnode refid="2" relation="usage">
          <edgelabel>HkTlm</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>ConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>DiagTlm</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="apps/mpc/fsw/src/mpc_app.h" line="87" column="1" bodyfile="apps/mpc/fsw/src/mpc_app.h" bodystart="86" bodyend="1367"/>
    <listofallmembers>
      <member refid="class_m_p_c_1a4bb953a6dc1f98395e63ded4bedaf50b" prot="public" virt="non-virtual"><scope>MPC</scope><name>AcquireConfigPointers</name></member>
      <member refid="class_m_p_c_1a672f39dca6c363e398df1712f2d7c040" prot="public" virt="non-virtual"><scope>MPC</scope><name>ApplyVelocitySetpointSlewRate</name></member>
      <member refid="class_m_p_c_1a9b7afd8e591f9f2c18e3d61ae6dfbf34" prot="public" virt="non-virtual"><scope>MPC</scope><name>AppMain</name></member>
      <member refid="class_m_p_c_1af603adbc4848b140333e799c31f67b35" prot="public" virt="non-virtual"><scope>MPC</scope><name>CalculateThrustSetpoint</name></member>
      <member refid="class_m_p_c_1a241b0bada5cdbea1a4d0190c141c0179" prot="public" virt="non-virtual"><scope>MPC</scope><name>CalculateVelocitySetpoint</name></member>
      <member refid="class_m_p_c_1a5bf905d5de0a03e493e5425a15efbf6a" prot="public" virt="non-virtual"><scope>MPC</scope><name>CmdPipeId</name></member>
      <member refid="class_m_p_c_1a5d089b5a1f2f7ad1b994a6d894198c08" prot="public" virt="non-virtual"><scope>MPC</scope><name>ConfigTblHdl</name></member>
      <member refid="class_m_p_c_1aeb8c00a3323338f5c45c3d2839027061" prot="public" virt="non-virtual"><scope>MPC</scope><name>ConfigTblPtr</name></member>
      <member refid="class_m_p_c_1a34de61bdc04c8f7912966170ade40c4e" prot="public" virt="non-virtual"><scope>MPC</scope><name>ControlAuto</name></member>
      <member refid="class_m_p_c_1a0b452ae2c0625ac63390ca53a0fd37c4" prot="public" virt="non-virtual"><scope>MPC</scope><name>ControlManual</name></member>
      <member refid="class_m_p_c_1a06a81809397a908fee423809eb7efcf4" prot="public" virt="non-virtual"><scope>MPC</scope><name>ControlNonManual</name></member>
      <member refid="class_m_p_c_1a9ca655abfb4f1761092bc57e3f22a286" prot="public" virt="non-virtual"><scope>MPC</scope><name>ControlOffboard</name></member>
      <member refid="class_m_p_c_1a7135c06747ef2a806deb3abb74e329e4" prot="public" virt="non-virtual"><scope>MPC</scope><name>ControlPosition</name></member>
      <member refid="class_m_p_c_1a0cfe729a2e79fd42e303032e6b63801e" prot="public" virt="non-virtual"><scope>MPC</scope><name>DataPipeId</name></member>
      <member refid="class_m_p_c_1a7c999d46f9a9c48f278a01cd08cba83d" prot="public" virt="non-virtual"><scope>MPC</scope><name>DiagTlm</name></member>
      <member refid="class_m_p_c_1a4e59bb7e384b130d0d62f76d1fa7c51b" prot="public" virt="non-virtual"><scope>MPC</scope><name>DoControl</name></member>
      <member refid="class_m_p_c_1a7e7ba8af055d665eeeae0fb16622eee2" prot="public" virt="non-virtual"><scope>MPC</scope><name>Execute</name></member>
      <member refid="class_m_p_c_1af0e01786d07706e1d2a7171249bad1e0" prot="public" virt="non-virtual"><scope>MPC</scope><name>GenerateAttitudeSetpoint</name></member>
      <member refid="class_m_p_c_1a79f43a9d1f2b449a31750e20d1133c95" prot="public" virt="non-virtual"><scope>MPC</scope><name>GetCruisingSpeedXY</name></member>
      <member refid="class_m_p_c_1a2e465764754db857c775785aa2d14c8f" prot="public" virt="non-virtual"><scope>MPC</scope><name>GetVelClose</name></member>
      <member refid="class_m_p_c_1ac1650edc8bda297c77fd998d5c825120" prot="public" virt="non-virtual"><scope>MPC</scope><name>HkTlm</name></member>
      <member refid="class_m_p_c_1a0f94435b85b6bf16f2d652f274bc05c3" prot="public" virt="non-virtual"><scope>MPC</scope><name>InAutoTakeoff</name></member>
      <member refid="class_m_p_c_1ab8a4798e904a026595cb05123b163d0b" prot="public" virt="non-virtual"><scope>MPC</scope><name>InitApp</name></member>
      <member refid="class_m_p_c_1aed508a5970bc3c452a769361b106658e" prot="public" virt="non-virtual"><scope>MPC</scope><name>InitConfigTbl</name></member>
      <member refid="class_m_p_c_1a91e54228f0392642bd441fc87d5770e7" prot="public" virt="non-virtual"><scope>MPC</scope><name>InitData</name></member>
      <member refid="class_m_p_c_1a28cb0d241b3a60c95cd0cb94044bf539" prot="public" virt="non-virtual"><scope>MPC</scope><name>InitEvent</name></member>
      <member refid="class_m_p_c_1ab58f7dadd6c6186f7b56e218c00fcae7" prot="public" virt="non-virtual"><scope>MPC</scope><name>InitPipe</name></member>
      <member refid="class_m_p_c_1a33ff948ee937c108297199a3408941ff" prot="public" virt="non-virtual"><scope>MPC</scope><name>LimitAltitude</name></member>
      <member refid="class_m_p_c_1aaca680fe86fbc1a163f9a4d788098e6d" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_AccelerationStateLimitXY</name></member>
      <member refid="class_m_p_c_1a662b90ea197902f0b24ea3ef1ec7d713" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_AccelerationStateLimitZ</name></member>
      <member refid="class_m_p_c_1a99ba99a2619886c6084a9807fea8bf6a" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_AltitudeHoldEngaged</name></member>
      <member refid="class_m_p_c_1a7f352a90a5342605c72b2de2f232424e" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ControlStateMsg</name></member>
      <member refid="class_m_p_c_1a159ff2c69d6fecc09094b6c7956b8c91" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_CurrentPositionSetpoint</name></member>
      <member refid="class_m_p_c_1ac5603a5b5912c778f653ab5bedfce2ae" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_DerivativeZ</name></member>
      <member refid="class_m_p_c_1aac4c489b6edd69f2b00bc46ebf77698f" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_DoResetAltPos</name></member>
      <member refid="class_m_p_c_1a18a7ed0ef81a74046fe4190846f2c556" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_FilterManualPitch</name></member>
      <member refid="class_m_p_c_1a9458bd139670c632036725b8f2bce33a" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_FilterManualRoll</name></member>
      <member refid="class_m_p_c_1a6bee6ab568f48e89464166a5bf7fe9df" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_HeadingResetCounter</name></member>
      <member refid="class_m_p_c_1a882863f0eefc3ef777751ed4225ded25" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_HoldOffboardXY</name></member>
      <member refid="class_m_p_c_1a0c5e1194e192ded200d4f8ced9d20ab8" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_HoldOffboardZ</name></member>
      <member refid="class_m_p_c_1a89cc2587adcb2c8b82241b8373f7866f" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_HomePositionMsg</name></member>
      <member refid="class_m_p_c_1acafbbfca053d0773a0378a80caf9ce84" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_InTakeoff</name></member>
      <member refid="class_m_p_c_1a8241f7631ab64d9fe9771d948ccc0c39" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ManualControlSetpointMsg</name></member>
      <member refid="class_m_p_c_1a84f6ac513891845ed2a4288796257d59" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ManualDirectionChangeHysteresis</name></member>
      <member refid="class_m_p_c_1a46bc00fe5d42608088ce81a170e2452b" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ManualJerkLimitXY</name></member>
      <member refid="class_m_p_c_1a92c2c654b34bb2d72b5a3a136016b491" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ManualJerkLimitZ</name></member>
      <member refid="class_m_p_c_1a2735cf9814c6d80d2c59efe60bcf1337" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ManYawOffset</name></member>
      <member refid="class_m_p_c_1a7037cb12097f6822fc0fdfa9dd7b7451" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ModeAuto</name></member>
      <member refid="class_m_p_c_1a1ab2eb251a3e189377af3e332cca9341" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_Position</name></member>
      <member refid="class_m_p_c_1ad7f711a3182dc749c9e4df1279dfefe5" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_PositionHoldEngaged</name></member>
      <member refid="class_m_p_c_1a8b44cfb4ce5ad7d7936e7e6fdad83f37" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_PositionSetpoint</name></member>
      <member refid="class_m_p_c_1ab97dc03c8c886019a7096d6b95a1116f" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_PositionSetpointTripletMsg</name></member>
      <member refid="class_m_p_c_1a75ba87f1a1a4b5d8611244138c6a66c7" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_PosP</name></member>
      <member refid="class_m_p_c_1a53ae6538f9d2ad32fbc15f117ac7b02a" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_PreviousPositionSetpoint</name></member>
      <member refid="class_m_p_c_1a8e7421f432fb48146f7a985ba81f7d81" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RefAlt</name></member>
      <member refid="class_m_p_c_1a6161e06b5b590fa12b3ae93954abdf4c" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RefAltIsGlobal</name></member>
      <member refid="class_m_p_c_1ad1ae795d5dfb450e0724c1292508a338" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RefPos</name></member>
      <member refid="class_m_p_c_1ab978154eb831059e6b9c6460f1014a3e" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RefTimestamp</name></member>
      <member refid="class_m_p_c_1aee724c6fde3104898e8f69f4639d6eda" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetAltitudeSetpoint</name></member>
      <member refid="class_m_p_c_1ae196aa56c4723c893f58e966422138a7" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetCounterXy</name></member>
      <member refid="class_m_p_c_1a1effb253b61f00a41c06e0d2295647ba" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetCounterZ</name></member>
      <member refid="class_m_p_c_1a308fcbf69f14791abcb919ca34e0c51e" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetIntXY</name></member>
      <member refid="class_m_p_c_1a9923b4095cc4a75d3a6b1c7c4292338c" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetIntZ</name></member>
      <member refid="class_m_p_c_1a1271aa40f18d7ebf33325281c1a3686a" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetPositionSetpoint</name></member>
      <member refid="class_m_p_c_1abf5b31580b84b52266d617ff2452753f" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ResetYawSetpoint</name></member>
      <member refid="class_m_p_c_1a687235734c84402db406bb37dba75421" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_Rotation</name></member>
      <member refid="class_m_p_c_1a6358d71ebbcecee7f0183e10bdcd554f" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RSetpoint</name></member>
      <member refid="class_m_p_c_1a1d3ea255fc6bcf3fb94884c7e86f6f43" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RunAltControl</name></member>
      <member refid="class_m_p_c_1a3cafa8c95068894c145fb755c15a0dde" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_RunPosControl</name></member>
      <member refid="class_m_p_c_1a20dff91c5bb60c66d4ec4c564a2bdc26" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_StickInputXyPrev</name></member>
      <member refid="class_m_p_c_1a5b919d5d95787c2dbcb81cbfd0e3f1c6" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_TakeoffVelLimit</name></member>
      <member refid="class_m_p_c_1a025ed791069468ece2b1714038ffb9b6" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_ThrustInt</name></member>
      <member refid="class_m_p_c_1a224e834e7b808ab279487c154c43f91c" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_TripletLatLonFinite</name></member>
      <member refid="class_m_p_c_1ab8cc330be5916b27bbe12d5ce6198db2" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_UserIntentionXY</name></member>
      <member refid="class_m_p_c_1a0c82008c52ce3a08bf29e83a9c7f3ac8" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_UserIntentionZ</name></member>
      <member refid="class_m_p_c_1abfea3e666424521a7d70ac99c367f87e" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VehicleAttitudeSetpointMsg</name></member>
      <member refid="class_m_p_c_1a96936dc29fd282673bc1f8074d5344bb" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VehicleControlModeMsg</name></member>
      <member refid="class_m_p_c_1a1dd59a998a393d09dea83b4faa728da7" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VehicleLandDetectedMsg</name></member>
      <member refid="class_m_p_c_1ab4487de80bede873e38ae068321d1a27" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VehicleLocalPositionMsg</name></member>
      <member refid="class_m_p_c_1a315ee8ebbc28ff9a9bcb468104e74e94" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VehicleLocalPositionSetpointMsg</name></member>
      <member refid="class_m_p_c_1af7f5aabd74ab9ddb09ccd4f9cfa46738" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VehicleStatusMsg</name></member>
      <member refid="class_m_p_c_1a68e6269c19b15df1921c7b49940b7415" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelD</name></member>
      <member refid="class_m_p_c_1a86bfd3f11d3bd56f037b6ce683e576d8" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelI</name></member>
      <member refid="class_m_p_c_1abf51e99402d6086283631dbd4794ad95" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelMaxXy</name></member>
      <member refid="class_m_p_c_1afad819b3d487737e2797cbef9ce89bd5" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_Velocity</name></member>
      <member refid="class_m_p_c_1a072f30602bd7151e8d8bc3d54679bcba" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelocityErrD</name></member>
      <member refid="class_m_p_c_1aa90455009127a8b0b3f36c6b31d8ede0" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelocityPrevious</name></member>
      <member refid="class_m_p_c_1a36e68ec0111c223cfcc5fc9bfd23f4c2" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelocitySetpoint</name></member>
      <member refid="class_m_p_c_1a65483ed976ffea0e96d05edaada57ec5" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelocitySetpointPrevious</name></member>
      <member refid="class_m_p_c_1a0fefa80f01b19f0dd1af856c90490ae7" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelP</name></member>
      <member refid="class_m_p_c_1a341012eef955d123987657c75c08b5a6" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelXDeriv</name></member>
      <member refid="class_m_p_c_1a7cd0f15610f285c6c81a67e7842dd6a5" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelYDeriv</name></member>
      <member refid="class_m_p_c_1ab35fe04056c200733d9a2806ddcce495" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_VelZDeriv</name></member>
      <member refid="class_m_p_c_1a1471899d23f4cfc430e059ea1d0fb3ce" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_WasLanded</name></member>
      <member refid="class_m_p_c_1a42ea2c442370ab1f174ec1290851f0f3" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_Yaw</name></member>
      <member refid="class_m_p_c_1a54765d4619cafc7dc83d8204f92aa5d0" prot="public" virt="non-virtual"><scope>MPC</scope><name>m_YawTakeoff</name></member>
      <member refid="class_m_p_c_1a7e0c6a98d730b8ddf0b914d95422a7ef" prot="public" virt="non-virtual"><scope>MPC</scope><name>ManualWantsTakeoff</name></member>
      <member refid="class_m_p_c_1aa00d954d8326ede0331abaf7a7a36815" prot="public" virt="non-virtual"><scope>MPC</scope><name>MPC</name></member>
      <member refid="class_m_p_c_1adc61839f100c43c8403e410501dbf2ba" prot="public" virt="non-virtual"><scope>MPC</scope><name>ProcessAppCmds</name></member>
      <member refid="class_m_p_c_1aa2b56b3fbd3ff5db9d4dd820d38ee607" prot="public" virt="non-virtual"><scope>MPC</scope><name>ProcessCmdPipe</name></member>
      <member refid="class_m_p_c_1a60cfb496216fdd8648662377cf3fcac2" prot="public" virt="non-virtual"><scope>MPC</scope><name>ProcessControlStateMsg</name></member>
      <member refid="class_m_p_c_1a06affb0a0264f0dd4068d97414c8b38e" prot="public" virt="non-virtual"><scope>MPC</scope><name>ProcessDataPipe</name></member>
      <member refid="class_m_p_c_1af5262f753b6e007c3370521a21f6da52" prot="public" virt="non-virtual"><scope>MPC</scope><name>ProcessPositionSetpointTripletMsg</name></member>
      <member refid="class_m_p_c_1a2921387b2c245d0f50e2bd723516cbc3" prot="public" virt="non-virtual"><scope>MPC</scope><name>ProcessVehicleLocalPositionMsg</name></member>
      <member refid="class_m_p_c_1a9af7e6e7d45baea11a6f1249a4dbe001" prot="public" virt="non-virtual"><scope>MPC</scope><name>RcvSchPipeMsg</name></member>
      <member refid="class_m_p_c_1ac41227f94660c52db9468c41be56ee60" prot="public" virt="non-virtual"><scope>MPC</scope><name>ReportDiagnostic</name></member>
      <member refid="class_m_p_c_1a4c86a711b77aca4760c71f73a741de6b" prot="public" virt="non-virtual"><scope>MPC</scope><name>ReportHousekeeping</name></member>
      <member refid="class_m_p_c_1ad37aac42e4a47edda962efb3454b7420" prot="public" virt="non-virtual"><scope>MPC</scope><name>ResetAltSetpoint</name></member>
      <member refid="class_m_p_c_1a2a2764b10ae2f2532d2fcb2503265cf6" prot="public" virt="non-virtual"><scope>MPC</scope><name>ResetPosSetpoint</name></member>
      <member refid="class_m_p_c_1ad6be46e98df3506d73994c765bc99182" prot="public" virt="non-virtual"><scope>MPC</scope><name>SchPipeId</name></member>
      <member refid="class_m_p_c_1ad9a240550f944a91459f78f8b796238e" prot="public" virt="non-virtual"><scope>MPC</scope><name>SendVehicleAttitudeSetpointMsg</name></member>
      <member refid="class_m_p_c_1a629fef51ce0ca03063856bedd1d4c2d9" prot="public" virt="non-virtual"><scope>MPC</scope><name>SendVehicleLocalPositionSetpointMsg</name></member>
      <member refid="class_m_p_c_1a0f618be8369cee49da9b391237d7bf53" prot="public" virt="non-virtual"><scope>MPC</scope><name>SetManualAccelerationXY</name></member>
      <member refid="class_m_p_c_1ab680cf2102fa80633c07364f760a0be4" prot="public" virt="non-virtual"><scope>MPC</scope><name>SetManualAccelerationZ</name></member>
      <member refid="class_m_p_c_1aa35415883f81661b8652f8bc028512c5" prot="public" virt="non-virtual"><scope>MPC</scope><name>ThrottleCurve</name></member>
      <member refid="class_m_p_c_1a073d2889ff8fca17cfd0ec0fddf09c0d" prot="public" virt="non-virtual"><scope>MPC</scope><name>uiRunStatus</name></member>
      <member refid="class_m_p_c_1a51689fa2d1c581b6f3d2382254b80e4e" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateHoldDz</name></member>
      <member refid="class_m_p_c_1a038bd07deae297e9892da169854a980a" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateParamsFromTable</name></member>
      <member refid="class_m_p_c_1a029ebccbf72211971173ddbe60d1e5a1" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateRef</name></member>
      <member refid="class_m_p_c_1abbef0d368126aaab288e89cc484ac85e" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateStickExpo</name></member>
      <member refid="class_m_p_c_1a22b9caa726c0d54b4ccd2352deb78d4f" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateTakeoffRampTime</name></member>
      <member refid="class_m_p_c_1ac2082ed0d8454d9c7ab34a376d3fbaf7" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateVelocityDerivative</name></member>
      <member refid="class_m_p_c_1ace891f508978a0292d8c91ca392b101c" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateXyPids</name></member>
      <member refid="class_m_p_c_1a676f2eed0b0edbf19647658967eba9ba" prot="public" virt="non-virtual"><scope>MPC</scope><name>UpdateZPids</name></member>
      <member refid="class_m_p_c_1ab40e62638018ba4e9bd63414fb4e8d62" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_HOLD_DZ</name></member>
      <member refid="class_m_p_c_1a0c51b692fb8ad64f87145b4c9f998082" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_TKO_RAMP_T</name></member>
      <member refid="class_m_p_c_1a8af256a26a1345f41f6776907aa94454" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_XY_MAN_EXPO</name></member>
      <member refid="class_m_p_c_1ae7849d9bb1c9132b087cdae018942809" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_XY_P</name></member>
      <member refid="class_m_p_c_1a5fb95b06413073de8b276e9ee959e095" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_XY_VEL_D</name></member>
      <member refid="class_m_p_c_1ac7330b1d9fd785a578101cad3f50733e" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_XY_VEL_I</name></member>
      <member refid="class_m_p_c_1a262bf3526e1bbb9261b57c22da21615c" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_XY_VEL_P</name></member>
      <member refid="class_m_p_c_1a4cad93d34b3555ca0c9032cd3ea171d1" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_Z_MAN_EXPO</name></member>
      <member refid="class_m_p_c_1aeb43311b826bb60e65f25d30f7ef0c87" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_Z_P</name></member>
      <member refid="class_m_p_c_1a9700b388b92bc3aebe7dde73c493b15d" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_Z_VEL_D</name></member>
      <member refid="class_m_p_c_1a5ede3b329e73a7a0859185f0b58ac699" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_Z_VEL_I</name></member>
      <member refid="class_m_p_c_1a605148e745632e3ff5adc2cff18c0259" prot="public" virt="non-virtual"><scope>MPC</scope><name>Validate_Z_VEL_P</name></member>
      <member refid="class_m_p_c_1a65b3b271e19066aeb0d1c1a59d245819" prot="public" virt="non-virtual"><scope>MPC</scope><name>ValidateConfigTbl</name></member>
      <member refid="class_m_p_c_1a20690d2882592e87569221f8c2bd7c48" prot="public" virt="non-virtual"><scope>MPC</scope><name>VerifyCmdLength</name></member>
      <member refid="class_m_p_c_1a96c471412e292fd52b90bf8cac8473f1" prot="public" virt="non-virtual"><scope>MPC</scope><name>~MPC</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
