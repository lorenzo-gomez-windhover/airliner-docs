<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cfsschtbl" kind="page">
    <compoundname>cfsschtbl</compoundname>
    <title>CFS Scheduler Table Definitions</title>
    <detaileddescription>
<para><table rows="1" cols="3"><row>
<entry thead="no"><para><bold><ref refid="cfsschcmds" kindref="compound">CFS Scheduler Commands</ref></bold> </para></entry><entry thead="no"><para><bold><ref refid="cfsschtlm" kindref="compound">CFS Scheduler Telemetry</ref></bold>  </para></entry><entry thead="no"><para><bold><ref refid="cfsschcfg" kindref="compound">CFS Scheduler Configuration Parameters</ref></bold> </para></entry></row>
</table>
</para><para>The following are the tables that are used by the CFS Scheduler Application.</para><para><heading level="3">Schedule Definition Table (SDT)</heading>
</para><para>Each entry in the Schedule Definition Table has the following structure:<linebreak/>
</para><para><verbatim>typedef struct
{
  uint8    EnableState;          /* State may be SCH_UNUSED, SCH_ENABLED, SCH_DISABLED */
  uint8    Type;                 /* Activity Type may be SCH_ACTIVITY_NONE or SCH_ACTIVITY_SEND_MSG */
  uint16   Frequency;            /* Number of seconds between Activity execution */
  uint16   Remainder;            /* Seconds offset to perform Activity */
  uint16   MessageIndex;         /* Byte index into Message Definition Table */
  uint32   GroupData;            /* Group and Multi-Group membership definitions */
} SCH_ScheduleEntry_t;
</verbatim></para><para>The first element, <computeroutput>EnableState</computeroutput>, identifies whether the specified Activity is currently <ref refid="sch__msgdefs_8h_1a3c3c3058724b68ff42107cff3fbeeeaa" kindref="member">unspecified </ref> (i.e. - unused), <ref refid="sch__msgdefs_8h_1a4863bca80e851a3a246e36b1b298db73" kindref="member">Enabled </ref> (i.e. - the Activity will be acted upon once SCH has loaded the table), or <ref refid="sch__msgdefs_8h_1a1bb9b6a778c72103f9c48c673496f7ef" kindref="member">Disabled </ref> (i.e. - the Activity will NOT be acted upon once SCH has loaded the table).</para><para>The second element, <computeroutput>Type</computeroutput>, specifies whether the Activity is to <ref refid="sch__msgdefs_8h_1a343748e9d5952c672ff8bd29df1759d2" kindref="member">send a message </ref> or to do <ref refid="sch__msgdefs_8h_1a72d6c6d22c9c99a7646f57c547afb722" kindref="member">nothing </ref>. This parameter can be used for future expansion of Activity types that may be added at a later date.</para><para>The third element, <computeroutput>Frequency</computeroutput>, specifies the number of Major Frames that need to occur between Activity processing. For example, if set equal to one (1), the specified Activity will occur each time SCH processes the table. If set equal to two (2), the specified Activity will occur every other time SCH processes the table, etc.</para><para>The fourth element, <computeroutput>Remainder</computeroutput>, specifies how many Major Frames need to occur BEFORE the first time the Activity will be processed. This value must be less than the <computeroutput>Frequency</computeroutput> term specified above. This term allows the user to stagger events that occur on a common frequency to spread the CPU load over time. For example, if there are two activities whose <computeroutput>Frequency</computeroutput> element is two, one of the activity&apos;s <computeroutput>Remainder</computeroutput> is a zero (0) and the other is a one (1), then each Activity would occur on the second the other does not.</para><para>The fifth element, <computeroutput>MessageIndex</computeroutput>, indicates which message entry in the Message Definition Table (see below) is to be transmitted when this Activity is processed.</para><para>The last element, <computeroutput>GroupData</computeroutput>, allows the user to assign the Activity a Group identifier and to also designate the item as belonging to one or more groups of groups. The <computeroutput>GroupData</computeroutput> element has two bit-fields that are of interest. The bit structure is shown below: <linebreak/>
<linebreak/>
</para><para><table rows="3" cols="32"><row>
<entry thead="no"><para><bold>MSB</bold> </para></entry><entry thead="no"><para><nonbreakablespace/> </para></entry><entry thead="no"><para><bold>LSB</bold>  </para></entry></row>
<row>
<entry thead="no"><para><bold>31</bold> </para></entry><entry thead="no"><para><bold>30</bold> </para></entry><entry thead="no"><para><bold>29</bold> </para></entry><entry thead="no"><para><bold>28</bold> </para></entry><entry thead="no"><para><bold>27</bold> </para></entry><entry thead="no"><para><bold>26</bold> </para></entry><entry thead="no"><para><bold>25</bold> </para></entry><entry thead="no"><para><bold>24</bold> </para></entry><entry thead="no"><para><bold>23</bold> </para></entry><entry thead="no"><para><bold>22</bold> </para></entry><entry thead="no"><para><bold>21</bold> </para></entry><entry thead="no"><para><bold>20</bold> </para></entry><entry thead="no"><para><bold>19</bold> </para></entry><entry thead="no"><para><bold>18</bold> </para></entry><entry thead="no"><para><bold>17</bold> </para></entry><entry thead="no"><para><bold>16</bold> </para></entry><entry thead="no"><para><bold>15</bold> </para></entry><entry thead="no"><para><bold>14</bold> </para></entry><entry thead="no"><para><bold>13</bold> </para></entry><entry thead="no"><para><bold>12</bold> </para></entry><entry thead="no"><para><bold>11</bold> </para></entry><entry thead="no"><para><bold>10</bold> </para></entry><entry thead="no"><para><bold>09</bold> </para></entry><entry thead="no"><para><bold>08</bold> </para></entry><entry thead="no"><para><bold>07</bold> </para></entry><entry thead="no"><para><bold>06</bold> </para></entry><entry thead="no"><para><bold>05</bold> </para></entry><entry thead="no"><para><bold>04</bold> </para></entry><entry thead="no"><para><bold>03</bold> </para></entry><entry thead="no"><para><bold>02</bold> </para></entry><entry thead="no"><para><bold>01</bold> </para></entry><entry thead="no"><para><bold>00</bold>  </para></entry></row>
<row>
<entry thead="no"><para><bold>Group # (1-255)</bold> </para></entry><entry thead="no"><para><bold>Multi-Group Bit Mask</bold>  </para></entry></row>
</table>
</para><para>A Group Number, ranging from 1-255 (zero if no group ID is wanted), can be assigned to any number of Activities. When that group number is used in a <ref refid="sch__msgdefs_8h_1a35a6fd9478cc7dbb5936bcc4b5e54a8d" kindref="member">Group Enable/Disable Command </ref>, all the Activities with that group number will have their enable/disable status changed simultaneously.</para><para>Similarly, individual bits in the Multi-Group Bit Mask can be set to one. A bit mask setting one or more of these bits used in an <ref refid="sch__msgdefs_8h_1a35a6fd9478cc7dbb5936bcc4b5e54a8d" kindref="member">Group Enable/Disable Command </ref> will cause all Activities with a similar bit set to have their enable/disable status changed simultaneously. This essentially allows the user to make a group of groups and to treat them as a single group in a command.</para><para>If the user wishes to leave a spot empty in the table, ALL fields must be set to zero. Any values in any field will cause the table to be rejected as corrupt.</para><para>A sample Schedule Definition Table can be found in the <computeroutput>tables</computeroutput> sub-directory for the SCH App. This sample Schedule Definition Table defines a default configuration for a complete CFS system. The user will be required to uncomment out those CFS Applications they wish to include in their configuration.</para><para><heading level="3">Message Definition Table (MDT)</heading>
</para><para><verbatim>typedef struct
{
  uint16   MessageBuffer[SCH_MAX_MSG_WORDS]; /* Packed Messages */

} SCH_MessageEntry_t;
</verbatim></para><para>The Message Definition Table is simply an array of fixed length byte arrays (i.e. - a two dimensional byte array). The number of rows in the array is defined by the configuration parameter <ref refid="sch__platform__cfg_8h_1a02550ee5880be5061544001811deecec" kindref="member">SCH_MAX_MESSAGES</ref>. The size of each row is defined by the configuration parameter <ref refid="sch__platform__cfg_8h_1abae40b96462eac577fb95363ee030a38" kindref="member">SCH_MAX_MSG_WORDS</ref>. Each row can contain the binary definition of a single message the user wishes SCH to output on the Software Bus. The first row cannot be used because it would map to the &quot;Unused&quot; parameter of zero in the Schedule Definition Table. The index for each following row is what needs to be specified in the Schedule Definition Table as the <computeroutput>MessageIndex</computeroutput> to assign the message to the appropriate Activity.</para><para>A sample Message Definition Table can be found in the <computeroutput>tables</computeroutput> sub-directory for the SCH App. This sample Message Definition Table contains default messages used for a complete CFS system. In order to use the sample Message Definition Table for a full up CFS system, the message definitions must be uncommented out. </para>    </detaileddescription>
  </compounddef>
</doxygen>
