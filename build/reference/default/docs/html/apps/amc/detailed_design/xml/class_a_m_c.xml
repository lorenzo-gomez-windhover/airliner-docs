<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_a_m_c" kind="class" language="C++" prot="public">
    <compoundname>AMC</compoundname>
    <includes refid="amc__app_8h" local="no">amc_app.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_a_m_c_1a9acafc43b69ca8a35aaddc5f2be5071f" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t AMC::SchPipeId</definition>
        <argsstring></argsstring>
        <name>SchPipeId</name>
        <briefdescription>
<para>Scheduling Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="93" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a7ab754ea25af75c2b6b09ac5e630e319" compoundref="amc__app_8cpp" startline="183" endline="238">InitSchPipe</referencedby>
        <referencedby refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a779370a24c975faa9bdd55583f46ac1a" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t AMC::CmdPipeId</definition>
        <argsstring></argsstring>
        <name>CmdPipeId</name>
        <briefdescription>
<para>Command Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="96" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a301ee5177e50f1463321ac630a642a98" compoundref="amc__app_8cpp" startline="247" endline="286">InitCmdPipe</referencedby>
        <referencedby refid="class_a_m_c_1a937024338caf1e09841554dd2fbe4191" compoundref="amc__app_8cpp" startline="599" endline="650">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a61add99244e784fffbc452d4020e79f9" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t AMC::DataPipeId</definition>
        <argsstring></argsstring>
        <name>DataPipeId</name>
        <briefdescription>
<para>Data Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="99" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1ace5a7b4bf812bd3039358dc68dfd9f33" compoundref="amc__app_8cpp" startline="295" endline="350">InitDataPipe</referencedby>
        <referencedby refid="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" compoundref="amc__app_8cpp" startline="658" endline="718">ProcessDataPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a86361cbc911eeac510f2d171a29bc7bd" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t AMC::ParamPipeId</definition>
        <argsstring></argsstring>
        <name>ParamPipeId</name>
        <briefdescription>
<para>Data Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="102" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a81be40d8b3aeb0cd967fd8f37d337f66" compoundref="amc__app_8cpp" startline="359" endline="400">InitParamPipe</referencedby>
        <referencedby refid="class_a_m_c_1a45552c3a6c043c6d36daaf22acad19e9" compoundref="amc__app_8cpp" startline="726" endline="777">ProcessParamPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a05a0cfbdea1cf138dffe0e9ce94ba59f" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 AMC::uiRunStatus</definition>
        <argsstring></argsstring>
        <name>uiRunStatus</name>
        <briefdescription>
<para>Task Run Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="107" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="107" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a21e251bdf13cf01cf80bbae0ef7f69ff" compoundref="amc__app_8cpp" startline="915" endline="967">AppMain</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1afc12982026e77401b916ad1e8eab2e6d" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t AMC::PwmConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>PwmConfigTblHdl</name>
        <briefdescription>
<para>PWM Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="112" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" compoundref="amc__config__utils_8cpp" startline="281" endline="351">AcquireConfigPointers</referencedby>
        <referencedby refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" compoundref="amc__config__utils_8cpp" startline="51" endline="125">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a86e2fca05f501a64320137350bf8b576" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t AMC::MixerConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>MixerConfigTblHdl</name>
        <briefdescription>
<para><ref refid="class_mixer" kindref="compound">Mixer</ref> Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="115" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" compoundref="amc__config__utils_8cpp" startline="281" endline="351">AcquireConfigPointers</referencedby>
        <referencedby refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" compoundref="amc__config__utils_8cpp" startline="51" endline="125">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_m_c___pwm_config_tbl__t" kindref="compound">AMC_PwmConfigTbl_t</ref> *</type>
        <definition>AMC_PwmConfigTbl_t* AMC::PwmConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>PwmConfigTblPtr</name>
        <briefdescription>
<para>PWM Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="118" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" compoundref="amc__config__utils_8cpp" startline="281" endline="351">AcquireConfigPointers</referencedby>
        <referencedby refid="class_a_m_c_1a95827d2de1b1a1fb042d0e403413ed6a" compoundref="amc__app_8cpp" startline="1098" endline="1126">InitParams</referencedby>
        <referencedby refid="class_a_m_c_1a3e1afb9a170734318e9f8abf8b5e12d2" compoundref="amc__app_8cpp" startline="1134" endline="1173">ProcessUpdatedParam</referencedby>
        <referencedby refid="class_a_m_c_1ae9a7f1279402e9fd6e64e07c7ec1f907" compoundref="amc__app_8cpp" startline="975" endline="985">StopMotors</referencedby>
        <referencedby refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a4aba4a0bcaec28a2f2e8f011ce42835d" prot="public" static="no" mutable="no">
        <type><ref refid="struct_multirotor_mixer___config_table__t" kindref="compound">MultirotorMixer_ConfigTable_t</ref> *</type>
        <definition>MultirotorMixer_ConfigTable_t* AMC::MixerConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>MixerConfigTblPtr</name>
        <briefdescription>
<para><ref refid="class_mixer" kindref="compound">Mixer</ref> Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="121" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="121" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" compoundref="amc__config__utils_8cpp" startline="281" endline="351">AcquireConfigPointers</referencedby>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1ae57bef956bc9ddab880bae43d144b09d" prot="public" static="no" mutable="no">
        <type>PX4_ActuatorOutputsMsg_t</type>
        <definition>PX4_ActuatorOutputsMsg_t AMC::ActuatorOutputs</definition>
        <argsstring></argsstring>
        <name>ActuatorOutputs</name>
        <briefdescription>
<para>Output Data published at the end of cycle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="124" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aceb36aea3e5803fc48284e3b7294802b" compoundref="amc__app_8cpp" startline="408" endline="420">InitData</referencedby>
        <referencedby refid="class_a_m_c_1a347b9c7c69c9bdb4a033cc96b5aa779b" compoundref="amc__app_8cpp" startline="837" endline="851">ReportHousekeeping</referencedby>
        <referencedby refid="class_a_m_c_1ace8c26044f5ae65cc06171a1bfdf762c" compoundref="amc__app_8cpp" startline="859" endline="863">SendActuatorOutputs</referencedby>
        <referencedby refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_m_c___hk_tlm__t" kindref="compound">AMC_HkTlm_t</ref></type>
        <definition>AMC_HkTlm_t AMC::HkTlm</definition>
        <argsstring></argsstring>
        <name>HkTlm</name>
        <briefdescription>
<para>Housekeeping Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="127" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="127" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aceb36aea3e5803fc48284e3b7294802b" compoundref="amc__app_8cpp" startline="408" endline="420">InitData</referencedby>
        <referencedby refid="class_a_m_c_1a2003f644d02b2dea5616eea2e07a8891" compoundref="amc__app_8cpp" startline="785" endline="829">ProcessAppCmds</referencedby>
        <referencedby refid="class_a_m_c_1a937024338caf1e09841554dd2fbe4191" compoundref="amc__app_8cpp" startline="599" endline="650">ProcessCmdPipe</referencedby>
        <referencedby refid="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" compoundref="amc__app_8cpp" startline="658" endline="718">ProcessDataPipe</referencedby>
        <referencedby refid="class_a_m_c_1a45552c3a6c043c6d36daaf22acad19e9" compoundref="amc__app_8cpp" startline="726" endline="777">ProcessParamPipe</referencedby>
        <referencedby refid="class_a_m_c_1a347b9c7c69c9bdb4a033cc96b5aa779b" compoundref="amc__app_8cpp" startline="837" endline="851">ReportHousekeeping</referencedby>
        <referencedby refid="class_a_m_c_1a40c7f951ec11ff07df539a6ad5033ffb" compoundref="amc__app_8cpp" startline="871" endline="896">VerifyCmdLength</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1a15eb0d6fe3740f9ceecf882347a67825" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_m_c___current_value_table__t" kindref="compound">AMC_CurrentValueTable_t</ref></type>
        <definition>AMC_CurrentValueTable_t AMC::CVT</definition>
        <argsstring></argsstring>
        <name>CVT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="129" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="129" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1aceb36aea3e5803fc48284e3b7294802b" compoundref="amc__app_8cpp" startline="408" endline="420">InitData</referencedby>
        <referencedby refid="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" compoundref="amc__app_8cpp" startline="658" endline="718">ProcessDataPipe</referencedby>
        <referencedby refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1ad48332151beae50e93cef64a70ec624a" prot="public" static="no" mutable="no">
        <type><ref refid="class_multirotor_mixer" kindref="compound">MultirotorMixer</ref></type>
        <definition>MultirotorMixer AMC::MixerObject</definition>
        <argsstring></argsstring>
        <name>MixerObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="131" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
        <referencedby refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1ab13f45a7283c6be5aa40854f769bba52" prot="public" static="no" mutable="no">
        <type><ref refid="struct_pwm_limit___data__t" kindref="compound">PwmLimit_Data_t</ref></type>
        <definition>PwmLimit_Data_t AMC::PwmLimit</definition>
        <argsstring></argsstring>
        <name>PwmLimit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="134" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="134" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
        <referencedby refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_a_m_c_1ae7d7078c34ce306c643636a35f979742" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::PwmConfigMutex</definition>
        <argsstring></argsstring>
        <name>PwmConfigMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="136" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="136" bodyend="-1"/>
        <referencedby refid="class_a_m_c_1a3e1afb9a170734318e9f8abf8b5e12d2" compoundref="amc__app_8cpp" startline="1134" endline="1173">ProcessUpdatedParam</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_m_c_1a92d5e498af88ecf170a91d982a0faa3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AMC::AMC</definition>
        <argsstring>(void)</argsstring>
        <name>AMC</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="89" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a670cfb465a55e4fbf4e246721f39e9fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AMC::~AMC</definition>
        <argsstring>()</argsstring>
        <name>~AMC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="90" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a21e251bdf13cf01cf80bbae0ef7f69ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::AppMain</definition>
        <argsstring>(void)</argsstring>
        <name>AppMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>CFS PWM Motor Controller Task (<ref refid="class_a_m_c" kindref="compound">AMC</ref>) application entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>CFS PWM Motor Controller Task application entry point. This function performs app initialization, then waits for the cFE ES Startup Sync, then executes the RPR main processing loop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If there is an unrecoverable failure during initialization the main loop is never executed and the application will exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="151" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="915" bodyend="967"/>
        <references refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" compoundref="amc__config__utils_8cpp" startline="281" endline="351">AcquireConfigPointers</references>
        <references refid="amc__perfids_8h_1a87b10e6ad5ac77fc9793ef36ed979d7d" compoundref="amc__perfids_8h" startline="8">AMC_MAIN_TASK_PERF_ID</references>
        <references refid="amc__platform__cfg_8h_1aad0b035567d584693f5559e7659d2354" compoundref="amc__platform__cfg_8h" startline="49">AMC_SCH_PIPE_PEND_TIME</references>
        <references refid="amc__platform__cfg_8h_1a97682fcf49cd9426de8ccd06b5ad26dc" compoundref="amc__platform__cfg_8h" startline="112">AMC_STARTUP_TIMEOUT_MSEC</references>
        <references refid="cfe__es_8h_1abeabe0f94cccfa5bfcfc2f43796da8d1">CFE_ES_APP_ERROR</references>
        <references refid="cfe__es_8h_1a033dfcc82849cfb9a474a2cece5c9803">CFE_ES_APP_RUN</references>
        <references refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325">CFE_ES_ExitApp</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__es__api_8c_1a426ef8e1796ccebba16c63c8e86fb842">CFE_ES_RegisterApp</references>
        <references refid="cfe__es__api_8c_1ae8598bcba38a594d1c868924999da953">CFE_ES_RunLoop</references>
        <references refid="cfe__es__api_8c_1a7dc343ea775a0e5773ecdf700581d548">CFE_ES_WaitForStartupSync</references>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</references>
        <references refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_a_m_c_1a05a0cfbdea1cf138dffe0e9ce94ba59f" compoundref="amc__app_8h" startline="107">uiRunStatus</references>
        <referencedby refid="amc__app_8cpp_1a53f5274071db0922c3f3872ac27c4f45" compoundref="amc__app_8cpp" startline="904" endline="907">AMC_AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitApp</definition>
        <argsstring>(void)</argsstring>
        <name>InitApp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the CFS PWM Motor Controller (<ref refid="class_a_m_c" kindref="compound">AMC</ref>) application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>PWM Motor Controller application initialization routine. This function performs all the required startup steps to initialize (or restore from CDS) <ref refid="class_a_m_c" kindref="compound">AMC</ref> data structures and get the application registered with the cFE services so it can begin to receive command messages and send events.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_ES_RegisterApp</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #AMC_InitEvent  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #AMC_InitPipe  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #AMC_InitData  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #AMC_InitConfigTbl  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">OS_TaskInstallDeleteHandler</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="177" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="428" bodyend="513"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321abc52c6e6da48bc30c3a5f3b851d6cfde" compoundref="amc__events_8h" startline="441">AMC_DELETE_CB_REG_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a8bfc96df808af3188ae4e750039dabb1" compoundref="amc__events_8h" startline="300">AMC_DEVICE_INIT_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a3a887664a48793c1e3dc098d93d8fe98" compoundref="amc__events_8h" startline="75">AMC_INIT_INF_EID</references>
        <references refid="amc__version_8h_1a6d36aea43c64d4ace89b484028a1579d" compoundref="amc__version_8h" startline="53">AMC_MAJOR_VERSION</references>
        <references refid="amc__version_8h_1a6ea23ce5bba0b8ce33b7d5d788558276" compoundref="amc__version_8h" startline="67">AMC_MINOR_VERSION</references>
        <references refid="amc__platform__cfg_8h_1a2d4105d0891175759a05b863c7d1dc15" compoundref="amc__platform__cfg_8h" startline="25">AMC_MISSION_REV</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a31ca11e67011df4fff70f3af15619c40" compoundref="amc__events_8h" startline="171">AMC_MIXER_INIT_ERR_EID</references>
        <references refid="amc__version_8h_1a0126bde9c4dca72a54201d24fa6c7ce5" compoundref="amc__version_8h" startline="81">AMC_REVISION</references>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a125733d0f92be9ac62cc56dda2795422" compoundref="amc__app_8cpp" startline="521" endline="524">CleanupCallback</references>
        <references refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" compoundref="amc__config__utils_8cpp" startline="51" endline="125">InitConfigTbl</references>
        <references refid="class_a_m_c_1aceb36aea3e5803fc48284e3b7294802b" compoundref="amc__app_8cpp" startline="408" endline="420">InitData</references>
        <references refid="class_a_m_c_1af9289fd35348864e99ba9abf4bfc3ae0">InitDevice</references>
        <references refid="class_a_m_c_1a1763673513d970881489a3984d8b22d5" compoundref="amc__app_8cpp" startline="101" endline="116">InitEvent</references>
        <references refid="class_a_m_c_1a95827d2de1b1a1fb042d0e403413ed6a" compoundref="amc__app_8cpp" startline="1098" endline="1126">InitParams</references>
        <references refid="class_a_m_c_1acb2a5165400b66749d156186ec65712e" compoundref="amc__app_8cpp" startline="124" endline="176">InitPipes</references>
        <references refid="class_a_m_c_1a4aba4a0bcaec28a2f2e8f011ce42835d" compoundref="amc__app_8h" startline="121">MixerConfigTblPtr</references>
        <references refid="class_a_m_c_1ad48332151beae50e93cef64a70ec624a" compoundref="amc__app_8h" startline="131">MixerObject</references>
        <references refid="osapi-os-core_8h_1a0de425c8dba312f44cf8803a69e7ca5e">OS_TaskInstallDeleteHandler</references>
        <references refid="class_a_m_c_1ab13f45a7283c6be5aa40854f769bba52" compoundref="amc__app_8h" startline="134">PwmLimit</references>
        <references refid="pwm__limit_8c_1a24e5dd3edc4d650b04947ea26336875d" compoundref="pwm__limit_8c" startline="54" endline="58">PwmLimit_Init</references>
        <references refid="class_multirotor_mixer_1aacd3917ab58606b9d4d5bce69abab2ff" compoundref="_multirotor_mixer_8cpp" startline="61" endline="77">MultirotorMixer::SetConfigTablePtr</references>
        <referencedby refid="class_a_m_c_1a21e251bdf13cf01cf80bbae0ef7f69ff" compoundref="amc__app_8cpp" startline="915" endline="967">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a1763673513d970881489a3984d8b22d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitEvent</definition>
        <argsstring>(void)</argsstring>
        <name>InitEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Event Services and Event tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup cFE Event Services for use by the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__evs_8h_1aff6913e2ab9a37ae699382c482fdb786" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_EVS_Register</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="195" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="101" bodyend="116"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9c74cb368c56aff83d050a4807132460">CFE_EVS_BINARY_FILTER</references>
        <references refid="cfe__evs_8c_1a991c19d964b501bf0908bb60812fda28">CFE_EVS_Register</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1aceb36aea3e5803fc48284e3b7294802b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::InitData</definition>
        <argsstring>(void)</argsstring>
        <name>InitData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize global variables used by <ref refid="class_a_m_c" kindref="compound">AMC</ref> application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to initialize the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="208" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="408" bodyend="420"/>
        <references refid="struct_a_m_c___current_value_table__t_1aab89a42f0f4e9d936fe9ac9770667306" compoundref="amc__app_8h" startline="78">AMC_CurrentValueTable_t::ActuatorArmed</references>
        <references refid="struct_a_m_c___current_value_table__t_1a40842623df6bef791d7369bea3616bc3" compoundref="amc__app_8h" startline="79">AMC_CurrentValueTable_t::ActuatorControls0</references>
        <references refid="class_a_m_c_1ae57bef956bc9ddab880bae43d144b09d" compoundref="amc__app_8h" startline="124">ActuatorOutputs</references>
        <references refid="amc__msgids_8h_1a6268905ebcc1e6707982abb25e8047c1" compoundref="amc__msgids_8h" startline="13">AMC_HK_TLM_MID</references>
        <references refid="cfe__sb_8h_1a67765875dfff1d3d6d7cbc4a7ae2f8f0">CFE_SB_InitMsg</references>
        <references refid="class_a_m_c_1a15eb0d6fe3740f9ceecf882347a67825" compoundref="amc__app_8h" startline="129">CVT</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1acb2a5165400b66749d156186ec65712e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitPipes</definition>
        <argsstring>(void)</argsstring>
        <name>InitPipes</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="229" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="124" bodyend="176"/>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a301ee5177e50f1463321ac630a642a98" compoundref="amc__app_8cpp" startline="247" endline="286">InitCmdPipe</references>
        <references refid="class_a_m_c_1ace5a7b4bf812bd3039358dc68dfd9f33" compoundref="amc__app_8cpp" startline="295" endline="350">InitDataPipe</references>
        <references refid="class_a_m_c_1a81be40d8b3aeb0cd967fd8f37d337f66" compoundref="amc__app_8cpp" startline="359" endline="400">InitParamPipe</references>
        <references refid="class_a_m_c_1a7ab754ea25af75c2b6b09ac5e630e319" compoundref="amc__app_8cpp" startline="183" endline="238">InitSchPipe</references>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a7ab754ea25af75c2b6b09ac5e630e319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitSchPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitSchPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Scheduler pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="250" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="183" bodyend="238"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab5a93f296399bb1e81085a30cb0f04cc" compoundref="amc__events_8h" startline="157">AMC_PIPE_INIT_ERR_EID</references>
        <references refid="amc__platform__cfg_8h_1ad9916c3614bbe549a45a8f5939c3f3d0" compoundref="amc__platform__cfg_8h" startline="32">AMC_SCH_PIPE_DEPTH</references>
        <references refid="amc__platform__cfg_8h_1a3f5dadb80bf625474d2b8e4925cee0d9" compoundref="amc__platform__cfg_8h" startline="39">AMC_SCH_PIPE_NAME</references>
        <references refid="amc__platform__cfg_8h_1a9c11b53b9751ff556da0eb29c2e6a85b" compoundref="amc__platform__cfg_8h" startline="67">AMC_SCH_PIPE_SEND_HK_RESERVED</references>
        <references refid="amc__platform__cfg_8h_1aa801f6760db83e397984c199662049b1" compoundref="amc__platform__cfg_8h" startline="58">AMC_SCH_PIPE_WAKEUP_RESERVED</references>
        <references refid="amc__msgids_8h_1ab45cdb10ae23cdbf42434a3b502259b9" compoundref="amc__msgids_8h" startline="9">AMC_SEND_HK_MID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a63f9c3b95fbc708ce510c9ee51c4af91" compoundref="amc__events_8h" startline="141">AMC_SUBSCRIBE_ERR_EID</references>
        <references refid="amc__msgids_8h_1a774c8a7323cdf7e61696ce95236a38cc" compoundref="amc__msgids_8h" startline="10">AMC_UPDATE_MOTORS_MID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a9acafc43b69ca8a35aaddc5f2be5071f" compoundref="amc__app_8h" startline="93">SchPipeId</references>
        <referencedby refid="class_a_m_c_1acb2a5165400b66749d156186ec65712e" compoundref="amc__app_8cpp" startline="124" endline="176">InitPipes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a301ee5177e50f1463321ac630a642a98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Command pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="271" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="247" bodyend="286"/>
        <references refid="amc__msgids_8h_1a99b0ccf2b24501690bd4e659872f87c0" compoundref="amc__msgids_8h" startline="8">AMC_CMD_MID</references>
        <references refid="amc__platform__cfg_8h_1a86362e2b22281e6eb672ca761ed156d5" compoundref="amc__platform__cfg_8h" startline="74">AMC_CMD_PIPE_DEPTH</references>
        <references refid="amc__platform__cfg_8h_1a4d7b73e87a6fa91905e3194ef03342ea" compoundref="amc__platform__cfg_8h" startline="81">AMC_CMD_PIPE_NAME</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab5a93f296399bb1e81085a30cb0f04cc" compoundref="amc__events_8h" startline="157">AMC_PIPE_INIT_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a63f9c3b95fbc708ce510c9ee51c4af91" compoundref="amc__events_8h" startline="141">AMC_SUBSCRIBE_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a779370a24c975faa9bdd55583f46ac1a" compoundref="amc__app_8h" startline="96">CmdPipeId</references>
        <referencedby refid="class_a_m_c_1acb2a5165400b66749d156186ec65712e" compoundref="amc__app_8cpp" startline="124" endline="176">InitPipes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1ace5a7b4bf812bd3039358dc68dfd9f33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitDataPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitDataPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Data pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="292" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="295" bodyend="350"/>
        <references refid="amc__app_8h_1a4fe5af23bd3765e162f7fb6a7a86e552" compoundref="amc__app_8h" startline="69">AMC_DATA_PIPE_DEPTH</references>
        <references refid="amc__app_8h_1aaca8b4520af409de4265fe644e783dd2" compoundref="amc__app_8h" startline="70">AMC_DATA_PIPE_NAME</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab5a93f296399bb1e81085a30cb0f04cc" compoundref="amc__events_8h" startline="157">AMC_PIPE_INIT_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a63f9c3b95fbc708ce510c9ee51c4af91" compoundref="amc__events_8h" startline="141">AMC_SUBSCRIBE_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a61add99244e784fffbc452d4020e79f9" compoundref="amc__app_8h" startline="99">DataPipeId</references>
        <referencedby refid="class_a_m_c_1acb2a5165400b66749d156186ec65712e" compoundref="amc__app_8cpp" startline="124" endline="176">InitPipes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a81be40d8b3aeb0cd967fd8f37d337f66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitParamPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitParamPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Parameter pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="313" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="359" bodyend="400"/>
        <references refid="amc__platform__cfg_8h_1a23d16b89d624066a2d630d1e6e94155a" compoundref="amc__platform__cfg_8h" startline="88">AMC_PARAM_PIPE_DEPTH</references>
        <references refid="amc__platform__cfg_8h_1abc614053ac2186e7f11f2ffdbecb953f" compoundref="amc__platform__cfg_8h" startline="95">AMC_PARAM_PIPE_NAME</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab5a93f296399bb1e81085a30cb0f04cc" compoundref="amc__events_8h" startline="157">AMC_PIPE_INIT_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a63f9c3b95fbc708ce510c9ee51c4af91" compoundref="amc__events_8h" startline="141">AMC_SUBSCRIBE_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a86361cbc911eeac510f2d171a29bc7bd" compoundref="amc__app_8h" startline="102">ParamPipeId</references>
        <referencedby refid="class_a_m_c_1acb2a5165400b66749d156186ec65712e" compoundref="amc__app_8cpp" startline="124" endline="176">InitPipes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::RcvSchPipeMsg</definition>
        <argsstring>(int32 iBlocking)</argsstring>
        <name>RcvSchPipeMsg</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>iBlocking</declname>
        </param>
        <briefdescription>
<para>Receive and process messages from the scheduler pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function receives and processes messages for the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application from the SCH pipe. This function will pend for the type defined by iBlocking, allowing it to wait for messages, i.e. wakeup messages from scheduler.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iBlocking</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1acc9e6f66cd026d1c987c4c3de827366f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PEND_FOREVER</ref>, <ref refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_POLL</ref> or millisecond timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_RcvMsg</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="336" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="532" bodyend="591"/>
        <references refid="amc__perfids_8h_1a87b10e6ad5ac77fc9793ef36ed979d7d" compoundref="amc__perfids_8h" startline="8">AMC_MAIN_TASK_PERF_ID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a7ef321e4f2af02404ac65956d3eb5e3b" compoundref="amc__events_8h" startline="254">AMC_MSGID_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab8c3da42a3e707ff4eac6f319727b623" compoundref="amc__events_8h" startline="239">AMC_RCVMSG_ERR_EID</references>
        <references refid="amc__msgids_8h_1ab45cdb10ae23cdbf42434a3b502259b9" compoundref="amc__msgids_8h" startline="9">AMC_SEND_HK_MID</references>
        <references refid="amc__msgids_8h_1a774c8a7323cdf7e61696ce95236a38cc" compoundref="amc__msgids_8h" startline="10">AMC_UPDATE_MOTORS_MID</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1a68b8b8ed93cecb670c945388a797e970">CFE_SB_TIME_OUT</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_a_m_c_1a937024338caf1e09841554dd2fbe4191" compoundref="amc__app_8cpp" startline="599" endline="650">ProcessCmdPipe</references>
        <references refid="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" compoundref="amc__app_8cpp" startline="658" endline="718">ProcessDataPipe</references>
        <references refid="class_a_m_c_1a45552c3a6c043c6d36daaf22acad19e9" compoundref="amc__app_8cpp" startline="726" endline="777">ProcessParamPipe</references>
        <references refid="class_a_m_c_1a347b9c7c69c9bdb4a033cc96b5aa779b" compoundref="amc__app_8cpp" startline="837" endline="851">ReportHousekeeping</references>
        <references refid="class_a_m_c_1a9acafc43b69ca8a35aaddc5f2be5071f" compoundref="amc__app_8h" startline="93">SchPipeId</references>
        <references refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</references>
        <referencedby refid="class_a_m_c_1a21e251bdf13cf01cf80bbae0ef7f69ff" compoundref="amc__app_8cpp" startline="915" endline="967">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a937024338caf1e09841554dd2fbe4191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::ProcessCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>PWM Motor Controller Task incoming command processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming commands subscribed by <ref refid="class_a_m_c" kindref="compound">AMC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="349" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="599" bodyend="650"/>
        <references refid="amc__msgids_8h_1a99b0ccf2b24501690bd4e659872f87c0" compoundref="amc__msgids_8h" startline="8">AMC_CMD_MID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a7ef321e4f2af02404ac65956d3eb5e3b" compoundref="amc__events_8h" startline="254">AMC_MSGID_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab8c3da42a3e707ff4eac6f319727b623" compoundref="amc__events_8h" startline="239">AMC_RCVMSG_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a779370a24c975faa9bdd55583f46ac1a" compoundref="amc__app_8h" startline="96">CmdPipeId</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_a_m_c_1a2003f644d02b2dea5616eea2e07a8891" compoundref="amc__app_8cpp" startline="785" endline="829">ProcessAppCmds</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a961adaede507a6f617d52d223a7025a0" compoundref="amc__msg_8h" startline="153">AMC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::ProcessDataPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessDataPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>PWM Motor Controller Task incoming data processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming data messages subscribed by <ref refid="class_a_m_c" kindref="compound">AMC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="362" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="658" bodyend="718"/>
        <references refid="struct_a_m_c___current_value_table__t_1aab89a42f0f4e9d936fe9ac9770667306" compoundref="amc__app_8h" startline="78">AMC_CurrentValueTable_t::ActuatorArmed</references>
        <references refid="struct_a_m_c___current_value_table__t_1a40842623df6bef791d7369bea3616bc3" compoundref="amc__app_8h" startline="79">AMC_CurrentValueTable_t::ActuatorControls0</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a7ef321e4f2af02404ac65956d3eb5e3b" compoundref="amc__events_8h" startline="254">AMC_MSGID_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab8c3da42a3e707ff4eac6f319727b623" compoundref="amc__events_8h" startline="239">AMC_RCVMSG_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a15eb0d6fe3740f9ceecf882347a67825" compoundref="amc__app_8h" startline="129">CVT</references>
        <references refid="class_a_m_c_1a61add99244e784fffbc452d4020e79f9" compoundref="amc__app_8h" startline="99">DataPipeId</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a961adaede507a6f617d52d223a7025a0" compoundref="amc__msg_8h" startline="153">AMC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a2003f644d02b2dea5616eea2e07a8891" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::ProcessAppCmds</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr)</argsstring>
        <name>ProcessAppCmds</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>PWM Motor Controller Task application commands. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes command messages specific to the <ref refid="class_a_m_c" kindref="compound">AMC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="378" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="785" bodyend="829"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a5528dce33e2e8fa338f89a1e1972e867" compoundref="amc__events_8h" startline="268">AMC_CC_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321af2edc46173c5e42981caafc4c3b20ee7" compoundref="amc__events_8h" startline="124">AMC_CMD_NOOP_EID</references>
        <references refid="amc__version_8h_1a6d36aea43c64d4ace89b484028a1579d" compoundref="amc__version_8h" startline="53">AMC_MAJOR_VERSION</references>
        <references refid="amc__version_8h_1a6ea23ce5bba0b8ce33b7d5d788558276" compoundref="amc__version_8h" startline="67">AMC_MINOR_VERSION</references>
        <references refid="amc__platform__cfg_8h_1a2d4105d0891175759a05b863c7d1dc15" compoundref="amc__platform__cfg_8h" startline="25">AMC_MISSION_REV</references>
        <references refid="amc__msg_8h_1a801e2d4c23de16194ee0d596781d3df3" compoundref="amc__msg_8h" startline="90">AMC_NOOP_CC</references>
        <references refid="amc__msg_8h_1af986d6d470c02c09c759c7343c1c318a" compoundref="amc__msg_8h" startline="123">AMC_RESET_CC</references>
        <references refid="amc__version_8h_1a0126bde9c4dca72a54201d24fa6c7ce5" compoundref="amc__version_8h" startline="81">AMC_REVISION</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a9f352bedb16cb0af937ae0163fa4f7e5" compoundref="amc__msg_8h" startline="149">AMC_HkTlm_t::usCmdCnt</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a961adaede507a6f617d52d223a7025a0" compoundref="amc__msg_8h" startline="153">AMC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_a_m_c_1a937024338caf1e09841554dd2fbe4191" compoundref="amc__app_8cpp" startline="599" endline="650">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a347b9c7c69c9bdb4a033cc96b5aa779b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::ReportHousekeeping</definition>
        <argsstring>(void)</argsstring>
        <name>ReportHousekeeping</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_a_m_c" kindref="compound">AMC</ref> housekeeping message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the housekeeping message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="390" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="837" bodyend="851"/>
        <references refid="class_a_m_c_1ae57bef956bc9ddab880bae43d144b09d" compoundref="amc__app_8h" startline="124">ActuatorOutputs</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a8cf6ddf2743b9522664e7e1870bb25e9" compoundref="amc__msg_8h" startline="156">AMC_HkTlm_t::Count</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a3d89a9a258f522c2f2bc838a5a43525a" compoundref="amc__msg_8h" startline="157">AMC_HkTlm_t::Output</references>
        <references refid="struct_a_m_c___hk_tlm__t_1adcf6db0df557a2f8d9687439022aad43" compoundref="amc__msg_8h" startline="155">AMC_HkTlm_t::Timestamp</references>
        <referencedby refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1ace8c26044f5ae65cc06171a1bfdf762c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::SendActuatorOutputs</definition>
        <argsstring>(void)</argsstring>
        <name>SendActuatorOutputs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the Actuator Output message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the actuator output message containing the commanding values to the motors.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="403" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="859" bodyend="863"/>
        <references refid="class_a_m_c_1ae57bef956bc9ddab880bae43d144b09d" compoundref="amc__app_8h" startline="124">ActuatorOutputs</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a40c7f951ec11ff07df539a6ad5033ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean AMC::VerifyCmdLength</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr, uint16 usExpectedLen)</argsstring>
        <name>VerifyCmdLength</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>usExpectedLen</declname>
        </param>
        <briefdescription>
<para>Verify Command Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function verifies the command message length.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usExpectedLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected length of the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the message length matches expectations, FALSE if it does not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="423" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="871" bodyend="896"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321afa70cb082224a0042e88ce14d1b5cb25" compoundref="amc__events_8h" startline="285">AMC_MSGLEN_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1ac32b86cf9e1d12a547792853c35f6aa1">CFE_SB_GetTotalMsgLength</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a961adaede507a6f617d52d223a7025a0" compoundref="amc__msg_8h" startline="153">AMC_HkTlm_t::usCmdErrCnt</references>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a4b1313160a575207447eee52e15dafee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::DisplayInputs</definition>
        <argsstring>(void)</argsstring>
        <name>DisplayInputs</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a45552c3a6c043c6d36daaf22acad19e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::ProcessParamPipe</definition>
        <argsstring>()</argsstring>
        <name>ProcessParamPipe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="594" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="726" bodyend="777"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a7ef321e4f2af02404ac65956d3eb5e3b" compoundref="amc__events_8h" startline="254">AMC_MSGID_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ab8c3da42a3e707ff4eac6f319727b623" compoundref="amc__events_8h" startline="239">AMC_RCVMSG_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" compoundref="amc__app_8h" startline="127">HkTlm</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_a_m_c_1a86361cbc911eeac510f2d171a29bc7bd" compoundref="amc__app_8h" startline="102">ParamPipeId</references>
        <references refid="class_a_m_c_1a3e1afb9a170734318e9f8abf8b5e12d2" compoundref="amc__app_8cpp" startline="1134" endline="1173">ProcessUpdatedParam</references>
        <references refid="struct_a_m_c___hk_tlm__t_1a961adaede507a6f617d52d223a7025a0" compoundref="amc__msg_8h" startline="153">AMC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a95827d2de1b1a1fb042d0e403413ed6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitParams</definition>
        <argsstring>(void)</argsstring>
        <name>InitParams</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by InitApp and registers all of this applications parameters with the param library.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>-1 </para></entry><entry thead="no"><para>Failed to register  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="612" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="1098" bodyend="1126"/>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" compoundref="amc__app_8h" startline="118">PwmConfigTblPtr</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a3b3da052b437b73e9ee3aad6077b891f" compoundref="amc__tbldefs_8h" startline="71">AMC_PwmConfigTbl_t::PwmDisarmed</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a9fca267ace4618c293a94baaca210196" compoundref="amc__tbldefs_8h" startline="77">AMC_PwmConfigTbl_t::PwmMax</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a8f9100e7de01eb5bb9ea17841ffb3c8a" compoundref="amc__tbldefs_8h" startline="74">AMC_PwmConfigTbl_t::PwmMin</references>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a3e1afb9a170734318e9f8abf8b5e12d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::ProcessUpdatedParam</definition>
        <argsstring>(PRMLIB_UpdatedParamMsg_t *MsgPtr)</argsstring>
        <name>ProcessUpdatedParam</name>
        <param>
          <type>PRMLIB_UpdatedParamMsg_t *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Process an Update Parameter Message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is event driven by the #PRMLIB_PARAM_UPDATED_MID message. It checks if the updated param is one of its own and updates it if so.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>-1 </para></entry><entry thead="no"><para>Failed to update a parameter  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="631" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="1134" bodyend="1173"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321afbb8e8dced715fde2edccf0d8462c542" compoundref="amc__events_8h" startline="439">AMC_PARAM_UPDATE_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="osapi-os-core_8h_1a48964b6567f9ceda86a51ebc02fb88c5">OS_MutSemGive</references>
        <references refid="osapi-os-core_8h_1a77239ad1acd87f235cdc45142cc0d39f">OS_MutSemTake</references>
        <references refid="class_a_m_c_1ae7d7078c34ce306c643636a35f979742" compoundref="amc__app_8h" startline="136">PwmConfigMutex</references>
        <references refid="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" compoundref="amc__app_8h" startline="118">PwmConfigTblPtr</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a3b3da052b437b73e9ee3aad6077b891f" compoundref="amc__tbldefs_8h" startline="71">AMC_PwmConfigTbl_t::PwmDisarmed</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a9fca267ace4618c293a94baaca210196" compoundref="amc__tbldefs_8h" startline="77">AMC_PwmConfigTbl_t::PwmMax</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a8f9100e7de01eb5bb9ea17841ffb3c8a" compoundref="amc__tbldefs_8h" startline="74">AMC_PwmConfigTbl_t::PwmMin</references>
        <referencedby refid="class_a_m_c_1a45552c3a6c043c6d36daaf22acad19e9" compoundref="amc__app_8cpp" startline="726" endline="777">ProcessParamPipe</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_m_c_1aed30542c1ce746923ce8a43ce7b4872d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::SetMotorOutputs</definition>
        <argsstring>(const uint16 *PWM)</argsstring>
        <name>SetMotorOutputs</name>
        <param>
          <type>const <ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref> *</type>
          <declname>PWM</declname>
        </param>
        <briefdescription>
<para>Set the actual motor outputs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function takes an array of uint16 representing motor speeds for each of the motors in the array, and sets the motor to that specific speed. The range of inputs is configuration specific.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*PWM</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an array of uint16. The array size is defined by AMC_MAX_MOTOR_OUTPUTS. references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="445" column="1"/>
        <referencedby refid="class_a_m_c_1ae9a7f1279402e9fd6e64e07c7ec1f907" compoundref="amc__app_8cpp" startline="975" endline="985">StopMotors</referencedby>
        <referencedby refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" compoundref="amc__app_8cpp" startline="993" endline="1056">UpdateMotors</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1af9289fd35348864e99ba9abf4bfc3ae0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitDevice</definition>
        <argsstring>(void)</argsstring>
        <name>InitDevice</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize device. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is defined in the platform specific package and initializes the device, whatever it is, to allow the application to set motor speeds.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
0 if successful. Returns a negative number if unsuccessful. Meaning of actual return value is platform specific. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="464" column="1"/>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::UpdateMotors</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateMotors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Update motors. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function mixes the yaw, pitch, roll, and throttle actuators and sets each specific motor to result in the commanded attitude change. Exactly to which proportion each motor affects each actuator position is defined in the <ref refid="class_a_m_c_1a86e2fca05f501a64320137350bf8b576" kindref="member">MixerConfigTblHdl</ref> table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="479" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="993" bodyend="1056"/>
        <references refid="struct_a_m_c___current_value_table__t_1aab89a42f0f4e9d936fe9ac9770667306" compoundref="amc__app_8h" startline="78">AMC_CurrentValueTable_t::ActuatorArmed</references>
        <references refid="class_a_m_c_1ae57bef956bc9ddab880bae43d144b09d" compoundref="amc__app_8h" startline="124">ActuatorOutputs</references>
        <references refid="amc__platform__cfg_8h_1a0de4893babf66704984e7aed20165ba2" compoundref="amc__platform__cfg_8h" startline="115">AMC_MAX_MOTOR_OUTPUTS</references>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_a_m_c_1a15eb0d6fe3740f9ceecf882347a67825" compoundref="amc__app_8h" startline="129">CVT</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_multirotor_mixer_1a2938a292396ed53d1032f86f6319d69c" compoundref="_multirotor_mixer_8cpp" startline="86" endline="298">MultirotorMixer::mix</references>
        <references refid="class_a_m_c_1ad48332151beae50e93cef64a70ec624a" compoundref="amc__app_8h" startline="131">MixerObject</references>
        <references refid="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" compoundref="amc__app_8h" startline="118">PwmConfigTblPtr</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a3b3da052b437b73e9ee3aad6077b891f" compoundref="amc__tbldefs_8h" startline="71">AMC_PwmConfigTbl_t::PwmDisarmed</references>
        <references refid="class_a_m_c_1ab13f45a7283c6be5aa40854f769bba52" compoundref="amc__app_8h" startline="134">PwmLimit</references>
        <references refid="pwm__limit_8c_1ac17a305d7d002e629834bd5a427c55ef" compoundref="pwm__limit_8c" startline="66" endline="289">PwmLimit_Calc</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a9fca267ace4618c293a94baaca210196" compoundref="amc__tbldefs_8h" startline="77">AMC_PwmConfigTbl_t::PwmMax</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a8f9100e7de01eb5bb9ea17841ffb3c8a" compoundref="amc__tbldefs_8h" startline="74">AMC_PwmConfigTbl_t::PwmMin</references>
        <references refid="class_a_m_c_1aed30542c1ce746923ce8a43ce7b4872d">SetMotorOutputs</references>
        <referencedby refid="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" compoundref="amc__app_8cpp" startline="658" endline="718">ProcessDataPipe</referencedby>
        <referencedby refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" compoundref="amc__app_8cpp" startline="532" endline="591">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1ae9a7f1279402e9fd6e64e07c7ec1f907" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::StopMotors</definition>
        <argsstring>(void)</argsstring>
        <name>StopMotors</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop motors. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function commands the motors to immediately stop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="491" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="975" bodyend="985"/>
        <references refid="amc__platform__cfg_8h_1a0de4893babf66704984e7aed20165ba2" compoundref="amc__platform__cfg_8h" startline="115">AMC_MAX_MOTOR_OUTPUTS</references>
        <references refid="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" compoundref="amc__app_8h" startline="118">PwmConfigTblPtr</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a3b3da052b437b73e9ee3aad6077b891f" compoundref="amc__tbldefs_8h" startline="71">AMC_PwmConfigTbl_t::PwmDisarmed</references>
        <references refid="class_a_m_c_1aed30542c1ce746923ce8a43ce7b4872d">SetMotorOutputs</references>
        <referencedby refid="class_a_m_c_1a125733d0f92be9ac62cc56dda2795422" compoundref="amc__app_8cpp" startline="521" endline="524">CleanupCallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::InitConfigTbl</definition>
        <argsstring>(void)</argsstring>
        <name>InitConfigTbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="class_a_m_c" kindref="compound">AMC</ref> configuration tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes <ref refid="class_a_m_c" kindref="compound">AMC</ref>&apos;s configuration tables. This includes the PWM and the <ref refid="class_mixer" kindref="compound">Mixer</ref> configuration table.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Register</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Load</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #AMC_AcquireConfigPointers  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="511" column="1" bodyfile="apps/amc/fsw/src/amc_config_utils.cpp" bodystart="51" bodyend="125"/>
        <references refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" compoundref="amc__config__utils_8cpp" startline="281" endline="351">AcquireConfigPointers</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a389e4391f89096f0aaac6d6bd197b010" compoundref="amc__events_8h" startline="364">AMC_MIXER_CFGTBL_LOAD_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321ac37faeaeba58015e1172f4834164df1e" compoundref="amc__events_8h" startline="332">AMC_MIXER_CFGTBL_REG_ERR_EID</references>
        <references refid="amc__platform__cfg_8h_1a266ba58dc09c13250e72b5014f2312c5" compoundref="amc__platform__cfg_8h" startline="105">AMC_MIXER_CONFIG_TABLE_FILENAME</references>
        <references refid="amc__tbldefs_8h_1aa85ac2fe0020f1e602e1044fe5d1a4b3" compoundref="amc__tbldefs_8h" startline="65">AMC_MIXER_CONFIG_TABLENAME</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321af884144d60016b642fc52f6b7489a86b" compoundref="amc__events_8h" startline="348">AMC_PWM_CFGTBL_LOAD_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a280b65df0d4234c772ca4d7952d59f2d" compoundref="amc__events_8h" startline="316">AMC_PWM_CFGTBL_REG_ERR_EID</references>
        <references refid="amc__platform__cfg_8h_1a470610f9b9392ade2698e04f30083e63" compoundref="amc__platform__cfg_8h" startline="103">AMC_PWM_CONFIG_TABLE_FILENAME</references>
        <references refid="amc__tbldefs_8h_1af330800f3ef04928cb3e135048ed83a0" compoundref="amc__tbldefs_8h" startline="59">AMC_PWM_CONFIG_TABLENAME</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50">CFE_TBL_Load</references>
        <references refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462">CFE_TBL_OPT_DEFAULT</references>
        <references refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683">CFE_TBL_Register</references>
        <references refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be">CFE_TBL_SRC_FILE</references>
        <references refid="class_a_m_c_1a86e2fca05f501a64320137350bf8b576" compoundref="amc__app_8h" startline="115">MixerConfigTblHdl</references>
        <references refid="class_a_m_c_1afc12982026e77401b916ad1e8eab2e6d" compoundref="amc__app_8h" startline="112">PwmConfigTblHdl</references>
        <references refid="class_a_m_c_1a7f98950e395eb58d54acfc0e66aa5638" compoundref="amc__config__utils_8cpp" startline="169" endline="274">ValidateMixerCfgTbl</references>
        <references refid="class_a_m_c_1a804062885b915b18f10bee951f9801ed" compoundref="amc__config__utils_8cpp" startline="132" endline="162">ValidatePwmCfgTbl</references>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::AcquireConfigPointers</definition>
        <argsstring>(void)</argsstring>
        <name>AcquireConfigPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Obtain <ref refid="class_a_m_c" kindref="compound">AMC</ref> configuration tables data pointers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function manages the configuration tables and obtains a pointer to their data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="528" column="1" bodyfile="apps/amc/fsw/src/amc_config_utils.cpp" bodystart="281" bodyend="351"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321af5330add37608e02c052658216ffce5c" compoundref="amc__events_8h" startline="223">AMC_MIXER_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a1b8b5be64dfe84208034ecbf44bb8e08" compoundref="amc__events_8h" startline="197">AMC_MIXER_CFGTBL_MANAGE_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a8b59241b4e245a258ee5398cf5fd51b6" compoundref="amc__events_8h" startline="210">AMC_PWM_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321aab9088e4563d19495baa47f9f4538140" compoundref="amc__events_8h" startline="184">AMC_PWM_CFGTBL_MANAGE_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface">CFE_TBL_GetAddress</references>
        <references refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5">CFE_TBL_INFO_UPDATED</references>
        <references refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c">CFE_TBL_Manage</references>
        <references refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a">CFE_TBL_ReleaseAddress</references>
        <references refid="class_a_m_c_1a86e2fca05f501a64320137350bf8b576" compoundref="amc__app_8h" startline="115">MixerConfigTblHdl</references>
        <references refid="class_a_m_c_1a4aba4a0bcaec28a2f2e8f011ce42835d" compoundref="amc__app_8h" startline="121">MixerConfigTblPtr</references>
        <references refid="class_a_m_c_1afc12982026e77401b916ad1e8eab2e6d" compoundref="amc__app_8h" startline="112">PwmConfigTblHdl</references>
        <references refid="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" compoundref="amc__app_8h" startline="118">PwmConfigTblPtr</references>
        <referencedby refid="class_a_m_c_1a21e251bdf13cf01cf80bbae0ef7f69ff" compoundref="amc__app_8cpp" startline="915" endline="967">AppMain</referencedby>
        <referencedby refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" compoundref="amc__config__utils_8cpp" startline="51" endline="125">InitConfigTbl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_a_m_c_1a804062885b915b18f10bee951f9801ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::ValidatePwmCfgTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidatePwmCfgTbl</name>
        <param>
          <type>void *</type>
          <defname>ConfigTblPtr</defname>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_a_m_c" kindref="compound">AMC</ref> PWM configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_a_m_c" kindref="compound">AMC</ref>&apos;s PWM configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="547" column="1" bodyfile="apps/amc/fsw/src/amc_config_utils.cpp" bodystart="132" bodyend="162"/>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a4c3ee162a422bef9883a1819318fb0d9" compoundref="amc__events_8h" startline="101">AMC_PWM_CFGTBL_MAX_LT_MIN_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a4858ef25365914de11bcb45765498ede" compoundref="amc__events_8h" startline="88">AMC_PWM_CFGTBL_MIN_LT_DISARMED_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a3b3da052b437b73e9ee3aad6077b891f" compoundref="amc__tbldefs_8h" startline="71">AMC_PwmConfigTbl_t::PwmDisarmed</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a9fca267ace4618c293a94baaca210196" compoundref="amc__tbldefs_8h" startline="77">AMC_PwmConfigTbl_t::PwmMax</references>
        <references refid="struct_a_m_c___pwm_config_tbl__t_1a8f9100e7de01eb5bb9ea17841ffb3c8a" compoundref="amc__tbldefs_8h" startline="74">AMC_PwmConfigTbl_t::PwmMin</references>
        <referencedby refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" compoundref="amc__config__utils_8cpp" startline="51" endline="125">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a7f98950e395eb58d54acfc0e66aa5638" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::ValidateMixerCfgTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidateMixerCfgTbl</name>
        <param>
          <type>void *</type>
          <defname>ConfigTblPtr</defname>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_a_m_c" kindref="compound">AMC</ref> <ref refid="class_mixer" kindref="compound">Mixer</ref> configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_a_m_c" kindref="compound">AMC</ref>&apos;s <ref refid="class_mixer" kindref="compound">Mixer</ref> configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="565" column="1" bodyfile="apps/amc/fsw/src/amc_config_utils.cpp" bodystart="169" bodyend="274"/>
        <references refid="amc__platform__cfg_8h_1a0de4893babf66704984e7aed20165ba2" compoundref="amc__platform__cfg_8h" startline="115">AMC_MAX_MOTOR_OUTPUTS</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321a8a540939188da6703f578682bc916f40" compoundref="amc__events_8h" startline="389">AMC_MIXER_INVALID_MIXER_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321acbe2c7a96d443a056a3ab775baabccf5" compoundref="amc__events_8h" startline="411">AMC_MIXER_INVLD_ROTOR_CONFIG_ERR_EID</references>
        <references refid="amc__events_8h_1a8968bfe2e9ea7d0da33987e1ccc21321abdb5c46fe9dbee0cd52460b0de3aaeee" compoundref="amc__events_8h" startline="426">AMC_MIXER_TBLVAL_NONZER_DATA_ERR_EID</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="struct_multirotor_mixer___config_table__t_1ab43e3d0b6cd96501d24404d82dc06a86" compoundref="_mixer_tables_8h" startline="76">MultirotorMixer_ConfigTable_t::DeltaOutMax</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_multirotor_mixer___config_table__t_1a1bc4cc060733a92ffa43a78b772a4ec8" compoundref="_mixer_tables_8h" startline="78">MultirotorMixer_ConfigTable_t::Geometry</references>
        <references refid="struct_multirotor_mixer___config_table__t_1ada77e18ff06b9603eab82d6203f4fc83" compoundref="_mixer_tables_8h" startline="75">MultirotorMixer_ConfigTable_t::IdleSpeed</references>
        <references refid="_mixer_tables_8h_1a131d9ca870fb77dace40320a87b147ddacca833478611884f54978cebd5cd002b" compoundref="_mixer_tables_8h" startline="60">MIXER_MAX_GEOMETRY</references>
        <references refid="struct_multirotor_mixer___rotor_config__t_1afa45bbd75e422beafe8b46a6757c0621" compoundref="_mixer_tables_8h" startline="67">MultirotorMixer_RotorConfig_t::OutScale</references>
        <references refid="struct_multirotor_mixer___rotor_config__t_1a3434a3ba5f66c0dacfea646c4c13b27c" compoundref="_mixer_tables_8h" startline="65">MultirotorMixer_RotorConfig_t::PitchScale</references>
        <references refid="struct_multirotor_mixer___config_table__t_1a97ead85bfaf59fc1dcbc1b0ff19033e9" compoundref="_mixer_tables_8h" startline="73">MultirotorMixer_ConfigTable_t::PitchScale</references>
        <references refid="struct_multirotor_mixer___rotor_config__t_1a8c324b27581c541621b32b486211a800" compoundref="_mixer_tables_8h" startline="64">MultirotorMixer_RotorConfig_t::RollScale</references>
        <references refid="struct_multirotor_mixer___config_table__t_1a3495afed3ff7195c502d15930e4d028d" compoundref="_mixer_tables_8h" startline="72">MultirotorMixer_ConfigTable_t::RollScale</references>
        <references refid="struct_multirotor_mixer___config_table__t_1aeee7c78321a002ddaf9673ac83a80913" compoundref="_mixer_tables_8h" startline="79">MultirotorMixer_ConfigTable_t::RotorConfig</references>
        <references refid="struct_multirotor_mixer___config_table__t_1a1deb6612574437c64f1560bb4dbbc20b" compoundref="_mixer_tables_8h" startline="77">MultirotorMixer_ConfigTable_t::RotorCount</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_multirotor_mixer___rotor_config__t_1a8f7c76aeaa34767a1f181839a418e613" compoundref="_mixer_tables_8h" startline="66">MultirotorMixer_RotorConfig_t::YawScale</references>
        <references refid="struct_multirotor_mixer___config_table__t_1a42ef884bddeb54a34c58b79ee2e36728" compoundref="_mixer_tables_8h" startline="74">MultirotorMixer_ConfigTable_t::YawScale</references>
        <referencedby refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" compoundref="amc__config__utils_8cpp" startline="51" endline="125">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1ab0b8f680c0686aa98e1b54a38eee297d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 AMC::ControlCallback</definition>
        <argsstring>(cpuaddr Handle, uint8 ControlGroup, uint8 ControlIndex, float &amp;Control)</argsstring>
        <name>ControlCallback</name>
        <param>
          <type><ref refid="common__types_8h_1abddffd9b6badf27493baed70e95972b4" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">cpuaddr</ref></type>
          <declname>Handle</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
          <declname>ControlGroup</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
          <declname>ControlIndex</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>Control</declname>
        </param>
        <briefdescription>
<para>Return the specified control value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is called by the <ref refid="class_mixer" kindref="compound">Mixer</ref> object and returns the value of the specified control. This specific function only supports ControlGroup 0 and will return an error otherwise.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ControlGroup</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the control group. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ControlIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the control.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>-1 </para></entry><entry thead="no"><para>Invalid input  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="587" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="1064" bodyend="1090"/>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
      </memberdef>
      <memberdef kind="function" id="class_a_m_c_1a125733d0f92be9ac62cc56dda2795422" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AMC::CleanupCallback</definition>
        <argsstring>(void)</argsstring>
        <name>CleanupCallback</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/amc/fsw/src/amc_app.h" line="633" column="1" bodyfile="apps/amc/fsw/src/amc_app.cpp" bodystart="521" bodyend="524"/>
        <references refid="class_a_m_c_1ae9a7f1279402e9fd6e64e07c7ec1f907" compoundref="amc__app_8cpp" startline="975" endline="985">StopMotors</references>
        <referencedby refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" compoundref="amc__app_8cpp" startline="428" endline="513">InitApp</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_a_m_c" kindref="compound">AMC</ref> Application Class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="9">
        <label>AMC_CurrentValueTable_t</label>
        <link refid="struct_a_m_c___current_value_table__t"/>
      </node>
      <node id="10">
        <label>AMC_HkTlm_t</label>
        <link refid="struct_a_m_c___hk_tlm__t"/>
      </node>
      <node id="7">
        <label>AMC_PwmConfigTbl_t</label>
        <link refid="struct_a_m_c___pwm_config_tbl__t"/>
      </node>
      <node id="4">
        <label>MultirotorMixer::SaturationStatus_t</label>
        <link refid="union_multirotor_mixer_1_1_saturation_status__t"/>
      </node>
      <node id="3">
        <label>Mixer</label>
        <link refid="class_mixer"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_Next</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>PwmLimit_Data_t</label>
        <link refid="struct_pwm_limit___data__t"/>
      </node>
      <node id="1">
        <label>AMC</label>
        <link refid="class_a_m_c"/>
        <childnode refid="2" relation="usage">
          <edgelabel>MixerObject</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>PwmConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>MixerConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>PwmLimit</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>CVT</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>HkTlm</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>MultirotorMixer</label>
        <link refid="class_multirotor_mixer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>m_SaturationStatus</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>m_ConfigTablePtr</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>MultirotorMixer_ConfigTable_t</label>
        <link refid="struct_multirotor_mixer___config_table__t"/>
        <childnode refid="6" relation="usage">
          <edgelabel>RotorConfig</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>MultirotorMixer_RotorConfig_t</label>
        <link refid="struct_multirotor_mixer___rotor_config__t"/>
      </node>
    </collaborationgraph>
    <location file="apps/amc/fsw/src/amc_app.h" line="87" column="1" bodyfile="apps/amc/fsw/src/amc_app.h" bodystart="86" bodyend="634"/>
    <listofallmembers>
      <member refid="class_a_m_c_1aec894b1f09dd5909b5ab8cd78e730db0" prot="private" virt="non-virtual"><scope>AMC</scope><name>AcquireConfigPointers</name></member>
      <member refid="class_a_m_c_1ae57bef956bc9ddab880bae43d144b09d" prot="public" virt="non-virtual"><scope>AMC</scope><name>ActuatorOutputs</name></member>
      <member refid="class_a_m_c_1a92d5e498af88ecf170a91d982a0faa3e" prot="public" virt="non-virtual"><scope>AMC</scope><name>AMC</name></member>
      <member refid="class_a_m_c_1a21e251bdf13cf01cf80bbae0ef7f69ff" prot="public" virt="non-virtual"><scope>AMC</scope><name>AppMain</name></member>
      <member refid="class_a_m_c_1a125733d0f92be9ac62cc56dda2795422" prot="public" virt="non-virtual"><scope>AMC</scope><name>CleanupCallback</name></member>
      <member refid="class_a_m_c_1a779370a24c975faa9bdd55583f46ac1a" prot="public" virt="non-virtual"><scope>AMC</scope><name>CmdPipeId</name></member>
      <member refid="class_a_m_c_1ab0b8f680c0686aa98e1b54a38eee297d" prot="public" virt="non-virtual"><scope>AMC</scope><name>ControlCallback</name></member>
      <member refid="class_a_m_c_1a15eb0d6fe3740f9ceecf882347a67825" prot="public" virt="non-virtual"><scope>AMC</scope><name>CVT</name></member>
      <member refid="class_a_m_c_1a61add99244e784fffbc452d4020e79f9" prot="public" virt="non-virtual"><scope>AMC</scope><name>DataPipeId</name></member>
      <member refid="class_a_m_c_1a4b1313160a575207447eee52e15dafee" prot="public" virt="non-virtual"><scope>AMC</scope><name>DisplayInputs</name></member>
      <member refid="class_a_m_c_1a4a3ded8ebdfb8a9fc3792abadaae685c" prot="public" virt="non-virtual"><scope>AMC</scope><name>HkTlm</name></member>
      <member refid="class_a_m_c_1a30ba9286b7fe0a3db49ce51469fa3a63" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitApp</name></member>
      <member refid="class_a_m_c_1a301ee5177e50f1463321ac630a642a98" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitCmdPipe</name></member>
      <member refid="class_a_m_c_1a4751f3a3e2155e17ef2dc20bf296f37a" prot="private" virt="non-virtual"><scope>AMC</scope><name>InitConfigTbl</name></member>
      <member refid="class_a_m_c_1aceb36aea3e5803fc48284e3b7294802b" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitData</name></member>
      <member refid="class_a_m_c_1ace5a7b4bf812bd3039358dc68dfd9f33" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitDataPipe</name></member>
      <member refid="class_a_m_c_1af9289fd35348864e99ba9abf4bfc3ae0" prot="private" virt="non-virtual"><scope>AMC</scope><name>InitDevice</name></member>
      <member refid="class_a_m_c_1a1763673513d970881489a3984d8b22d5" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitEvent</name></member>
      <member refid="class_a_m_c_1a81be40d8b3aeb0cd967fd8f37d337f66" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitParamPipe</name></member>
      <member refid="class_a_m_c_1a95827d2de1b1a1fb042d0e403413ed6a" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitParams</name></member>
      <member refid="class_a_m_c_1acb2a5165400b66749d156186ec65712e" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitPipes</name></member>
      <member refid="class_a_m_c_1a7ab754ea25af75c2b6b09ac5e630e319" prot="public" virt="non-virtual"><scope>AMC</scope><name>InitSchPipe</name></member>
      <member refid="class_a_m_c_1a86e2fca05f501a64320137350bf8b576" prot="public" virt="non-virtual"><scope>AMC</scope><name>MixerConfigTblHdl</name></member>
      <member refid="class_a_m_c_1a4aba4a0bcaec28a2f2e8f011ce42835d" prot="public" virt="non-virtual"><scope>AMC</scope><name>MixerConfigTblPtr</name></member>
      <member refid="class_a_m_c_1ad48332151beae50e93cef64a70ec624a" prot="public" virt="non-virtual"><scope>AMC</scope><name>MixerObject</name></member>
      <member refid="class_a_m_c_1a86361cbc911eeac510f2d171a29bc7bd" prot="public" virt="non-virtual"><scope>AMC</scope><name>ParamPipeId</name></member>
      <member refid="class_a_m_c_1a2003f644d02b2dea5616eea2e07a8891" prot="public" virt="non-virtual"><scope>AMC</scope><name>ProcessAppCmds</name></member>
      <member refid="class_a_m_c_1a937024338caf1e09841554dd2fbe4191" prot="public" virt="non-virtual"><scope>AMC</scope><name>ProcessCmdPipe</name></member>
      <member refid="class_a_m_c_1ae3d9a444ae28f30fd3017e3bca434c07" prot="public" virt="non-virtual"><scope>AMC</scope><name>ProcessDataPipe</name></member>
      <member refid="class_a_m_c_1a45552c3a6c043c6d36daaf22acad19e9" prot="public" virt="non-virtual"><scope>AMC</scope><name>ProcessParamPipe</name></member>
      <member refid="class_a_m_c_1a3e1afb9a170734318e9f8abf8b5e12d2" prot="public" virt="non-virtual"><scope>AMC</scope><name>ProcessUpdatedParam</name></member>
      <member refid="class_a_m_c_1ae7d7078c34ce306c643636a35f979742" prot="public" virt="non-virtual"><scope>AMC</scope><name>PwmConfigMutex</name></member>
      <member refid="class_a_m_c_1afc12982026e77401b916ad1e8eab2e6d" prot="public" virt="non-virtual"><scope>AMC</scope><name>PwmConfigTblHdl</name></member>
      <member refid="class_a_m_c_1a928880f85d5ec1815fc07cfd5b7271ce" prot="public" virt="non-virtual"><scope>AMC</scope><name>PwmConfigTblPtr</name></member>
      <member refid="class_a_m_c_1ab13f45a7283c6be5aa40854f769bba52" prot="public" virt="non-virtual"><scope>AMC</scope><name>PwmLimit</name></member>
      <member refid="class_a_m_c_1a7c2bb27f37770b9d4962fb7ac01edb86" prot="public" virt="non-virtual"><scope>AMC</scope><name>RcvSchPipeMsg</name></member>
      <member refid="class_a_m_c_1a347b9c7c69c9bdb4a033cc96b5aa779b" prot="public" virt="non-virtual"><scope>AMC</scope><name>ReportHousekeeping</name></member>
      <member refid="class_a_m_c_1a9acafc43b69ca8a35aaddc5f2be5071f" prot="public" virt="non-virtual"><scope>AMC</scope><name>SchPipeId</name></member>
      <member refid="class_a_m_c_1ace8c26044f5ae65cc06171a1bfdf762c" prot="public" virt="non-virtual"><scope>AMC</scope><name>SendActuatorOutputs</name></member>
      <member refid="class_a_m_c_1aed30542c1ce746923ce8a43ce7b4872d" prot="private" virt="non-virtual"><scope>AMC</scope><name>SetMotorOutputs</name></member>
      <member refid="class_a_m_c_1ae9a7f1279402e9fd6e64e07c7ec1f907" prot="private" virt="non-virtual"><scope>AMC</scope><name>StopMotors</name></member>
      <member refid="class_a_m_c_1a05a0cfbdea1cf138dffe0e9ce94ba59f" prot="public" virt="non-virtual"><scope>AMC</scope><name>uiRunStatus</name></member>
      <member refid="class_a_m_c_1a1378d44bbac1c9e0b0cc912d0db6de96" prot="private" virt="non-virtual"><scope>AMC</scope><name>UpdateMotors</name></member>
      <member refid="class_a_m_c_1a7f98950e395eb58d54acfc0e66aa5638" prot="public" virt="non-virtual"><scope>AMC</scope><name>ValidateMixerCfgTbl</name></member>
      <member refid="class_a_m_c_1a804062885b915b18f10bee951f9801ed" prot="public" virt="non-virtual"><scope>AMC</scope><name>ValidatePwmCfgTbl</name></member>
      <member refid="class_a_m_c_1a40c7f951ec11ff07df539a6ad5033ffb" prot="public" virt="non-virtual"><scope>AMC</scope><name>VerifyCmdLength</name></member>
      <member refid="class_a_m_c_1a670cfb465a55e4fbf4e246721f39e9fd" prot="public" virt="non-virtual"><scope>AMC</scope><name>~AMC</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
