<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_l_g_c" kind="class" language="C++" prot="public">
    <compoundname>LGC</compoundname>
    <includes refid="lgc__app_8h" local="no">lgc_app.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_l_g_c_1a6ec7f524b54eab87c4f889cee7793b91" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t LGC::SchPipeId</definition>
        <argsstring></argsstring>
        <name>SchPipeId</name>
        <briefdescription>
<para>Scheduling Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="96" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1afa67609bb4081ec05984cf81454b31bc" compoundref="lgc__app_8cpp" startline="69" endline="148">InitPipe</referencedby>
        <referencedby refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" compoundref="lgc__app_8cpp" startline="238" endline="308">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_g_c_1a48313904ab4985e6c29f313530957460" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t LGC::CmdPipeId</definition>
        <argsstring></argsstring>
        <name>CmdPipeId</name>
        <briefdescription>
<para>Command Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="99" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1afa67609bb4081ec05984cf81454b31bc" compoundref="lgc__app_8cpp" startline="69" endline="148">InitPipe</referencedby>
        <referencedby refid="class_l_g_c_1aa12556edd2ab718f0fd4cc69028204c4" compoundref="lgc__app_8cpp" startline="316" endline="360">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_g_c_1aec262ace764f06b59890d3d9110004fa" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 LGC::uiRunStatus</definition>
        <argsstring></argsstring>
        <name>uiRunStatus</name>
        <briefdescription>
<para>Task Run Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="104" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="104" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1a6c6250d2b646acff4a3f4ba68d9c6a86" compoundref="lgc__app_8cpp" startline="469" endline="519">AppMain</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_g_c_1a7b82ff8d9d08c9441b9a38bee125ff2b" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t LGC::ConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>ConfigTblHdl</name>
        <briefdescription>
<para>Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="109" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="109" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1a26bf2a82f8e924b0dc0e41fe8f88a198" compoundref="lgc__config__utils_8cpp" startline="134" endline="176">AcquireConfigPointers</referencedby>
        <referencedby refid="class_l_g_c_1ad77a1b34e32a39ef3d39919e3fc1112c" compoundref="lgc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_g_c_1a874cfba5bd353d5b69a3c318e5e7a519" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_g_c___config_tbl__t" kindref="compound">LGC_ConfigTbl_t</ref> *</type>
        <definition>LGC_ConfigTbl_t* LGC::ConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>ConfigTblPtr</name>
        <briefdescription>
<para>Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="112" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1a26bf2a82f8e924b0dc0e41fe8f88a198" compoundref="lgc__config__utils_8cpp" startline="134" endline="176">AcquireConfigPointers</referencedby>
        <referencedby refid="class_l_g_c_1a7927bcb1b1ae61a8125d194013883a98" compoundref="lgc__app_8cpp" startline="526" endline="538">ExtendGear</referencedby>
        <referencedby refid="class_l_g_c_1acd91901d5d3b978c9e9c5939b140d320" compoundref="lgc__app_8cpp" startline="546" endline="558">RetractGear</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_g_c___hk_tlm__t" kindref="compound">LGC_HkTlm_t</ref></type>
        <definition>LGC_HkTlm_t LGC::HkTlm</definition>
        <argsstring></argsstring>
        <name>HkTlm</name>
        <briefdescription>
<para>Housekeeping Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="115" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="115" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" compoundref="lgc__app_8cpp" startline="566" endline="604">CheckSwitchPosition</referencedby>
        <referencedby refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</referencedby>
        <referencedby refid="class_l_g_c_1af4775a7946ea70f5e32d7765c682bbf9" compoundref="lgc__app_8cpp" startline="156" endline="161">InitData</referencedby>
        <referencedby refid="class_l_g_c_1a764ad0d5ec03bc191c8e482343d7f921" compoundref="lgc__app_8cpp" startline="369" endline="405">ProcessAppCmds</referencedby>
        <referencedby refid="class_l_g_c_1aa12556edd2ab718f0fd4cc69028204c4" compoundref="lgc__app_8cpp" startline="316" endline="360">ProcessCmdPipe</referencedby>
        <referencedby refid="class_l_g_c_1a95cf03964e6cde1ceccaed3661389b52" compoundref="lgc__app_8cpp" startline="412" endline="417">ReportHousekeeping</referencedby>
        <referencedby refid="class_l_g_c_1a10ee9e1ac47c199777230c8e554ebbe2" compoundref="lgc__app_8cpp" startline="425" endline="450">VerifyCmdLength</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_g_c_1a2ff742ebf1bd3d717ac675e88dfe1b81" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_g_c___current_value_table__t" kindref="compound">LGC_CurrentValueTable_t</ref></type>
        <definition>LGC_CurrentValueTable_t LGC::CVT</definition>
        <argsstring></argsstring>
        <name>CVT</name>
        <briefdescription>
<para>Current Value Table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="118" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" compoundref="lgc__app_8cpp" startline="566" endline="604">CheckSwitchPosition</referencedby>
        <referencedby refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" compoundref="lgc__app_8cpp" startline="238" endline="308">RcvSchPipeMsg</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_l_g_c_1adcf56a10c68f713f8f8f37fb4f2aa7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LGC::LGC</definition>
        <argsstring>()</argsstring>
        <name>LGC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="92" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1af0d457f20c3e7f5a70254e7eaa9b9519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LGC::~LGC</definition>
        <argsstring>()</argsstring>
        <name>~LGC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="93" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a6c6250d2b646acff4a3f4ba68d9c6a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::AppMain</definition>
        <argsstring>(void)</argsstring>
        <name>AppMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Landing Gear Control (<ref refid="class_l_g_c" kindref="compound">LGC</ref>) application entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Landing Gear Control Task application entry point. This function performs app initialization, then waits for the cFE ES Startup Sync, then executes the main processing loop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If there is an unrecoverable failure during initialization the main loop is never executed and the application will exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="133" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="469" bodyend="519"/>
        <references refid="class_l_g_c_1a26bf2a82f8e924b0dc0e41fe8f88a198" compoundref="lgc__config__utils_8cpp" startline="134" endline="176">AcquireConfigPointers</references>
        <references refid="cfe__es_8h_1abeabe0f94cccfa5bfcfc2f43796da8d1">CFE_ES_APP_ERROR</references>
        <references refid="cfe__es_8h_1a033dfcc82849cfb9a474a2cece5c9803">CFE_ES_APP_RUN</references>
        <references refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325">CFE_ES_ExitApp</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__es__api_8c_1a426ef8e1796ccebba16c63c8e86fb842">CFE_ES_RegisterApp</references>
        <references refid="cfe__es__api_8c_1ae8598bcba38a594d1c868924999da953">CFE_ES_RunLoop</references>
        <references refid="cfe__es__api_8c_1a7dc343ea775a0e5773ecdf700581d548">CFE_ES_WaitForStartupSync</references>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</references>
        <references refid="lgc__perfids_8h_1a6f1a667a16abe70430db0aa709af4538" compoundref="lgc__perfids_8h" startline="8">LGC_MAIN_TASK_PERF_ID</references>
        <references refid="lgc__platform__cfg_8h_1afbebb5e71b4f45500512a1cbeeea78a4" compoundref="lgc__platform__cfg_8h" startline="49">LGC_SCH_PIPE_PEND_TIME</references>
        <references refid="lgc__platform__cfg_8h_1a400e69e6f97772c65f8b3a644b70c1bc" compoundref="lgc__platform__cfg_8h" startline="110">LGC_STARTUP_TIMEOUT_MSEC</references>
        <references refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" compoundref="lgc__app_8cpp" startline="238" endline="308">RcvSchPipeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_l_g_c_1aec262ace764f06b59890d3d9110004fa" compoundref="lgc__app_8h" startline="104">uiRunStatus</references>
        <referencedby refid="lgc__app_8cpp_1af066decdaad9ad7cc0762899746f1534" compoundref="lgc__app_8cpp" startline="458" endline="461">LGC_AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::InitApp</definition>
        <argsstring>(void)</argsstring>
        <name>InitApp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Landing Gear Control (<ref refid="class_l_g_c" kindref="compound">LGC</ref>) application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Landing Gear Control application initialization routine. This function performs all the required startup steps to initialize (or restore from CDS) <ref refid="class_l_g_c" kindref="compound">LGC</ref> data structures and get the application registered with the cFE services so it can begin to receive command messages and send events.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_ES_RegisterApp</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LGC_InitEvent  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LGC_InitPipe  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LGC_InitData  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LGC_InitConfigTbl  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">OS_TaskInstallDeleteHandler</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="159" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="169" bodyend="230"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <references refid="class_l_g_c_1ad77a1b34e32a39ef3d39919e3fc1112c" compoundref="lgc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</references>
        <references refid="class_l_g_c_1af4775a7946ea70f5e32d7765c682bbf9" compoundref="lgc__app_8cpp" startline="156" endline="161">InitData</references>
        <references refid="class_l_g_c_1a456205f122b941bddadff7154fd77d14">InitDevice</references>
        <references refid="class_l_g_c_1a65f12ce2f70e7629fabcff50a7051b24" compoundref="lgc__app_8cpp" startline="49" endline="61">InitEvent</references>
        <references refid="class_l_g_c_1afa67609bb4081ec05984cf81454b31bc" compoundref="lgc__app_8cpp" startline="69" endline="148">InitPipe</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca8e0af7cdc646a275366592dbcfd03f97" compoundref="lgc__events_8h" startline="293">LGC_DEVICE_INIT_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca25b0efadb1a55f19674ccb6f51d7af05" compoundref="lgc__events_8h" startline="75">LGC_INIT_INF_EID</references>
        <references refid="lgc__app_8h_1a2ee8989d9d3f8eea01184860bbd38216a0c156e215603a958957c392db036104b" compoundref="lgc__app_8h" startline="79">LGC_INITIALIZED</references>
        <references refid="lgc__version_8h_1abcd9d73d40e3dca5f25b6b803c13aa0c" compoundref="lgc__version_8h" startline="53">LGC_MAJOR_VERSION</references>
        <references refid="lgc__version_8h_1a8222836691c922cc88fa17b60610b6fb" compoundref="lgc__version_8h" startline="67">LGC_MINOR_VERSION</references>
        <references refid="lgc__platform__cfg_8h_1a3fc328c0ce660bfe863092b49557bc42" compoundref="lgc__platform__cfg_8h" startline="25">LGC_MISSION_REV</references>
        <references refid="lgc__version_8h_1a39f0e1aba67b24ddf7b2b737597f664c" compoundref="lgc__version_8h" startline="81">LGC_REVISION</references>
        <references refid="struct_l_g_c___hk_tlm__t_1a3468039f06ff54d5cc5789e20cf5c70a" compoundref="lgc__msg_8h" startline="218">LGC_HkTlm_t::State</references>
        <referencedby refid="class_l_g_c_1a6c6250d2b646acff4a3f4ba68d9c6a86" compoundref="lgc__app_8cpp" startline="469" endline="519">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a65f12ce2f70e7629fabcff50a7051b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::InitEvent</definition>
        <argsstring>(void)</argsstring>
        <name>InitEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Event Services and Event tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup cFE Event Services for use by the <ref refid="class_l_g_c" kindref="compound">LGC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__evs_8h_1aff6913e2ab9a37ae699382c482fdb786" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_EVS_Register</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="177" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="49" bodyend="61"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9c74cb368c56aff83d050a4807132460">CFE_EVS_BINARY_FILTER</references>
        <references refid="cfe__evs_8c_1a991c19d964b501bf0908bb60812fda28">CFE_EVS_Register</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <referencedby refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1af4775a7946ea70f5e32d7765c682bbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::InitData</definition>
        <argsstring>(void)</argsstring>
        <name>InitData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize global variables used by <ref refid="class_l_g_c" kindref="compound">LGC</ref> application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to initialize the <ref refid="class_l_g_c" kindref="compound">LGC</ref> application data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="190" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="156" bodyend="161"/>
        <references refid="cfe__sb_8h_1a67765875dfff1d3d6d7cbc4a7ae2f8f0">CFE_SB_InitMsg</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <references refid="lgc__msgids_8h_1a349dbefd72c67414158c6764ff50c3ad" compoundref="lgc__msgids_8h" startline="8">LGC_HK_TLM_MID</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1afa67609bb4081ec05984cf81454b31bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::InitPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_l_g_c" kindref="compound">LGC</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="211" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="69" bodyend="148"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1afc2c2db1a504f544b430f33f28be769b">CFE_SB_Subscribe</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_g_c_1a48313904ab4985e6c29f313530957460" compoundref="lgc__app_8h" startline="99">CmdPipeId</references>
        <references refid="lgc__msgids_8h_1a9ccad05846303a64e00ae587aa53a204" compoundref="lgc__msgids_8h" startline="11">LGC_CMD_MID</references>
        <references refid="lgc__platform__cfg_8h_1adab179bed4e576858d150ee959097b00" compoundref="lgc__platform__cfg_8h" startline="74">LGC_CMD_PIPE_DEPTH</references>
        <references refid="lgc__platform__cfg_8h_1a2897691c90d20429ab96ebd1de468898" compoundref="lgc__platform__cfg_8h" startline="81">LGC_CMD_PIPE_NAME</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca7122844511cdd2ec7d999613c799efdd" compoundref="lgc__events_8h" startline="131">LGC_PIPE_INIT_ERR_EID</references>
        <references refid="lgc__platform__cfg_8h_1a487702f3934eb27da7775cac25350eb8" compoundref="lgc__platform__cfg_8h" startline="32">LGC_SCH_PIPE_DEPTH</references>
        <references refid="lgc__platform__cfg_8h_1afd5df4b5a7570b37d536689493a43737" compoundref="lgc__platform__cfg_8h" startline="39">LGC_SCH_PIPE_NAME</references>
        <references refid="lgc__msgids_8h_1a52195d80bbe9fcbb5286c6a29403e9b0" compoundref="lgc__msgids_8h" startline="9">LGC_SEND_HK_MID</references>
        <references refid="lgc__platform__cfg_8h_1a03cc3388b6bad93b9159c17bdf95237f" compoundref="lgc__platform__cfg_8h" startline="67">LGC_SEND_HK_MID_MAX_MSG_COUNT</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca1e181bb46ed08226ab49ed8859ba77df" compoundref="lgc__events_8h" startline="115">LGC_SUBSCRIBE_ERR_EID</references>
        <references refid="lgc__msgids_8h_1ad07e5e96651480e41b3ce5b2cadc209a" compoundref="lgc__msgids_8h" startline="10">LGC_WAKEUP_MID</references>
        <references refid="lgc__platform__cfg_8h_1a781ca0df02c1a0b48d33d26456b58d35" compoundref="lgc__platform__cfg_8h" startline="58">LGC_WAKEUP_MID_MAX_MSG_COUNT</references>
        <references refid="class_l_g_c_1a6ec7f524b54eab87c4f889cee7793b91" compoundref="lgc__app_8h" startline="96">SchPipeId</references>
        <referencedby refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::RcvSchPipeMsg</definition>
        <argsstring>(int32 iBlocking)</argsstring>
        <name>RcvSchPipeMsg</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>iBlocking</declname>
        </param>
        <briefdescription>
<para>Receive and process messages from the scheduler pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function receives and processes messages for the <ref refid="class_l_g_c" kindref="compound">LGC</ref> application from the SCH pipe. This function will pend for the type defined by iBlocking, allowing it to wait for messages, i.e. wakeup messages from scheduler.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iBlocking</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1acc9e6f66cd026d1c987c4c3de827366f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PEND_FOREVER</ref>, <ref refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_POLL</ref> or millisecond timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_RcvMsg</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="234" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="238" bodyend="308"/>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1a68b8b8ed93cecb670c945388a797e970">CFE_SB_TIME_OUT</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" compoundref="lgc__app_8cpp" startline="566" endline="604">CheckSwitchPosition</references>
        <references refid="class_l_g_c_1a2ff742ebf1bd3d717ac675e88dfe1b81" compoundref="lgc__app_8h" startline="118">CVT</references>
        <references refid="lgc__perfids_8h_1a6f1a667a16abe70430db0aa709af4538" compoundref="lgc__perfids_8h" startline="8">LGC_MAIN_TASK_PERF_ID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca7d0f02cd46b1620685f9ba3680177d65" compoundref="lgc__events_8h" startline="188">LGC_MSGID_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca10ca0a2584b0c966da0c2649de91ea9b" compoundref="lgc__events_8h" startline="173">LGC_RCVMSG_ERR_EID</references>
        <references refid="lgc__msgids_8h_1a52195d80bbe9fcbb5286c6a29403e9b0" compoundref="lgc__msgids_8h" startline="9">LGC_SEND_HK_MID</references>
        <references refid="lgc__msgids_8h_1ad07e5e96651480e41b3ce5b2cadc209a" compoundref="lgc__msgids_8h" startline="10">LGC_WAKEUP_MID</references>
        <references refid="struct_l_g_c___current_value_table__t_1a26649498b68c7c23d3bf2a6071ff795e" compoundref="lgc__app_8h" startline="67">LGC_CurrentValueTable_t::m_ManualControlSetpointMsg</references>
        <references refid="struct_l_g_c___current_value_table__t_1a38e32b1ad45d995ee7acfe5273f34fe8" compoundref="lgc__app_8h" startline="68">LGC_CurrentValueTable_t::m_VehicleStatusMsg</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_l_g_c_1aa12556edd2ab718f0fd4cc69028204c4" compoundref="lgc__app_8cpp" startline="316" endline="360">ProcessCmdPipe</references>
        <references refid="class_l_g_c_1a95cf03964e6cde1ceccaed3661389b52" compoundref="lgc__app_8cpp" startline="412" endline="417">ReportHousekeeping</references>
        <references refid="class_l_g_c_1a6ec7f524b54eab87c4f889cee7793b91" compoundref="lgc__app_8h" startline="96">SchPipeId</references>
        <referencedby refid="class_l_g_c_1a6c6250d2b646acff4a3f4ba68d9c6a86" compoundref="lgc__app_8cpp" startline="469" endline="519">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1aa12556edd2ab718f0fd4cc69028204c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::ProcessCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Landing Gear Control Task incoming command processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming commands subscribed by <ref refid="class_l_g_c" kindref="compound">LGC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="247" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="316" bodyend="360"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_g_c_1a48313904ab4985e6c29f313530957460" compoundref="lgc__app_8h" startline="99">CmdPipeId</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <references refid="lgc__msgids_8h_1a9ccad05846303a64e00ae587aa53a204" compoundref="lgc__msgids_8h" startline="11">LGC_CMD_MID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca7d0f02cd46b1620685f9ba3680177d65" compoundref="lgc__events_8h" startline="188">LGC_MSGID_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca10ca0a2584b0c966da0c2649de91ea9b" compoundref="lgc__events_8h" startline="173">LGC_RCVMSG_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_l_g_c_1a764ad0d5ec03bc191c8e482343d7f921" compoundref="lgc__app_8cpp" startline="369" endline="405">ProcessAppCmds</references>
        <references refid="struct_l_g_c___hk_tlm__t_1a8547d8339b0c0e538d9de1f493bf4803" compoundref="lgc__msg_8h" startline="216">LGC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" compoundref="lgc__app_8cpp" startline="238" endline="308">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a764ad0d5ec03bc191c8e482343d7f921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::ProcessAppCmds</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr)</argsstring>
        <name>ProcessAppCmds</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Landing Gear Control Task application commands. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes command messages specific to the <ref refid="class_l_g_c" kindref="compound">LGC</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="263" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="369" bodyend="405"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca460f030ce63e4a20c1356e5b49ebe641" compoundref="lgc__events_8h" startline="202">LGC_CC_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca8fb65b102bc1411acbd6e78cab1014d5" compoundref="lgc__events_8h" startline="98">LGC_CMD_NOOP_EID</references>
        <references refid="lgc__version_8h_1abcd9d73d40e3dca5f25b6b803c13aa0c" compoundref="lgc__version_8h" startline="53">LGC_MAJOR_VERSION</references>
        <references refid="lgc__version_8h_1a8222836691c922cc88fa17b60610b6fb" compoundref="lgc__version_8h" startline="67">LGC_MINOR_VERSION</references>
        <references refid="lgc__platform__cfg_8h_1a3fc328c0ce660bfe863092b49557bc42" compoundref="lgc__platform__cfg_8h" startline="25">LGC_MISSION_REV</references>
        <references refid="lgc__msg_8h_1a613166095739240771e6d7433680950e" compoundref="lgc__msg_8h" startline="89">LGC_NOOP_CC</references>
        <references refid="lgc__msg_8h_1aaa3b9b32425828cf1694e6a95afdf23d" compoundref="lgc__msg_8h" startline="122">LGC_RESET_CC</references>
        <references refid="lgc__version_8h_1a39f0e1aba67b24ddf7b2b737597f664c" compoundref="lgc__version_8h" startline="81">LGC_REVISION</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="struct_l_g_c___hk_tlm__t_1a2a730ae188acedbb85338f3ba2138fdc" compoundref="lgc__msg_8h" startline="212">LGC_HkTlm_t::usCmdCnt</references>
        <references refid="struct_l_g_c___hk_tlm__t_1a8547d8339b0c0e538d9de1f493bf4803" compoundref="lgc__msg_8h" startline="216">LGC_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_l_g_c_1aa12556edd2ab718f0fd4cc69028204c4" compoundref="lgc__app_8cpp" startline="316" endline="360">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a95cf03964e6cde1ceccaed3661389b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::ReportHousekeeping</definition>
        <argsstring>(void)</argsstring>
        <name>ReportHousekeeping</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_l_g_c" kindref="compound">LGC</ref> housekeeping message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the housekeeping message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="275" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="412" bodyend="417"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <referencedby refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" compoundref="lgc__app_8cpp" startline="238" endline="308">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a10ee9e1ac47c199777230c8e554ebbe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1ac3ecf6d00ebd3dd79ea00efdc71d9c33" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">boolean</ref></type>
        <definition>boolean LGC::VerifyCmdLength</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr, uint16 usExpectedLen)</argsstring>
        <name>VerifyCmdLength</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>usExpectedLen</declname>
        </param>
        <briefdescription>
<para>Verify Command Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function verifies the command message length.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usExpectedLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected length of the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the message length matches expectations, FALSE if it does not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="294" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="425" bodyend="450"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1ac32b86cf9e1d12a547792853c35f6aa1">CFE_SB_GetTotalMsgLength</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596cae83abeb158bba90167eb37683993b6ac" compoundref="lgc__events_8h" startline="219">LGC_MSGLEN_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_l_g_c___hk_tlm__t_1a8547d8339b0c0e538d9de1f493bf4803" compoundref="lgc__msg_8h" startline="216">LGC_HkTlm_t::usCmdErrCnt</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_l_g_c_1a2f5935b09907de5e9ca992e461e517e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::SetMotorOutputs</definition>
        <argsstring>(const uint16 *PWM)</argsstring>
        <name>SetMotorOutputs</name>
        <param>
          <type>const <ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref> *</type>
          <declname>PWM</declname>
        </param>
        <briefdescription>
<para>Set the actual motor outputs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function takes an array of uint16 representing motor speeds for each of the motors in the array, and sets the motor to that specific speed. The range of inputs is configuration specific.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">*PWM</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an array of uint16. The array size is defined by AMC_MAX_MOTOR_OUTPUTS. references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="315" column="1"/>
        <referencedby refid="class_l_g_c_1a7927bcb1b1ae61a8125d194013883a98" compoundref="lgc__app_8cpp" startline="526" endline="538">ExtendGear</referencedby>
        <referencedby refid="class_l_g_c_1acd91901d5d3b978c9e9c5939b140d320" compoundref="lgc__app_8cpp" startline="546" endline="558">RetractGear</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a456205f122b941bddadff7154fd77d14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::InitDevice</definition>
        <argsstring>(void)</argsstring>
        <name>InitDevice</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize device. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function is defined in the platform specific package and initializes the device, whatever it is, to allow the application to set motor speeds.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
0 if successful. Returns a negative number if unsuccessful. Meaning of actual return value is platform specific. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="334" column="1"/>
        <referencedby refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::CheckSwitchPosition</definition>
        <argsstring>(void)</argsstring>
        <name>CheckSwitchPosition</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Decode the landing gear switch position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function decodes the switch position to extend or retract the landing gear.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="347" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="566" bodyend="604"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="class_l_g_c_1a2ff742ebf1bd3d717ac675e88dfe1b81" compoundref="lgc__app_8h" startline="118">CVT</references>
        <references refid="class_l_g_c_1a7927bcb1b1ae61a8125d194013883a98" compoundref="lgc__app_8cpp" startline="526" endline="538">ExtendGear</references>
        <references refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" compoundref="lgc__app_8h" startline="115">HkTlm</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca725e8928b3bd46532bdceca86611c44b" compoundref="lgc__events_8h" startline="315">LGC_EXTEND_INF_EID</references>
        <references refid="lgc__app_8h_1a2ee8989d9d3f8eea01184860bbd38216acf1698ad079d758d7fed78eb4df44d9d" compoundref="lgc__app_8h" startline="83">LGC_EXTENDED</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca554ac58e6af662c8be50cd630e724243" compoundref="lgc__events_8h" startline="304">LGC_RETRACT_INF_EID</references>
        <references refid="lgc__app_8h_1a2ee8989d9d3f8eea01184860bbd38216a086bdf5306bcf830ab4eef4b69511bd4" compoundref="lgc__app_8h" startline="81">LGC_RETRACTED</references>
        <references refid="struct_l_g_c___current_value_table__t_1a26649498b68c7c23d3bf2a6071ff795e" compoundref="lgc__app_8h" startline="67">LGC_CurrentValueTable_t::m_ManualControlSetpointMsg</references>
        <references refid="class_l_g_c_1acd91901d5d3b978c9e9c5939b140d320" compoundref="lgc__app_8cpp" startline="546" endline="558">RetractGear</references>
        <references refid="struct_l_g_c___hk_tlm__t_1a3468039f06ff54d5cc5789e20cf5c70a" compoundref="lgc__msg_8h" startline="218">LGC_HkTlm_t::State</references>
        <referencedby refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" compoundref="lgc__app_8cpp" startline="238" endline="308">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a7927bcb1b1ae61a8125d194013883a98" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::ExtendGear</definition>
        <argsstring>(void)</argsstring>
        <name>ExtendGear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Extend the landing gear. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function extends (lowers) the landing gear.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="359" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="526" bodyend="538"/>
        <references refid="class_l_g_c_1a874cfba5bd353d5b69a3c318e5e7a519" compoundref="lgc__app_8h" startline="112">ConfigTblPtr</references>
        <references refid="lgc__platform__cfg_8h_1adcacf5f5955e7768752cf29de3780735" compoundref="lgc__platform__cfg_8h" startline="118">LGC_MAX_GEAR_OUTPUTS</references>
        <references refid="struct_l_g_c___config_tbl__t_1a30fb2d26ca17bef3e99668969b36f093" compoundref="lgc__tbldefs_8h" startline="69">LGC_ConfigTbl_t::PwmMin</references>
        <references refid="class_l_g_c_1a2f5935b09907de5e9ca992e461e517e3">SetMotorOutputs</references>
        <referencedby refid="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" compoundref="lgc__app_8cpp" startline="566" endline="604">CheckSwitchPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1acd91901d5d3b978c9e9c5939b140d320" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LGC::RetractGear</definition>
        <argsstring>(void)</argsstring>
        <name>RetractGear</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Retract the landing gear. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function retracts (raises) the landing gear.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="371" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.cpp" bodystart="546" bodyend="558"/>
        <references refid="class_l_g_c_1a874cfba5bd353d5b69a3c318e5e7a519" compoundref="lgc__app_8h" startline="112">ConfigTblPtr</references>
        <references refid="lgc__platform__cfg_8h_1adcacf5f5955e7768752cf29de3780735" compoundref="lgc__platform__cfg_8h" startline="118">LGC_MAX_GEAR_OUTPUTS</references>
        <references refid="struct_l_g_c___config_tbl__t_1a398dedd528d0eeebbbe457533f7d9f35" compoundref="lgc__tbldefs_8h" startline="72">LGC_ConfigTbl_t::PwmMax</references>
        <references refid="class_l_g_c_1a2f5935b09907de5e9ca992e461e517e3">SetMotorOutputs</references>
        <referencedby refid="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" compoundref="lgc__app_8cpp" startline="566" endline="604">CheckSwitchPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1ad77a1b34e32a39ef3d39919e3fc1112c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::InitConfigTbl</definition>
        <argsstring>(void)</argsstring>
        <name>InitConfigTbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="class_l_g_c" kindref="compound">LGC</ref> configuration tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes <ref refid="class_l_g_c" kindref="compound">LGC</ref>&apos;s configuration tables. This includes &lt;TODO&gt;.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Register</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Load</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LGC_AcquireConfigPointers  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="391" column="1" bodyfile="apps/lgc/fsw/src/lgc_config_utils.cpp" bodystart="51" bodyend="89"/>
        <references refid="class_l_g_c_1a26bf2a82f8e924b0dc0e41fe8f88a198" compoundref="lgc__config__utils_8cpp" startline="134" endline="176">AcquireConfigPointers</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50">CFE_TBL_Load</references>
        <references refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462">CFE_TBL_OPT_DEFAULT</references>
        <references refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683">CFE_TBL_Register</references>
        <references refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be">CFE_TBL_SRC_FILE</references>
        <references refid="class_l_g_c_1a7b82ff8d9d08c9441b9a38bee125ff2b" compoundref="lgc__app_8h" startline="109">ConfigTblHdl</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596cac5b2eaa440ade8c1e7feb85d276b76c9" compoundref="lgc__events_8h" startline="251">LGC_CFGTBL_LOAD_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca032a66d69c751c09c000905565125e11" compoundref="lgc__events_8h" startline="235">LGC_CFGTBL_REG_ERR_EID</references>
        <references refid="lgc__platform__cfg_8h_1a60e875e6b77fd30c08be8c753adf7c3b" compoundref="lgc__platform__cfg_8h" startline="103">LGC_CONFIG_TABLE_FILENAME</references>
        <references refid="lgc__tbldefs_8h_1abd5f9cbf30980974a71c9aae66e2f238" compoundref="lgc__tbldefs_8h" startline="59">LGC_CONFIG_TABLENAME</references>
        <references refid="class_l_g_c_1a5c508f70253119fe729539d5c68b68ac" compoundref="lgc__config__utils_8cpp" startline="97" endline="126">ValidateConfigTbl</references>
        <referencedby refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" compoundref="lgc__app_8cpp" startline="169" endline="230">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_g_c_1a26bf2a82f8e924b0dc0e41fe8f88a198" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::AcquireConfigPointers</definition>
        <argsstring>(void)</argsstring>
        <name>AcquireConfigPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Obtain <ref refid="class_l_g_c" kindref="compound">LGC</ref> configuration tables data pointers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function manages the configuration tables and obtains a pointer to their data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="408" column="1" bodyfile="apps/lgc/fsw/src/lgc_config_utils.cpp" bodystart="134" bodyend="176"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface">CFE_TBL_GetAddress</references>
        <references refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5">CFE_TBL_INFO_UPDATED</references>
        <references refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c">CFE_TBL_Manage</references>
        <references refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a">CFE_TBL_ReleaseAddress</references>
        <references refid="class_l_g_c_1a7b82ff8d9d08c9441b9a38bee125ff2b" compoundref="lgc__app_8h" startline="109">ConfigTblHdl</references>
        <references refid="class_l_g_c_1a874cfba5bd353d5b69a3c318e5e7a519" compoundref="lgc__app_8h" startline="112">ConfigTblPtr</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca128f0a63ab7e4d44092beb78ca49dcca" compoundref="lgc__events_8h" startline="157">LGC_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596ca27fc613c4a9eb653fd90b30734b4d305" compoundref="lgc__events_8h" startline="144">LGC_CFGTBL_MANAGE_ERR_EID</references>
        <referencedby refid="class_l_g_c_1a6c6250d2b646acff4a3f4ba68d9c6a86" compoundref="lgc__app_8cpp" startline="469" endline="519">AppMain</referencedby>
        <referencedby refid="class_l_g_c_1ad77a1b34e32a39ef3d39919e3fc1112c" compoundref="lgc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_l_g_c_1a5c508f70253119fe729539d5c68b68ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LGC::ValidateConfigTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidateConfigTbl</name>
        <param>
          <type>void *</type>
          <defname>ConfigTblPtr</defname>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_l_g_c" kindref="compound">LGC</ref> configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_l_g_c" kindref="compound">LGC</ref>&apos;s configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/lgc/fsw/src/lgc_app.h" line="427" column="1" bodyfile="apps/lgc/fsw/src/lgc_config_utils.cpp" bodystart="97" bodyend="126"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596caefefc9489b7fae535800752f132cb6c5" compoundref="lgc__events_8h" startline="277">LGC_PWM_CFGTBL_MAX_LT_MIN_ERR_EID</references>
        <references refid="lgc__events_8h_1a2768c7e57f9717562a31953aadff596cacb4a82170185d2c77c9233dc8247cdc2" compoundref="lgc__events_8h" startline="264">LGC_PWM_CFGTBL_MIN_LT_DISARMED_ERR_EID</references>
        <references refid="struct_l_g_c___config_tbl__t_1ae1f566a8d48733f99040b0b3b6586e56" compoundref="lgc__tbldefs_8h" startline="66">LGC_ConfigTbl_t::PwmDisarmed</references>
        <references refid="struct_l_g_c___config_tbl__t_1a398dedd528d0eeebbbe457533f7d9f35" compoundref="lgc__tbldefs_8h" startline="72">LGC_ConfigTbl_t::PwmMax</references>
        <references refid="struct_l_g_c___config_tbl__t_1a30fb2d26ca17bef3e99668969b36f093" compoundref="lgc__tbldefs_8h" startline="69">LGC_ConfigTbl_t::PwmMin</references>
        <referencedby refid="class_l_g_c_1ad77a1b34e32a39ef3d39919e3fc1112c" compoundref="lgc__config__utils_8cpp" startline="51" endline="89">InitConfigTbl</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_l_g_c" kindref="compound">LGC</ref> Application Class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4">
        <label>LGC_CurrentValueTable_t</label>
        <link refid="struct_l_g_c___current_value_table__t"/>
      </node>
      <node id="1">
        <label>LGC</label>
        <link refid="class_l_g_c"/>
        <childnode refid="2" relation="usage">
          <edgelabel>HkTlm</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>ConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>CVT</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>LGC_HkTlm_t</label>
        <link refid="struct_l_g_c___hk_tlm__t"/>
      </node>
      <node id="3">
        <label>LGC_ConfigTbl_t</label>
        <link refid="struct_l_g_c___config_tbl__t"/>
      </node>
    </collaborationgraph>
    <location file="apps/lgc/fsw/src/lgc_app.h" line="90" column="1" bodyfile="apps/lgc/fsw/src/lgc_app.h" bodystart="89" bodyend="428"/>
    <listofallmembers>
      <member refid="class_l_g_c_1a26bf2a82f8e924b0dc0e41fe8f88a198" prot="private" virt="non-virtual"><scope>LGC</scope><name>AcquireConfigPointers</name></member>
      <member refid="class_l_g_c_1a6c6250d2b646acff4a3f4ba68d9c6a86" prot="public" virt="non-virtual"><scope>LGC</scope><name>AppMain</name></member>
      <member refid="class_l_g_c_1abd6fd6a89f682522106c86ceabdb3611" prot="private" virt="non-virtual"><scope>LGC</scope><name>CheckSwitchPosition</name></member>
      <member refid="class_l_g_c_1a48313904ab4985e6c29f313530957460" prot="public" virt="non-virtual"><scope>LGC</scope><name>CmdPipeId</name></member>
      <member refid="class_l_g_c_1a7b82ff8d9d08c9441b9a38bee125ff2b" prot="public" virt="non-virtual"><scope>LGC</scope><name>ConfigTblHdl</name></member>
      <member refid="class_l_g_c_1a874cfba5bd353d5b69a3c318e5e7a519" prot="public" virt="non-virtual"><scope>LGC</scope><name>ConfigTblPtr</name></member>
      <member refid="class_l_g_c_1a2ff742ebf1bd3d717ac675e88dfe1b81" prot="public" virt="non-virtual"><scope>LGC</scope><name>CVT</name></member>
      <member refid="class_l_g_c_1a7927bcb1b1ae61a8125d194013883a98" prot="private" virt="non-virtual"><scope>LGC</scope><name>ExtendGear</name></member>
      <member refid="class_l_g_c_1af48553cad79179e0b3ddcda7a8bab3ae" prot="public" virt="non-virtual"><scope>LGC</scope><name>HkTlm</name></member>
      <member refid="class_l_g_c_1af19879c5ec449d27dab37941364aeae8" prot="public" virt="non-virtual"><scope>LGC</scope><name>InitApp</name></member>
      <member refid="class_l_g_c_1ad77a1b34e32a39ef3d39919e3fc1112c" prot="private" virt="non-virtual"><scope>LGC</scope><name>InitConfigTbl</name></member>
      <member refid="class_l_g_c_1af4775a7946ea70f5e32d7765c682bbf9" prot="public" virt="non-virtual"><scope>LGC</scope><name>InitData</name></member>
      <member refid="class_l_g_c_1a456205f122b941bddadff7154fd77d14" prot="private" virt="non-virtual"><scope>LGC</scope><name>InitDevice</name></member>
      <member refid="class_l_g_c_1a65f12ce2f70e7629fabcff50a7051b24" prot="public" virt="non-virtual"><scope>LGC</scope><name>InitEvent</name></member>
      <member refid="class_l_g_c_1afa67609bb4081ec05984cf81454b31bc" prot="public" virt="non-virtual"><scope>LGC</scope><name>InitPipe</name></member>
      <member refid="class_l_g_c_1adcf56a10c68f713f8f8f37fb4f2aa7b8" prot="public" virt="non-virtual"><scope>LGC</scope><name>LGC</name></member>
      <member refid="class_l_g_c_1a764ad0d5ec03bc191c8e482343d7f921" prot="public" virt="non-virtual"><scope>LGC</scope><name>ProcessAppCmds</name></member>
      <member refid="class_l_g_c_1aa12556edd2ab718f0fd4cc69028204c4" prot="public" virt="non-virtual"><scope>LGC</scope><name>ProcessCmdPipe</name></member>
      <member refid="class_l_g_c_1af5ff507bde184b6572dc25e8dad73695" prot="public" virt="non-virtual"><scope>LGC</scope><name>RcvSchPipeMsg</name></member>
      <member refid="class_l_g_c_1a95cf03964e6cde1ceccaed3661389b52" prot="public" virt="non-virtual"><scope>LGC</scope><name>ReportHousekeeping</name></member>
      <member refid="class_l_g_c_1acd91901d5d3b978c9e9c5939b140d320" prot="private" virt="non-virtual"><scope>LGC</scope><name>RetractGear</name></member>
      <member refid="class_l_g_c_1a6ec7f524b54eab87c4f889cee7793b91" prot="public" virt="non-virtual"><scope>LGC</scope><name>SchPipeId</name></member>
      <member refid="class_l_g_c_1a2f5935b09907de5e9ca992e461e517e3" prot="private" virt="non-virtual"><scope>LGC</scope><name>SetMotorOutputs</name></member>
      <member refid="class_l_g_c_1aec262ace764f06b59890d3d9110004fa" prot="public" virt="non-virtual"><scope>LGC</scope><name>uiRunStatus</name></member>
      <member refid="class_l_g_c_1a5c508f70253119fe729539d5c68b68ac" prot="public" virt="non-virtual"><scope>LGC</scope><name>ValidateConfigTbl</name></member>
      <member refid="class_l_g_c_1a10ee9e1ac47c199777230c8e554ebbe2" prot="public" virt="non-virtual"><scope>LGC</scope><name>VerifyCmdLength</name></member>
      <member refid="class_l_g_c_1af0d457f20c3e7f5a70254e7eaa9b9519" prot="public" virt="non-virtual"><scope>LGC</scope><name>~LGC</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
