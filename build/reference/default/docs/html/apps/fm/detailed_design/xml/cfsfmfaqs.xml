<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cfsfmfaqs" kind="page">
    <compoundname>cfsfmfaqs</compoundname>
    <title>CFS File Manager Frequently Asked Questions</title>
    <detaileddescription>
<para><bold> (Q) What is the basic flow of the FM application? </bold> <linebreak/>
 <linebreak/>
 <emphasis> The FM application uses the typical CFS application format. At startup, FM performs an initialization sequence and then enters an infinite loop waiting for commands received via the cFE Software Bus. A not so typical feature is the FM child task which is used to process FM commands that might take a very long time to execute. </emphasis></para><para><bold> (Q) In general, what is done during FM initialization? </bold> <linebreak/>
 <linebreak/>
 <emphasis> During initialization, FM performs the common cFE initialization (register for cFE services, create command pipe, subscribe to commands, etc) and then loads the File System Free Space table and creates the FM child task. Errors encountered during the initialization sequence will generally result in the termination of the FM application. </emphasis></para><para><bold> (Q) Why does FM have a child task? </bold> <linebreak/>
 <linebreak/>
 <emphasis> FM commands that process files which may be very large and commands that process directories which may have a very large number of entries can take several seconds to execute. This creates two potential issues: the length of time that FM would be unresponsive to new commands and the length of time that other lower priority tasks would be held off from execution. </emphasis> <linebreak/>
 <linebreak/>
 <emphasis> Thus, creating a lower priority child task to process &quot;slow&quot; commands allows FM to immediately be ready to receive the next command. And inserting task delays into the child task command process loops provides other lower priority tasks with execution opportunities. Note that inserting delays into the main FM task would have lengthened the time that FM was unavailable for new commands. </emphasis></para><para><bold> (Q) What happens if FM is unable to load the default File System Free Space table during startup initialization? </bold> <linebreak/>
 <linebreak/>
 <emphasis> During initialization, FM must succeed in registering the File System Free Space table with cFE Table Services or the application will terminate. However, it is OK if FM is unable to load the default table data file, although the /FM_GetFreeSpace command will fail until a valid table data file is loaded. </emphasis></para><para><bold> (Q) Is there a limit to the number of files that can be open at one time? </bold> <linebreak/>
 <linebreak/>
 <emphasis> There are two levels of limit to the number of open files. The first limit is defined by the CFE-OSAL configuration element #OS_MAX_NUM_OPEN_FILES and must be less than or equal to the second limit which is a value defined in a manner specific to the selected operating system. Note also that certain directory access functions (reading directory entries, etc) require opening the directory and may affect the count of available open files. </emphasis></para><para>Prev: <ref refid="cfsfmcons" kindref="compound">CFS File Manager Operational Constraints</ref> </para>    </detaileddescription>
  </compounddef>
</doxygen>
