<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_vector2_f" kind="class" language="C++" prot="public">
    <compoundname>math::Vector2F</compoundname>
    <includes refid="_vector2_f_8hpp" local="no">Vector2F.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector2_f_1a8aee0a3fc53eb7eabc832dafbcd54ada" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int math::Vector2F::SIZE</definition>
        <argsstring></argsstring>
        <name>SIZE</name>
        <initializer>= 2</initializer>
        <briefdescription>
<para>Size of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="15" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" bodystart="15" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector2_f_1ad046c785616a533094134eda04f6ac18" compoundref="_vector2_f_8cpp" startline="24" endline="32">operator[]</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector2F::data[SIZE]</definition>
        <argsstring>[SIZE]</argsstring>
        <name>data</name>
        <briefdescription>
<para>Data of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="18" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" bodystart="18" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector2_f_1ad1cc48175067ed3483dc72e6de292c0f" compoundref="_vector2_f_8cpp" startline="163" endline="173">Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1ac9036da606c473697f46dce9b84dc672" compoundref="_vector2_f_8cpp" startline="151" endline="159">EMult</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a14f5eb348c4af0d876e7977020035d67" compoundref="_vector2_f_8cpp" startline="46" endline="49">Length</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1ad5077535dc0ec3337070711c43489b45" compoundref="_vector2_f_8cpp" startline="177" endline="186">Normalized</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a25ad98f062ab2dc101ffea256774806e" compoundref="_vector2_f_8cpp" startline="89" endline="95">operator*</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a92dee3e323d3d0ed385589cf61301575" compoundref="_vector2_f_8cpp" startline="69" endline="75">operator+</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1ac20e35d55ab3fb9b64668dfeb1f296e6" compoundref="_vector2_f_8cpp" startline="79" endline="85">operator-</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a4145e462cb15474f0d5fa128752ce08d" compoundref="_vector2_f_8cpp" startline="108" endline="114">operator/</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1ad046c785616a533094134eda04f6ac18" compoundref="_vector2_f_8cpp" startline="24" endline="32">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a46e9667e9ace96886993a7071ebf97c9" compoundref="_vector2_f_8cpp" startline="58" endline="66">pow</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a83235d89621bd122762516e54b72d809" compoundref="_vector2_f_8cpp" startline="188" endline="197">Transpose</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a9a4f991a1b6550df5b1365e3e26132fe" compoundref="_vector2_f_8cpp" startline="52" endline="56">Zero</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmath_1_1_vector2_f_1a53ec5fe520524652a031b5ddf8689b18" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector2F::nan</definition>
        <argsstring></argsstring>
        <name>nan</name>
        <briefdescription>
<para>NaN data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="21" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" bodystart="21" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector2_f_1ad046c785616a533094134eda04f6ac18" compoundref="_vector2_f_8cpp" startline="24" endline="32">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1a828042643f36122f27667da36711cb43" compoundref="_vector2_f_8cpp" startline="7" endline="11">Vector2F</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector2F::Vector2F</definition>
        <argsstring>()</argsstring>
        <name>Vector2F</name>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="34" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a828042643f36122f27667da36711cb43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector2F::Vector2F</definition>
        <argsstring>(float X, float Y)</argsstring>
        <name>Vector2F</name>
        <param>
          <type>float</type>
          <declname>X</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Y</declname>
        </param>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="49" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="7" bodyend="11"/>
        <references refid="classmath_1_1_vector2_f_1a53ec5fe520524652a031b5ddf8689b18" compoundref="_vector2_f_8hpp" startline="21">nan</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a851cbfb29f743d1b19ae53fba98995f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector2F::~Vector2F</definition>
        <argsstring>()</argsstring>
        <name>~Vector2F</name>
        <briefdescription>
<para>Vector Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="61" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1ad046c785616a533094134eda04f6ac18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; Vector2F::operator[]</definition>
        <argsstring>(uint32 i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="79" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="24" bodyend="32"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <references refid="classmath_1_1_vector2_f_1a53ec5fe520524652a031b5ddf8689b18" compoundref="_vector2_f_8hpp" startline="21">nan</references>
        <references refid="classmath_1_1_vector2_f_1a8aee0a3fc53eb7eabc832dafbcd54ada" compoundref="_vector2_f_8hpp" startline="15">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1ac0619e3b99b9c057358c1c73c36671e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector2F::operator[]</definition>
        <argsstring>(uint32 i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="97" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="35" bodyend="43"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <references refid="classmath_1_1_vector2_f_1a8aee0a3fc53eb7eabc832dafbcd54ada" compoundref="_vector2_f_8hpp" startline="15">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a14f5eb348c4af0d876e7977020035d67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector2F::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vector Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the length of all the values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
length </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="115" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="46" bodyend="49"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <referencedby refid="classmath_1_1_vector2_f_1ad5077535dc0ec3337070711c43489b45" compoundref="_vector2_f_8cpp" startline="177" endline="186">Normalized</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a9a4f991a1b6550df5b1365e3e26132fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector2F::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Zero Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function zeroes out all values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="127" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="52" bodyend="56"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <referencedby refid="classmath_1_1_matrix2_f10_1a2bd14011a617a4cccc312d715bbdca25" compoundref="_matrix2_f10_8cpp" startline="107" endline="121">math::Matrix2F10::operator*</referencedby>
        <referencedby refid="class_stats2_f_1af8f1c67f42ed2c0d418c54b19ab10171" compoundref="_stats2_f_8hpp" startline="58" endline="63">Stats2F::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a46e9667e9ace96886993a7071ebf97c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::pow</definition>
        <argsstring>(const float scalar) const </argsstring>
        <name>pow</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Vector Power. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function raises the vector to the passed power.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the power  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="145" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="58" bodyend="66"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <referencedby refid="class_stats2_f_1ad64c64e8fabbc0efbac30d7328216d85" compoundref="_stats2_f_8hpp" startline="130" endline="133">Stats2F::getStdDev</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a92dee3e323d3d0ed385589cf61301575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::operator+</definition>
        <argsstring>(const Vector2F &amp;vecIn)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" kindref="member">Vector2F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="163" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="69" bodyend="75"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1ac20e35d55ab3fb9b64668dfeb1f296e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::operator-</definition>
        <argsstring>(const Vector2F &amp;vecIn)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" kindref="member">Vector2F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="181" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="79" bodyend="85"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a25ad98f062ab2dc101ffea256774806e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::operator*</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="199" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="89" bodyend="95"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a8c6116d85890aadcc954f62297afd7d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::operator*</definition>
        <argsstring>(const float scalar) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="217" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="98" bodyend="104"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a4145e462cb15474f0d5fa128752ce08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::operator/</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Division Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar division behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="235" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="108" bodyend="114"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a8fc98a2cccaac23ffb5aea71d577ff41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector2F::operator*</definition>
        <argsstring>(const Vector2F &amp;vecIn)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the vector multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" kindref="member">Vector2F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="253" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="118" bodyend="126"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a8079b2be632b703f780bc1260e116207" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector2F::operator*</definition>
        <argsstring>(const Vector2F &amp;vecIn) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the vector multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" kindref="member">Vector2F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="271" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="129" bodyend="137"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a19af4f08864e24931c8b6200f1c49abf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Negative Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the negative behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="287" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="140" bodyend="148"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1ac9036da606c473697f46dce9b84dc672" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::EMult</definition>
        <argsstring>(const Vector2F &amp;vecIn)</argsstring>
        <name>EMult</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function multiplies this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" kindref="member">Vector2F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="305" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="151" bodyend="159"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <referencedby refid="class_stats2_f_1a75864d3e70ed02f59d08cd3be619e523" compoundref="_stats2_f_8hpp" startline="111" endline="114">Stats2F::getVar</referencedby>
        <referencedby refid="class_stats2_f_1a57a15d5279fb956cdddf3d784ff2f9fb" compoundref="_stats2_f_8cpp" startline="15" endline="20">Stats2F::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1ad1cc48175067ed3483dc72e6de292c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector2F::Constrain</definition>
        <argsstring>(uint32 i, float min, float max)</argsstring>
        <name>Constrain</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Vector Constrain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function constrains a vector value between a passed range.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float of min value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float of max value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="321" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="163" bodyend="173"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <references refid="namespacemath_1ac016610696dca7e9f93b7f3686c26d22" compoundref="_limits_8cpp" startline="56" endline="59">math::max</references>
        <references refid="namespacemath_1ab712184f49d2f94c0b5e6122cda72ac4" compoundref="_limits_8cpp" startline="51" endline="54">math::min</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1ad5077535dc0ec3337070711c43489b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector2_f" kindref="compound">Vector2F</ref></type>
        <definition>Vector2F Vector2F::Normalized</definition>
        <argsstring>(void)</argsstring>
        <name>Normalized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalized Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this vector and returns it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector normalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="337" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="177" bodyend="186"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <references refid="classmath_1_1_vector2_f_1a14f5eb348c4af0d876e7977020035d67" compoundref="_vector2_f_8cpp" startline="46" endline="49">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector2_f_1a83235d89621bd122762516e54b72d809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_matrix1_f2" kindref="compound">Matrix1F2</ref></type>
        <definition>Matrix1F2 Vector2F::Transpose</definition>
        <argsstring>(void)</argsstring>
        <name>Transpose</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Transpose Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns this vector transposed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector as #Matrix1F2 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="353" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector2F.cpp" bodystart="188" bodyend="197"/>
        <references refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" compoundref="_vector2_f_8hpp" startline="18">data</references>
        <references refid="classmath_1_1_matrix1_f2_1a372075b28b461f663bcc0e2c28106259" compoundref="_matrix1_f2_8cpp" startline="53" endline="57">math::Matrix1F2::Zero</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" line="12" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector2F.hpp" bodystart="11" bodyend="357"/>
    <listofallmembers>
      <member refid="classmath_1_1_vector2_f_1ad1cc48175067ed3483dc72e6de292c0f" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Constrain</name></member>
      <member refid="classmath_1_1_vector2_f_1a09fe1de8fc3c95275cc96f86f8be76a3" prot="private" virt="non-virtual"><scope>math::Vector2F</scope><name>data</name></member>
      <member refid="classmath_1_1_vector2_f_1ac9036da606c473697f46dce9b84dc672" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>EMult</name></member>
      <member refid="classmath_1_1_vector2_f_1a14f5eb348c4af0d876e7977020035d67" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector2_f_1a53ec5fe520524652a031b5ddf8689b18" prot="private" virt="non-virtual"><scope>math::Vector2F</scope><name>nan</name></member>
      <member refid="classmath_1_1_vector2_f_1ad5077535dc0ec3337070711c43489b45" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_vector2_f_1a25ad98f062ab2dc101ffea256774806e" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector2_f_1a8c6116d85890aadcc954f62297afd7d0" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector2_f_1a8fc98a2cccaac23ffb5aea71d577ff41" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector2_f_1a8079b2be632b703f780bc1260e116207" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector2_f_1a92dee3e323d3d0ed385589cf61301575" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector2_f_1ac20e35d55ab3fb9b64668dfeb1f296e6" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector2_f_1a19af4f08864e24931c8b6200f1c49abf" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector2_f_1a4145e462cb15474f0d5fa128752ce08d" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector2_f_1ad046c785616a533094134eda04f6ac18" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector2_f_1ac0619e3b99b9c057358c1c73c36671e1" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector2_f_1a46e9667e9ace96886993a7071ebf97c9" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>pow</name></member>
      <member refid="classmath_1_1_vector2_f_1a8aee0a3fc53eb7eabc832dafbcd54ada" prot="private" virt="non-virtual"><scope>math::Vector2F</scope><name>SIZE</name></member>
      <member refid="classmath_1_1_vector2_f_1a83235d89621bd122762516e54b72d809" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Transpose</name></member>
      <member refid="classmath_1_1_vector2_f_1a934016bc015bd6e0496105998cbfc35f" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Vector2F</name></member>
      <member refid="classmath_1_1_vector2_f_1a828042643f36122f27667da36711cb43" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Vector2F</name></member>
      <member refid="classmath_1_1_vector2_f_1a9a4f991a1b6550df5b1365e3e26132fe" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>Zero</name></member>
      <member refid="classmath_1_1_vector2_f_1a851cbfb29f743d1b19ae53fba98995f5" prot="public" virt="non-virtual"><scope>math::Vector2F</scope><name>~Vector2F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
