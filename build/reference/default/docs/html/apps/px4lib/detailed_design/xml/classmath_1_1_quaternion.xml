<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_quaternion" kind="class" language="C++" prot="public">
    <compoundname>math::Quaternion</compoundname>
    <basecompoundref refid="classmath_1_1_vector4_f" prot="public" virt="non-virtual">math::Vector4F</basecompoundref>
    <includes refid="_quaternion_8hpp" local="no">Quaternion.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_quaternion_1abcc01358aada56ea5f0db4da18aaf77d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>()</argsstring>
        <name>Quaternion</name>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="26" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a3c59d086647a566ee5b2255e11c5497f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>(float a, float b, float c, float d)</argsstring>
        <name>Quaternion</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="43" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="6" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1ae5c2aea6f7027d479205b5b8b85ba62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>(float roll, float pitch, float yaw)</argsstring>
        <name>Quaternion</name>
        <param>
          <type>float</type>
          <declname>roll</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>float</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object from roll, pitch, and yaw.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">roll</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float used to initialize the <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pitch</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float used to initialize the <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float used to initialize the <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="59" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="316" bodyend="332"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a72c6ae5b8fc714951cd76d3c8d9c56aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>(const Matrix3F3 &amp;mat)</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classmath_1_1_matrix3_f3" kindref="compound">Matrix3F3</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object from a <ref refid="classmath_1_1_matrix3_f3" kindref="compound">Matrix3F3</ref>.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>A #Matrix3F3 used to initialize the <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="73" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="13" bodyend="42"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1ae732da285deb441e3f8dc91286bd5d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::Quaternion</definition>
        <argsstring>(const Vector3F &amp;aa)</argsstring>
        <name>Quaternion</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>aa</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object from a axis angle.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>A #Matrix3F3 used to initialize the <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="87" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="44" bodyend="63"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
        <references refid="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" compoundref="_vector3_f_8cpp" startline="47" endline="50">math::Vector3F::Length</references>
        <references refid="classmath_1_1_vector3_f_1a058f03ba04f7efc8676bd13100b52a22" compoundref="_vector3_f_8cpp" startline="229" endline="236">math::Vector3F::Normalize</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a5f834c2ca469cd71edc8a23fdc3f56e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Quaternion::~Quaternion</definition>
        <argsstring>()</argsstring>
        <name>~Quaternion</name>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="99" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a9441818328e8dda2bbda2bd640732007" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_matrix3_f3" kindref="compound">Matrix3F3</ref></type>
        <definition>Matrix3F3 Quaternion::RotationMatrix</definition>
        <argsstring>(void) const </argsstring>
        <name>RotationMatrix</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Rotation Matrix. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns a rotation matrix based off the current values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
rotation matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="116" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="224" bodyend="241"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a03ebd294bb77d05248116c50c64c543c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Quaternion::Imaginary</definition>
        <argsstring>(void)</argsstring>
        <name>Imaginary</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Imaginary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns the imaginary part of the <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref>.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of imaginary values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="132" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="244" bodyend="247"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a75c12a1589ec4a1c318d7464cd671076" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Quaternion::ToEuler</definition>
        <argsstring>(void) const </argsstring>
        <name>ToEuler</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Convert To <ref refid="classmath_1_1_euler" kindref="compound">Euler</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function computes <ref refid="classmath_1_1_euler" kindref="compound">Euler</ref> values of this matrix.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of <ref refid="classmath_1_1_euler" kindref="compound">Euler</ref> values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="148" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="251" bodyend="260"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1ad6fadf7dc6d7d4cef2815ab8e4346758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Quaternion::copyTo</definition>
        <argsstring>(float(&amp;dst)[4])</argsstring>
        <name>copyTo</name>
        <param>
          <type>float(&amp;)</type>
          <declname>dst</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
<para>Copy Data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function copies the quaternion data to another data structure.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>[in/out]</parametername>
</parameternamelist>
<parameterdescription>
<para>dst A structure to copy data into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="162" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="336" bodyend="342"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a5a4ae502ac8f984b5de39aecbdb6977a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>const Quaternion Quaternion::operator*</definition>
        <argsstring>(const float scalar) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="180" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="137" bodyend="145"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1abae305bb9b5eacd0a70e492ffdc85ea7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
        <definition>const Quaternion &amp; Quaternion::operator=</definition>
        <argsstring>(const Quaternion &amp;q)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Equal Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the set equals behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="196" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="160" bodyend="169"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a488671eefa6cd52aabcc01614de0de41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>const Quaternion Quaternion::operator+</definition>
        <argsstring>(const Quaternion &amp;vecIn) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_quaternion_1abcc01358aada56ea5f0db4da18aaf77d" kindref="member">Quaternion</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="214" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="124" bodyend="132"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a1c389f98b49fa1b16e93d2d66692c15c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>const Quaternion Quaternion::operator-</definition>
        <argsstring>(const Quaternion &amp;vecIn) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_quaternion_1abcc01358aada56ea5f0db4da18aaf77d" kindref="member">Quaternion</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="232" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="149" bodyend="157"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1aa6eacb3ec2a72f064d42bd5198b392b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>const Quaternion Quaternion::operator*</definition>
        <argsstring>(const Quaternion &amp;q) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the quaternion multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_quaternion_1abcc01358aada56ea5f0db4da18aaf77d" kindref="member">Quaternion</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="251" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="79" bodyend="88"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1af7629a79faf9a9c1e72352241be40348" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion Quaternion::operator/</definition>
        <argsstring>(const Quaternion &amp;q) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Division Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the quaternion division behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">q</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_quaternion_1abcc01358aada56ea5f0db4da18aaf77d" kindref="member">Quaternion</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="270" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="92" bodyend="102"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
        <references refid="classmath_1_1_vector4_f_1a05f2a1f07a542364e76f598d43af2b6e" compoundref="_vector4_f_8cpp" startline="51" endline="54">math::Vector4F::LengthSquared</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a1698aff5de79353bb6d1f3ee2a761531" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Quaternion::Conjugate</definition>
        <argsstring>(const Vector3F &amp;v) const </argsstring>
        <name>Conjugate</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Conjugate. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns the conjugate of the quaternion.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>#Vector3F input</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="288" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="173" bodyend="195"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a9e6b99939aac1061472e3ebef26901d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Quaternion::ConjugateInversed</definition>
        <argsstring>(const Vector3F &amp;v) const </argsstring>
        <name>ConjugateInversed</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref> Conjugate Inversed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns the inverse conjugate of the quaternion.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>#Vector3F input</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
conjugate </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="306" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="199" bodyend="221"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a37b6abc74a8eae4ed590da0505ff5530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Quaternion::FromDCM</definition>
        <argsstring>(const Matrix3F3 &amp;dcm)</argsstring>
        <name>FromDCM</name>
        <param>
          <type>const <ref refid="classmath_1_1_matrix3_f3" kindref="compound">Matrix3F3</ref> &amp;</type>
          <declname>dcm</declname>
        </param>
        <briefdescription>
<para>From DCM. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the quaternion from a DCM.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dcm</parametername>
</parameternamelist>
<parameterdescription>
<para>#Matrix3F3 DCM to generate quaternion from</para></parameterdescription>
</parameteritem>
</parameterlist>
set quaternion to rotation by DCM Reference: Shoemake, Quaternions, <ulink url="http://www.cs.ucr.edu/~vbz/resources/quatut.pdf">http://www.cs.ucr.edu/~vbz/resources/quatut.pdf</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="320" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="267" bodyend="303"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1aa2c5e9c7d17a16db898143847c9d1d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Quaternion::FromYaw</definition>
        <argsstring>(float yaw)</argsstring>
        <name>FromYaw</name>
        <param>
          <type>float</type>
          <declname>yaw</declname>
        </param>
        <briefdescription>
<para>From Yaw. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the quaternion from yaw.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">yaw</parametername>
</parameternamelist>
<parameterdescription>
<para>#float DCM to generate quaternion from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="334" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="307" bodyend="313"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_quaternion_1a8679d25c81f3446bbea4dc749c89397e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>const Quaternion Quaternion::Derivative</definition>
        <argsstring>(const Vector3F &amp;w)</argsstring>
        <name>Derivative</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para><ref refid="class_derivative" kindref="compound">Derivative</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the derivative of the quaternion.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">w</parametername>
</parameternamelist>
<parameterdescription>
<para>#Vector3F input </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="348" column="1" bodyfile="apps/px4lib/fsw/src/math/Quaternion.cpp" bodystart="105" bodyend="119"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">math::Vector4F::data</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="94">
        <label>math::Quaternion</label>
        <link refid="classmath_1_1_quaternion"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>math::Vector4F</label>
        <link refid="classmath_1_1_vector4_f"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="96">
        <label>math::Quaternion</label>
        <link refid="classmath_1_1_quaternion"/>
        <childnode refid="97" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>math::Vector4F</label>
        <link refid="classmath_1_1_vector4_f"/>
      </node>
    </collaborationgraph>
    <location file="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" line="14" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Quaternion.hpp" bodystart="13" bodyend="352"/>
    <listofallmembers>
      <member refid="classmath_1_1_quaternion_1a1698aff5de79353bb6d1f3ee2a761531" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Conjugate</name></member>
      <member refid="classmath_1_1_quaternion_1a9e6b99939aac1061472e3ebef26901d1" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>ConjugateInversed</name></member>
      <member refid="classmath_1_1_quaternion_1ad6fadf7dc6d7d4cef2815ab8e4346758" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>copyTo</name></member>
      <member refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" prot="protected" virt="non-virtual"><scope>math::Quaternion</scope><name>data</name></member>
      <member refid="classmath_1_1_quaternion_1a8679d25c81f3446bbea4dc749c89397e" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Derivative</name></member>
      <member refid="classmath_1_1_quaternion_1a37b6abc74a8eae4ed590da0505ff5530" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>FromDCM</name></member>
      <member refid="classmath_1_1_quaternion_1aa2c5e9c7d17a16db898143847c9d1d9f" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>FromYaw</name></member>
      <member refid="classmath_1_1_quaternion_1a03ebd294bb77d05248116c50c64c543c" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Imaginary</name></member>
      <member refid="classmath_1_1_vector4_f_1af2f36d8d4a94ed8c5afb60ab7c4a1568" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector4_f_1a05f2a1f07a542364e76f598d43af2b6e" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>LengthSquared</name></member>
      <member refid="classmath_1_1_vector4_f_1a0c6c4022144477dc893ada6a556f9b7d" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Normalize</name></member>
      <member refid="classmath_1_1_vector4_f_1a8d6a068cf746ecc3c2ce83fba6ff7d2d" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_quaternion_1a5a4ae502ac8f984b5de39aecbdb6977a" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator*</name></member>
      <member refid="classmath_1_1_quaternion_1aa6eacb3ec2a72f064d42bd5198b392b2" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector4_f_1ac8a2149a014f31b6be649a017d7cead2" prot="public" virt="non-virtual" ambiguityscope="math::Vector4F::"><scope>math::Quaternion</scope><name>operator*</name></member>
      <member refid="classmath_1_1_quaternion_1a488671eefa6cd52aabcc01614de0de41" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector4_f_1adbd4ae7cacde82e997e7ac5f4431618b" prot="public" virt="non-virtual" ambiguityscope="math::Vector4F::"><scope>math::Quaternion</scope><name>operator+</name></member>
      <member refid="classmath_1_1_quaternion_1a1c389f98b49fa1b16e93d2d66692c15c" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector4_f_1aa806f49c4d804130902ea9492dba1de6" prot="public" virt="non-virtual" ambiguityscope="math::Vector4F::"><scope>math::Quaternion</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector4_f_1a561a8c6efddcc165d36b7b79c31b1e5f" prot="public" virt="non-virtual" ambiguityscope="math::Vector4F::"><scope>math::Quaternion</scope><name>operator-</name></member>
      <member refid="classmath_1_1_quaternion_1af7629a79faf9a9c1e72352241be40348" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector4_f_1a0707ffd6de259613547fccc60b7c963b" prot="public" virt="non-virtual" ambiguityscope="math::Vector4F::"><scope>math::Quaternion</scope><name>operator/</name></member>
      <member refid="classmath_1_1_quaternion_1abae305bb9b5eacd0a70e492ffdc85ea7" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator=</name></member>
      <member refid="classmath_1_1_vector4_f_1a7e7b66d9bdb7eff1bc1d35db9cb87aaa" prot="public" virt="non-virtual" ambiguityscope="math::Vector4F::"><scope>math::Quaternion</scope><name>operator=</name></member>
      <member refid="classmath_1_1_vector4_f_1a21ddd2a80dcf903b2320a240d92a03f0" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector4_f_1abddc286ffbf7931565f36e062660cba9" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_quaternion_1abcc01358aada56ea5f0db4da18aaf77d" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classmath_1_1_quaternion_1a3c59d086647a566ee5b2255e11c5497f" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classmath_1_1_quaternion_1ae5c2aea6f7027d479205b5b8b85ba62e" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classmath_1_1_quaternion_1a72c6ae5b8fc714951cd76d3c8d9c56aa" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classmath_1_1_quaternion_1ae732da285deb441e3f8dc91286bd5d54" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Quaternion</name></member>
      <member refid="classmath_1_1_quaternion_1a9441818328e8dda2bbda2bd640732007" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>RotationMatrix</name></member>
      <member refid="classmath_1_1_quaternion_1a75c12a1589ec4a1c318d7464cd671076" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>ToEuler</name></member>
      <member refid="classmath_1_1_vector4_f_1a25ce2bce73fe479a7d196bd12ffb24c9" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Vector4F</name></member>
      <member refid="classmath_1_1_vector4_f_1afcea5f7164877d2477f3e3d65c8db931" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Vector4F</name></member>
      <member refid="classmath_1_1_vector4_f_1a22316bd59f4e09b751813dbaa65f446c" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>Zero</name></member>
      <member refid="classmath_1_1_quaternion_1a5f834c2ca469cd71edc8a23fdc3f56e8" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>~Quaternion</name></member>
      <member refid="classmath_1_1_vector4_f_1a1ca64a1994a1e7216c1dd76d3d89d24d" prot="public" virt="non-virtual"><scope>math::Quaternion</scope><name>~Vector4F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
