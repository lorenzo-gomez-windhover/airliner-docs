<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_vector10_f" kind="class" language="C++" prot="public">
    <compoundname>math::Vector10F</compoundname>
    <includes refid="_vector10_f_8hpp" local="no">Vector10F.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector10_f_1a4c2ddf69b76baa379c77ef8b03bc70ea" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int math::Vector10F::SIZE</definition>
        <argsstring></argsstring>
        <name>SIZE</name>
        <initializer>= 10</initializer>
        <briefdescription>
<para>Size of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="17" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector10_f_1a846bbee8695e6a87ac3299dfe66b62e4" compoundref="_vector10_f_8cpp" startline="23" endline="31">operator[]</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector10F::data[SIZE]</definition>
        <argsstring>[SIZE]</argsstring>
        <name>data</name>
        <briefdescription>
<para>Data of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="20" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector10_f_1a8c62c5e0b8bdda20de50047dfff44ebb" compoundref="_vector10_f_8cpp" startline="265" endline="275">Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a3d52a76f78387de2de0f2e2bc20370c1" compoundref="_vector10_f_8cpp" startline="247" endline="263">EDivide</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a2519e086c1e1a28619e01257373f5dd6" compoundref="_vector10_f_8cpp" startline="229" endline="245">EMult</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a15a38883e3b723589eeadc812d58006a" compoundref="_vector10_f_8cpp" startline="45" endline="51">Length</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a701c1c2e2576bfaf6d5a883f4122422a" compoundref="_vector10_f_8cpp" startline="296" endline="310">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a6116595a847b138a2ae219a4c6dfa8f9" compoundref="_vector10_f_8cpp" startline="277" endline="294">Normalized</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1abacf2e5771711e7d756b2e77ae2ab503" compoundref="_vector10_f_8cpp" startline="155" endline="169">operator*</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1adc3dbb5c59753dcac037e29c9a5d8665" compoundref="_vector10_f_8cpp" startline="70" endline="84">operator+</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a8f20ef4d0863e374205d31078f370ab1" compoundref="_vector10_f_8cpp" startline="106" endline="118">operator+=</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a6f0fd693c11b80dbb63ea9da1d0065c6" compoundref="_vector10_f_8cpp" startline="122" endline="136">operator-</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1ad699ee8dea849ce81c14f2ace05b2699" compoundref="_vector10_f_8cpp" startline="173" endline="187">operator/</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a846bbee8695e6a87ac3299dfe66b62e4" compoundref="_vector10_f_8cpp" startline="23" endline="31">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a413e45065aa6d05b4baf1bdd749ae046" compoundref="_vector10_f_8cpp" startline="54" endline="66">Zero</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmath_1_1_vector10_f_1a31ab1acfac700993b3eb9d5f92abc8bc" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector10F::nan</definition>
        <argsstring></argsstring>
        <name>nan</name>
        <briefdescription>
<para>NaN data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="23" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" bodystart="23" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector10_f_1a846bbee8695e6a87ac3299dfe66b62e4" compoundref="_vector10_f_8cpp" startline="23" endline="31">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a687599c80b5a2e14d0f32d5f40554108" compoundref="_vector10_f_8cpp" startline="6" endline="10">Vector10F</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector10F::Vector10F</definition>
        <argsstring>()</argsstring>
        <name>Vector10F</name>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="37" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a687599c80b5a2e14d0f32d5f40554108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector10F::Vector10F</definition>
        <argsstring>(float A, float B, float C, float D, float E, float F, float G, float H, float I, float J)</argsstring>
        <name>Vector10F</name>
        <param>
          <type>float</type>
          <declname>A</declname>
        </param>
        <param>
          <type>float</type>
          <declname>B</declname>
        </param>
        <param>
          <type>float</type>
          <declname>C</declname>
        </param>
        <param>
          <type>float</type>
          <declname>D</declname>
        </param>
        <param>
          <type>float</type>
          <declname>E</declname>
        </param>
        <param>
          <type>float</type>
          <declname>F</declname>
        </param>
        <param>
          <type>float</type>
          <declname>G</declname>
        </param>
        <param>
          <type>float</type>
          <declname>H</declname>
        </param>
        <param>
          <type>float</type>
          <declname>I</declname>
        </param>
        <param>
          <type>float</type>
          <declname>J</declname>
        </param>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">B</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">C</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">D</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">E</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">F</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">G</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">H</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">J</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="60" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="6" bodyend="10"/>
        <references refid="classmath_1_1_vector10_f_1a31ab1acfac700993b3eb9d5f92abc8bc" compoundref="_vector10_f_8hpp" startline="23">nan</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1acc97aaf3358210129cf07cdf3cb2dc46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector10F::~Vector10F</definition>
        <argsstring>()</argsstring>
        <name>~Vector10F</name>
        <briefdescription>
<para>Vector Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="72" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a846bbee8695e6a87ac3299dfe66b62e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; Vector10F::operator[]</definition>
        <argsstring>(uint32 i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="90" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="23" bodyend="31"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <references refid="classmath_1_1_vector10_f_1a31ab1acfac700993b3eb9d5f92abc8bc" compoundref="_vector10_f_8hpp" startline="23">nan</references>
        <references refid="classmath_1_1_vector10_f_1a4c2ddf69b76baa379c77ef8b03bc70ea" compoundref="_vector10_f_8hpp" startline="17">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a7a8d926f927b33f32b32da6f340b8652" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector10F::operator[]</definition>
        <argsstring>(uint32 i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="108" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="34" bodyend="42"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <references refid="classmath_1_1_vector10_f_1a4c2ddf69b76baa379c77ef8b03bc70ea" compoundref="_vector10_f_8hpp" startline="17">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a15a38883e3b723589eeadc812d58006a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector10F::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vector Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the length of all the values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
length </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="126" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="45" bodyend="51"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <referencedby refid="classmath_1_1_vector10_f_1a701c1c2e2576bfaf6d5a883f4122422a" compoundref="_vector10_f_8cpp" startline="296" endline="310">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a6116595a847b138a2ae219a4c6dfa8f9" compoundref="_vector10_f_8cpp" startline="277" endline="294">Normalized</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a413e45065aa6d05b4baf1bdd749ae046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector10F::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Zero Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function zeroes out all values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="138" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="54" bodyend="66"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <referencedby refid="classdelay_1_1_block_delay10_f_l_e_n10_1abbd7c493da8e95909c3f55247febccb7" compoundref="_block_delay_8cpp" startline="16" endline="28">delay::BlockDelay10FLEN10::Initialize</referencedby>
        <referencedby refid="classmath_1_1_matrix10_f2_1ae9998be80d49a7cef5a50aefa914c7d0" compoundref="_matrix10_f2_8cpp" startline="134" endline="149">math::Matrix10F2::operator*</referencedby>
        <referencedby refid="classmath_1_1_matrix10_f3_1a58c974be54475dc523a917ad9b39a06b" compoundref="_matrix10_f3_8cpp" startline="136" endline="151">math::Matrix10F3::operator*</referencedby>
        <referencedby refid="class_low_pass_vector10_f_1a684543518c9fdbcffeab1b1e34ba718e" compoundref="_low_pass_vector10_f_8cpp" startline="17" endline="41">LowPassVector10F::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1adc3dbb5c59753dcac037e29c9a5d8665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::operator+</definition>
        <argsstring>(const Vector10F &amp;vecIn)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="156" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="70" bodyend="84"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1ac6fc97555667da2e43f288bb292694fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::operator+</definition>
        <argsstring>(const Vector10F &amp;vecIn) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="174" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="88" bodyend="102"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a8f20ef4d0863e374205d31078f370ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector10F::operator+=</definition>
        <argsstring>(const Vector10F &amp;vecIn)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Equals Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition equals (+=) behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="189" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="106" bodyend="118"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a6f0fd693c11b80dbb63ea9da1d0065c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::operator-</definition>
        <argsstring>(const Vector10F &amp;vecIn)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="207" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="122" bodyend="136"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a91074ac36b6498c8f45908518f3c5894" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F math::Vector10F::operator-</definition>
        <argsstring>(const Vector10F &amp;vecIn) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the Subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1abacf2e5771711e7d756b2e77ae2ab503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::operator*</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="243" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="155" bodyend="169"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1ad699ee8dea849ce81c14f2ace05b2699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::operator/</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Division Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar division behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="261" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="173" bodyend="187"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a3b270d4879ba3c9d1a955a0b5ef36891" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Negative Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the negative behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="277" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="210" bodyend="226"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a2519e086c1e1a28619e01257373f5dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::EMult</definition>
        <argsstring>(const Vector10F &amp;vecIn)</argsstring>
        <name>EMult</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function multiplies this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="295" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="229" bodyend="245"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a8c62c5e0b8bdda20de50047dfff44ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector10F::Constrain</definition>
        <argsstring>(uint32 i, float min, float max)</argsstring>
        <name>Constrain</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Vector Constrain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function constrains a vector value between a passed range.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float index of value to constrain </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="311" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="265" bodyend="275"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <references refid="namespacemath_1ac016610696dca7e9f93b7f3686c26d22" compoundref="_limits_8cpp" startline="56" endline="59">math::max</references>
        <references refid="namespacemath_1ab712184f49d2f94c0b5e6122cda72ac4" compoundref="_limits_8cpp" startline="51" endline="54">math::min</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a6116595a847b138a2ae219a4c6dfa8f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>Vector10F Vector10F::Normalized</definition>
        <argsstring>(void)</argsstring>
        <name>Normalized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalized Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this vector and returns it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector normalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="327" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="277" bodyend="294"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <references refid="classmath_1_1_vector10_f_1a15a38883e3b723589eeadc812d58006a" compoundref="_vector10_f_8cpp" startline="45" endline="51">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a701c1c2e2576bfaf6d5a883f4122422a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector10F::Normalize</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalize Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="339" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="296" bodyend="310"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
        <references refid="classmath_1_1_vector10_f_1a15a38883e3b723589eeadc812d58006a" compoundref="_vector10_f_8cpp" startline="45" endline="51">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector10_f_1a3d52a76f78387de2de0f2e2bc20370c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref></type>
        <definition>const Vector10F Vector10F::EDivide</definition>
        <argsstring>(const Vector10F &amp;v) const </argsstring>
        <name>EDivide</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector10_f" kindref="compound">Vector10F</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Vector Division. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function divides this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" kindref="member">Vector10F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="357" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector10F.cpp" bodystart="247" bodyend="263"/>
        <references refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" compoundref="_vector10_f_8hpp" startline="20">data</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" line="13" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector10F.hpp" bodystart="12" bodyend="361"/>
    <listofallmembers>
      <member refid="classmath_1_1_vector10_f_1a8c62c5e0b8bdda20de50047dfff44ebb" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Constrain</name></member>
      <member refid="classmath_1_1_vector10_f_1a95df700d218dda9bdccb35c2ff78e634" prot="private" virt="non-virtual"><scope>math::Vector10F</scope><name>data</name></member>
      <member refid="classmath_1_1_vector10_f_1a3d52a76f78387de2de0f2e2bc20370c1" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>EDivide</name></member>
      <member refid="classmath_1_1_vector10_f_1a2519e086c1e1a28619e01257373f5dd6" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>EMult</name></member>
      <member refid="classmath_1_1_vector10_f_1a15a38883e3b723589eeadc812d58006a" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector10_f_1a31ab1acfac700993b3eb9d5f92abc8bc" prot="private" virt="non-virtual"><scope>math::Vector10F</scope><name>nan</name></member>
      <member refid="classmath_1_1_vector10_f_1a701c1c2e2576bfaf6d5a883f4122422a" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Normalize</name></member>
      <member refid="classmath_1_1_vector10_f_1a6116595a847b138a2ae219a4c6dfa8f9" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_vector10_f_1abacf2e5771711e7d756b2e77ae2ab503" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector10_f_1adc3dbb5c59753dcac037e29c9a5d8665" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector10_f_1ac6fc97555667da2e43f288bb292694fc" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector10_f_1a8f20ef4d0863e374205d31078f370ab1" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator+=</name></member>
      <member refid="classmath_1_1_vector10_f_1a6f0fd693c11b80dbb63ea9da1d0065c6" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector10_f_1a91074ac36b6498c8f45908518f3c5894" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector10_f_1a3b270d4879ba3c9d1a955a0b5ef36891" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector10_f_1ad699ee8dea849ce81c14f2ace05b2699" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector10_f_1a846bbee8695e6a87ac3299dfe66b62e4" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector10_f_1a7a8d926f927b33f32b32da6f340b8652" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector10_f_1a4c2ddf69b76baa379c77ef8b03bc70ea" prot="private" virt="non-virtual"><scope>math::Vector10F</scope><name>SIZE</name></member>
      <member refid="classmath_1_1_vector10_f_1ad0e1fb18d4400ae60d0aad43fed82b05" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Vector10F</name></member>
      <member refid="classmath_1_1_vector10_f_1a687599c80b5a2e14d0f32d5f40554108" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Vector10F</name></member>
      <member refid="classmath_1_1_vector10_f_1a413e45065aa6d05b4baf1bdd749ae046" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>Zero</name></member>
      <member refid="classmath_1_1_vector10_f_1acc97aaf3358210129cf07cdf3cb2dc46" prot="public" virt="non-virtual"><scope>math::Vector10F</scope><name>~Vector10F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
