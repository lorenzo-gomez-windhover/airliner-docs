<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_vector3_f" kind="class" language="C++" prot="public">
    <compoundname>math::Vector3F</compoundname>
    <derivedcompoundref refid="classmath_1_1_euler" prot="public" virt="non-virtual">math::Euler</derivedcompoundref>
    <includes refid="_vector3_f_8hpp" local="no">Vector3F.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector3_f_1a1c125bba5ec0f0a2e9ff9c733e740816" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int math::Vector3F::SIZE</definition>
        <argsstring></argsstring>
        <name>SIZE</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>Size of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="17" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector3_f_1aa113834455b313503260362fe3eafd34" compoundref="_vector3_f_8cpp" startline="25" endline="33">operator[]</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector3_f_1a7dfc929bd324a417b7995da500e7e4ba" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector3F::nan</definition>
        <argsstring></argsstring>
        <name>nan</name>
        <briefdescription>
<para>NaN data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="20" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector3_f_1aa113834455b313503260362fe3eafd34" compoundref="_vector3_f_8cpp" startline="25" endline="33">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a08c2ce570a0374105abd3a72027dcdfa" compoundref="_vector3_f_8cpp" startline="7" endline="11">Vector3F</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector3F::data[SIZE]</definition>
        <argsstring>[SIZE]</argsstring>
        <name>data</name>
        <briefdescription>
<para>Data of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="388" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" bodystart="388" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector3_f_1ac7453c791aceeb7fdc04015edd1452d2" compoundref="_vector3_f_8cpp" startline="201" endline="211">Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1aa840fd28b5c33db3661c522a9eabd5f3" compoundref="_vector3_f_8cpp" startline="188" endline="197">EDivide</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a02b4c56bd36bacc736fe38e820812d77" compoundref="_vector3_f_8cpp" startline="175" endline="184">EMult</referencedby>
        <referencedby refid="classmath_1_1_euler_1a6a81c53f02a4397c24df1f8b82363d0f" compoundref="_euler_8cpp" startline="6" endline="25">math::Euler::Euler</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" compoundref="_vector3_f_8cpp" startline="47" endline="50">Length</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a058f03ba04f7efc8676bd13100b52a22" compoundref="_vector3_f_8cpp" startline="229" endline="236">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1adab19da3690c03abed7861552367c89a" compoundref="_vector3_f_8cpp" startline="215" endline="225">Normalized</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a2260f91fd40ff1af50efdfff3ff84ae2" compoundref="_vector3_f_8cpp" startline="118" endline="125">operator%</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a0ac1ba8012ca0952497bfd122d274309" compoundref="_vector3_f_8cpp" startline="129" endline="136">operator*</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1af4aa9c7515b77c37a5ecd05aef6d8d18" compoundref="_vector3_f_8cpp" startline="74" endline="81">operator+</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a5793dc7fef8e25b63ddda19a0ec6a2b7" compoundref="_vector3_f_8cpp" startline="96" endline="103">operator-</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1add97cf91e2dc058f763437561186a10a" compoundref="_vector3_f_8cpp" startline="140" endline="147">operator/</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1aa113834455b313503260362fe3eafd34" compoundref="_vector3_f_8cpp" startline="25" endline="33">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1a39e28fff4a5c9be54478b7fc02741c26" compoundref="_vector3_f_8cpp" startline="60" endline="70">Transpose</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1ac9b3f2656373cc61bf9ed109f5c4ab36" compoundref="_vector3_f_8cpp" startline="53" endline="58">Zero</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector3F::Vector3F</definition>
        <argsstring>()</argsstring>
        <name>Vector3F</name>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="33" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a08c2ce570a0374105abd3a72027dcdfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector3F::Vector3F</definition>
        <argsstring>(float X, float Y, float Z)</argsstring>
        <name>Vector3F</name>
        <param>
          <type>float</type>
          <declname>X</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>Z</declname>
        </param>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">X</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Y</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">Z</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="49" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="7" bodyend="11"/>
        <references refid="classmath_1_1_vector3_f_1a7dfc929bd324a417b7995da500e7e4ba" compoundref="_vector3_f_8hpp" startline="20">nan</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1afa09c46d484a842c817f2ebd15dddf36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector3F::~Vector3F</definition>
        <argsstring>()</argsstring>
        <name>~Vector3F</name>
        <briefdescription>
<para>Vector Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="61" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1aa113834455b313503260362fe3eafd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; Vector3F::operator[]</definition>
        <argsstring>(uint32 i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="79" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="25" bodyend="33"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <references refid="classmath_1_1_vector3_f_1a7dfc929bd324a417b7995da500e7e4ba" compoundref="_vector3_f_8hpp" startline="20">nan</references>
        <references refid="classmath_1_1_vector3_f_1a1c125bba5ec0f0a2e9ff9c733e740816" compoundref="_vector3_f_8hpp" startline="17">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1aa33ba8a65e6425f13344f56eb2fbe1d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector3F::operator[]</definition>
        <argsstring>(uint32 i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="97" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="36" bodyend="44"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <references refid="classmath_1_1_vector3_f_1a1c125bba5ec0f0a2e9ff9c733e740816" compoundref="_vector3_f_8hpp" startline="17">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector3F::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vector Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the length of all the values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
length </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="115" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="47" bodyend="50"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <referencedby refid="classmath_1_1_vector3_f_1a058f03ba04f7efc8676bd13100b52a22" compoundref="_vector3_f_8cpp" startline="229" endline="236">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1adab19da3690c03abed7861552367c89a" compoundref="_vector3_f_8cpp" startline="215" endline="225">Normalized</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1ae732da285deb441e3f8dc91286bd5d54" compoundref="_quaternion_8cpp" startline="44" endline="63">math::Quaternion::Quaternion</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1ac9b3f2656373cc61bf9ed109f5c4ab36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector3F::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Zero Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function zeroes out all values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="127" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="53" bodyend="58"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a39e28fff4a5c9be54478b7fc02741c26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_matrix1_f3" kindref="compound">Matrix1F3</ref></type>
        <definition>Matrix1F3 Vector3F::Transpose</definition>
        <argsstring>(void)</argsstring>
        <name>Transpose</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Transpose Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function returns this vector transposed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector as #Matrix1F3 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="143" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="60" bodyend="70"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <references refid="classmath_1_1_matrix1_f3_1a0ce5de5d811f8316a28e0ab6f06377c0" compoundref="_matrix1_f3_8cpp" startline="53" endline="58">math::Matrix1F3::Zero</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1af4aa9c7515b77c37a5ecd05aef6d8d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator+</definition>
        <argsstring>(const Vector3F &amp;vecIn)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="161" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="74" bodyend="81"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a8083b7d960889ff517842dd0978279ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator+</definition>
        <argsstring>(const Vector3F &amp;vecIn) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="179" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="85" bodyend="92"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a5793dc7fef8e25b63ddda19a0ec6a2b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator-</definition>
        <argsstring>(const Vector3F &amp;vecIn)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="197" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="96" bodyend="103"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1ad444359a3dd346356e46e05eab49cccc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator-</definition>
        <argsstring>(const Vector3F &amp;vecIn) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="215" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="107" bodyend="114"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a2260f91fd40ff1af50efdfff3ff84ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator%</definition>
        <argsstring>(const Vector3F &amp;vecIn)</argsstring>
        <name>operator%</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Cross Product Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the cross product behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the cross product </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="233" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="118" bodyend="125"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a0ac1ba8012ca0952497bfd122d274309" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator*</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="251" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="129" bodyend="136"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1add97cf91e2dc058f763437561186a10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator/</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Division Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar division behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="269" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="140" bodyend="147"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1aadb872003b847ac260b9556a31f4d6a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector3F::operator*</definition>
        <argsstring>(const Vector3F &amp;vecIn)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the vector multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="287" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="151" bodyend="160"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a1d66df2803745e1ed8bd0076a15392d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Negative Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the negative behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="303" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="163" bodyend="172"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a02b4c56bd36bacc736fe38e820812d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::EMult</definition>
        <argsstring>(const Vector3F &amp;vecIn)</argsstring>
        <name>EMult</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function multiplies this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="321" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="175" bodyend="184"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1ac7453c791aceeb7fdc04015edd1452d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector3F::Constrain</definition>
        <argsstring>(uint32 i, float min, float max)</argsstring>
        <name>Constrain</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Vector Constrain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function constrains a vector value between a passed range.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float of min value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float of max value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="337" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="201" bodyend="211"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <references refid="namespacemath_1ac016610696dca7e9f93b7f3686c26d22" compoundref="_limits_8cpp" startline="56" endline="59">math::max</references>
        <references refid="namespacemath_1ab712184f49d2f94c0b5e6122cda72ac4" compoundref="_limits_8cpp" startline="51" endline="54">math::min</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1adab19da3690c03abed7861552367c89a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>Vector3F Vector3F::Normalized</definition>
        <argsstring>(void)</argsstring>
        <name>Normalized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalized Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this vector and returns it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector normalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="353" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="215" bodyend="225"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <references refid="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" compoundref="_vector3_f_8cpp" startline="47" endline="50">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1a058f03ba04f7efc8676bd13100b52a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector3F::Normalize</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalize Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="365" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="229" bodyend="236"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
        <references refid="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" compoundref="_vector3_f_8cpp" startline="47" endline="50">Length</references>
        <referencedby refid="classmath_1_1_quaternion_1ae732da285deb441e3f8dc91286bd5d54" compoundref="_quaternion_8cpp" startline="44" endline="63">math::Quaternion::Quaternion</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector3_f_1aa840fd28b5c33db3661c522a9eabd5f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref></type>
        <definition>const Vector3F Vector3F::EDivide</definition>
        <argsstring>(const Vector3F &amp;v) const </argsstring>
        <name>EDivide</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector3_f" kindref="compound">Vector3F</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Vector Division. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function divides this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" kindref="member">Vector3F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="383" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector3F.cpp" bodystart="188" bodyend="197"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">data</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="116">
        <label>math::Euler</label>
        <link refid="classmath_1_1_euler"/>
        <childnode refid="115" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>math::Vector3F</label>
        <link refid="classmath_1_1_vector3_f"/>
      </node>
    </inheritancegraph>
    <location file="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" line="14" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector3F.hpp" bodystart="13" bodyend="390"/>
    <listofallmembers>
      <member refid="classmath_1_1_vector3_f_1ac7453c791aceeb7fdc04015edd1452d2" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Constrain</name></member>
      <member refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" prot="protected" virt="non-virtual"><scope>math::Vector3F</scope><name>data</name></member>
      <member refid="classmath_1_1_vector3_f_1aa840fd28b5c33db3661c522a9eabd5f3" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>EDivide</name></member>
      <member refid="classmath_1_1_vector3_f_1a02b4c56bd36bacc736fe38e820812d77" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>EMult</name></member>
      <member refid="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector3_f_1a7dfc929bd324a417b7995da500e7e4ba" prot="private" virt="non-virtual"><scope>math::Vector3F</scope><name>nan</name></member>
      <member refid="classmath_1_1_vector3_f_1a058f03ba04f7efc8676bd13100b52a22" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Normalize</name></member>
      <member refid="classmath_1_1_vector3_f_1adab19da3690c03abed7861552367c89a" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_vector3_f_1a2260f91fd40ff1af50efdfff3ff84ae2" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator%</name></member>
      <member refid="classmath_1_1_vector3_f_1a0ac1ba8012ca0952497bfd122d274309" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector3_f_1aadb872003b847ac260b9556a31f4d6a6" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector3_f_1af4aa9c7515b77c37a5ecd05aef6d8d18" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector3_f_1a8083b7d960889ff517842dd0978279ef" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector3_f_1a5793dc7fef8e25b63ddda19a0ec6a2b7" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector3_f_1ad444359a3dd346356e46e05eab49cccc" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector3_f_1a1d66df2803745e1ed8bd0076a15392d6" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector3_f_1add97cf91e2dc058f763437561186a10a" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector3_f_1aa113834455b313503260362fe3eafd34" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector3_f_1aa33ba8a65e6425f13344f56eb2fbe1d0" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector3_f_1a1c125bba5ec0f0a2e9ff9c733e740816" prot="private" virt="non-virtual"><scope>math::Vector3F</scope><name>SIZE</name></member>
      <member refid="classmath_1_1_vector3_f_1a39e28fff4a5c9be54478b7fc02741c26" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Transpose</name></member>
      <member refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Vector3F</name></member>
      <member refid="classmath_1_1_vector3_f_1a08c2ce570a0374105abd3a72027dcdfa" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Vector3F</name></member>
      <member refid="classmath_1_1_vector3_f_1ac9b3f2656373cc61bf9ed109f5c4ab36" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>Zero</name></member>
      <member refid="classmath_1_1_vector3_f_1afa09c46d484a842c817f2ebd15dddf36" prot="public" virt="non-virtual"><scope>math::Vector3F</scope><name>~Vector3F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
