<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_euler" kind="class" language="C++" prot="public">
    <compoundname>math::Euler</compoundname>
    <basecompoundref refid="classmath_1_1_vector3_f" prot="public" virt="non-virtual">math::Vector3F</basecompoundref>
    <includes refid="_euler_8hpp" local="no">Euler.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_euler_1a113a7ea6944508e8909f86e028e34a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Euler::Euler</definition>
        <argsstring>()</argsstring>
        <name>Euler</name>
        <briefdescription>
<para><ref refid="classmath_1_1_euler" kindref="compound">Euler</ref> Matrix Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Euler.hpp" line="28" column="1" bodyfile="apps/px4lib/fsw/src/math/Euler.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_euler_1a6a81c53f02a4397c24df1f8b82363d0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Euler::Euler</definition>
        <argsstring>(Matrix3F3 dcm)</argsstring>
        <name>Euler</name>
        <param>
          <type><ref refid="classmath_1_1_matrix3_f3" kindref="compound">Matrix3F3</ref></type>
          <declname>dcm</declname>
        </param>
        <briefdescription>
<para><ref refid="classmath_1_1_euler" kindref="compound">Euler</ref> Matrix Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">dcm</parametername>
</parameternamelist>
<parameterdescription>
<para>A #Matrix3F3 generate the <ref refid="classmath_1_1_euler" kindref="compound">Euler</ref> numbers from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Euler.hpp" line="42" column="1" bodyfile="apps/px4lib/fsw/src/math/Euler.cpp" bodystart="6" bodyend="25"/>
        <references refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" compoundref="_vector3_f_8hpp" startline="388">math::Vector3F::data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_euler_1afb4b1de4e7735cef3237340a589da6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Euler::~Euler</definition>
        <argsstring>()</argsstring>
        <name>~Euler</name>
        <briefdescription>
<para><ref refid="classmath_1_1_euler" kindref="compound">Euler</ref> Matrix Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Euler.hpp" line="54" column="1" bodyfile="apps/px4lib/fsw/src/math/Euler.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="16">
        <label>math::Euler</label>
        <link refid="classmath_1_1_euler"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>math::Vector3F</label>
        <link refid="classmath_1_1_vector3_f"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>math::Euler</label>
        <link refid="classmath_1_1_euler"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>math::Vector3F</label>
        <link refid="classmath_1_1_vector3_f"/>
      </node>
    </collaborationgraph>
    <location file="apps/px4lib/fsw/public_inc/math/Euler.hpp" line="14" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Euler.hpp" bodystart="13" bodyend="59"/>
    <listofallmembers>
      <member refid="classmath_1_1_vector3_f_1ac7453c791aceeb7fdc04015edd1452d2" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Constrain</name></member>
      <member refid="classmath_1_1_vector3_f_1a2cef237237ce02f191d5b7f3188ad249" prot="protected" virt="non-virtual"><scope>math::Euler</scope><name>data</name></member>
      <member refid="classmath_1_1_vector3_f_1aa840fd28b5c33db3661c522a9eabd5f3" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>EDivide</name></member>
      <member refid="classmath_1_1_vector3_f_1a02b4c56bd36bacc736fe38e820812d77" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>EMult</name></member>
      <member refid="classmath_1_1_euler_1a113a7ea6944508e8909f86e028e34a9b" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Euler</name></member>
      <member refid="classmath_1_1_euler_1a6a81c53f02a4397c24df1f8b82363d0f" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Euler</name></member>
      <member refid="classmath_1_1_vector3_f_1a3f1a08d7e1e1d3a42561e754b2a2e151" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector3_f_1a058f03ba04f7efc8676bd13100b52a22" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Normalize</name></member>
      <member refid="classmath_1_1_vector3_f_1adab19da3690c03abed7861552367c89a" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_vector3_f_1a2260f91fd40ff1af50efdfff3ff84ae2" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator%</name></member>
      <member refid="classmath_1_1_vector3_f_1a0ac1ba8012ca0952497bfd122d274309" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector3_f_1aadb872003b847ac260b9556a31f4d6a6" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector3_f_1af4aa9c7515b77c37a5ecd05aef6d8d18" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector3_f_1a8083b7d960889ff517842dd0978279ef" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector3_f_1a5793dc7fef8e25b63ddda19a0ec6a2b7" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector3_f_1ad444359a3dd346356e46e05eab49cccc" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector3_f_1a1d66df2803745e1ed8bd0076a15392d6" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector3_f_1add97cf91e2dc058f763437561186a10a" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector3_f_1aa113834455b313503260362fe3eafd34" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector3_f_1aa33ba8a65e6425f13344f56eb2fbe1d0" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector3_f_1a39e28fff4a5c9be54478b7fc02741c26" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Transpose</name></member>
      <member refid="classmath_1_1_vector3_f_1a2a4690770bfdc5d4f59fa7db1e2babb2" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Vector3F</name></member>
      <member refid="classmath_1_1_vector3_f_1a08c2ce570a0374105abd3a72027dcdfa" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Vector3F</name></member>
      <member refid="classmath_1_1_vector3_f_1ac9b3f2656373cc61bf9ed109f5c4ab36" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>Zero</name></member>
      <member refid="classmath_1_1_euler_1afb4b1de4e7735cef3237340a589da6fe" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>~Euler</name></member>
      <member refid="classmath_1_1_vector3_f_1afa09c46d484a842c817f2ebd15dddf36" prot="public" virt="non-virtual"><scope>math::Euler</scope><name>~Vector3F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
