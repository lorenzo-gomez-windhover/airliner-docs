<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_vector4_f" kind="class" language="C++" prot="public">
    <compoundname>math::Vector4F</compoundname>
    <derivedcompoundref refid="classmath_1_1_quaternion" prot="public" virt="non-virtual">math::Quaternion</derivedcompoundref>
    <includes refid="_vector4_f_8hpp" local="no">Vector4F.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector4_f_1a6a2bad786764e060a3f64e5b00844e70" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int math::Vector4F::SIZE</definition>
        <argsstring></argsstring>
        <name>SIZE</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>Size of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="13" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" bodystart="13" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector4_f_1a21ddd2a80dcf903b2320a240d92a03f0" compoundref="_vector4_f_8cpp" startline="23" endline="31">operator[]</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector4_f_1a5f03c8a0d30156e49c708a13a9f3e2fb" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector4F::nan</definition>
        <argsstring></argsstring>
        <name>nan</name>
        <briefdescription>
<para>NaN data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="16" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" bodystart="16" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector4_f_1a21ddd2a80dcf903b2320a240d92a03f0" compoundref="_vector4_f_8cpp" startline="23" endline="31">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1afcea5f7164877d2477f3e3d65c8db931" compoundref="_vector4_f_8cpp" startline="6" endline="10">Vector4F</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector4F::data[SIZE]</definition>
        <argsstring>[SIZE]</argsstring>
        <name>data</name>
        <briefdescription>
<para>Data of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="297" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" bodystart="297" bodyend="-1"/>
        <referencedby refid="classmath_1_1_quaternion_1a1698aff5de79353bb6d1f3ee2a761531" compoundref="_quaternion_8cpp" startline="173" endline="195">math::Quaternion::Conjugate</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a9e6b99939aac1061472e3ebef26901d1" compoundref="_quaternion_8cpp" startline="199" endline="221">math::Quaternion::ConjugateInversed</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1ad6fadf7dc6d7d4cef2815ab8e4346758" compoundref="_quaternion_8cpp" startline="336" endline="342">math::Quaternion::copyTo</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a8679d25c81f3446bbea4dc749c89397e" compoundref="_quaternion_8cpp" startline="105" endline="119">math::Quaternion::Derivative</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a37b6abc74a8eae4ed590da0505ff5530" compoundref="_quaternion_8cpp" startline="267" endline="303">math::Quaternion::FromDCM</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1aa2c5e9c7d17a16db898143847c9d1d9f" compoundref="_quaternion_8cpp" startline="307" endline="313">math::Quaternion::FromYaw</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a03ebd294bb77d05248116c50c64c543c" compoundref="_quaternion_8cpp" startline="244" endline="247">math::Quaternion::Imaginary</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1af2f36d8d4a94ed8c5afb60ab7c4a1568" compoundref="_vector4_f_8cpp" startline="45" endline="48">Length</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a05f2a1f07a542364e76f598d43af2b6e" compoundref="_vector4_f_8cpp" startline="51" endline="54">LengthSquared</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a0c6c4022144477dc893ada6a556f9b7d" compoundref="_vector4_f_8cpp" startline="153" endline="161">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a8d6a068cf746ecc3c2ce83fba6ff7d2d" compoundref="_vector4_f_8cpp" startline="164" endline="175">Normalized</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a0628cf699d4982f4e4220f1a99001022" compoundref="_vector4_f_8cpp" startline="91" endline="99">operator*</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1aa6eacb3ec2a72f064d42bd5198b392b2" compoundref="_quaternion_8cpp" startline="79" endline="88">math::Quaternion::operator*</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1adbd4ae7cacde82e997e7ac5f4431618b" compoundref="_vector4_f_8cpp" startline="67" endline="75">operator+</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a488671eefa6cd52aabcc01614de0de41" compoundref="_quaternion_8cpp" startline="124" endline="132">math::Quaternion::operator+</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1aa806f49c4d804130902ea9492dba1de6" compoundref="_vector4_f_8cpp" startline="79" endline="87">operator-</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a1c389f98b49fa1b16e93d2d66692c15c" compoundref="_quaternion_8cpp" startline="149" endline="157">math::Quaternion::operator-</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a0707ffd6de259613547fccc60b7c963b" compoundref="_vector4_f_8cpp" startline="103" endline="111">operator/</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1af7629a79faf9a9c1e72352241be40348" compoundref="_quaternion_8cpp" startline="92" endline="102">math::Quaternion::operator/</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1abae305bb9b5eacd0a70e492ffdc85ea7" compoundref="_quaternion_8cpp" startline="160" endline="169">math::Quaternion::operator=</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a7e7b66d9bdb7eff1bc1d35db9cb87aaa" compoundref="_vector4_f_8cpp" startline="141" endline="150">operator=</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a21ddd2a80dcf903b2320a240d92a03f0" compoundref="_vector4_f_8cpp" startline="23" endline="31">operator[]</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a72c6ae5b8fc714951cd76d3c8d9c56aa" compoundref="_quaternion_8cpp" startline="13" endline="42">math::Quaternion::Quaternion</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a9441818328e8dda2bbda2bd640732007" compoundref="_quaternion_8cpp" startline="224" endline="241">math::Quaternion::RotationMatrix</referencedby>
        <referencedby refid="classmath_1_1_quaternion_1a75c12a1589ec4a1c318d7464cd671076" compoundref="_quaternion_8cpp" startline="251" endline="260">math::Quaternion::ToEuler</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a22316bd59f4e09b751813dbaa65f446c" compoundref="_vector4_f_8cpp" startline="57" endline="63">Zero</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a25ce2bce73fe479a7d196bd12ffb24c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector4F::Vector4F</definition>
        <argsstring>()</argsstring>
        <name>Vector4F</name>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="29" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1afcea5f7164877d2477f3e3d65c8db931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector4F::Vector4F</definition>
        <argsstring>(float A, float B, float C, float D)</argsstring>
        <name>Vector4F</name>
        <param>
          <type>float</type>
          <declname>A</declname>
        </param>
        <param>
          <type>float</type>
          <declname>B</declname>
        </param>
        <param>
          <type>float</type>
          <declname>C</declname>
        </param>
        <param>
          <type>float</type>
          <declname>D</declname>
        </param>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">B</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">C</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">D</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="46" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="6" bodyend="10"/>
        <references refid="classmath_1_1_vector4_f_1a5f03c8a0d30156e49c708a13a9f3e2fb" compoundref="_vector4_f_8hpp" startline="16">nan</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a1ca64a1994a1e7216c1dd76d3d89d24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector4F::~Vector4F</definition>
        <argsstring>()</argsstring>
        <name>~Vector4F</name>
        <briefdescription>
<para>Vector Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="58" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a21ddd2a80dcf903b2320a240d92a03f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; Vector4F::operator[]</definition>
        <argsstring>(uint32 i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="76" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="23" bodyend="31"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
        <references refid="classmath_1_1_vector4_f_1a5f03c8a0d30156e49c708a13a9f3e2fb" compoundref="_vector4_f_8hpp" startline="16">nan</references>
        <references refid="classmath_1_1_vector4_f_1a6a2bad786764e060a3f64e5b00844e70" compoundref="_vector4_f_8hpp" startline="13">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1abddc286ffbf7931565f36e062660cba9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector4F::operator[]</definition>
        <argsstring>(uint32 i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="94" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="34" bodyend="42"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
        <references refid="classmath_1_1_vector4_f_1a6a2bad786764e060a3f64e5b00844e70" compoundref="_vector4_f_8hpp" startline="13">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1af2f36d8d4a94ed8c5afb60ab7c4a1568" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector4F::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vector Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the length of all the values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
length </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="112" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="45" bodyend="48"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
        <referencedby refid="classmath_1_1_vector4_f_1a0c6c4022144477dc893ada6a556f9b7d" compoundref="_vector4_f_8cpp" startline="153" endline="161">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector4_f_1a8d6a068cf746ecc3c2ce83fba6ff7d2d" compoundref="_vector4_f_8cpp" startline="164" endline="175">Normalized</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a05f2a1f07a542364e76f598d43af2b6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector4F::LengthSquared</definition>
        <argsstring>(void) const </argsstring>
        <name>LengthSquared</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vector Length Squared. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the length of all the values of the vector and squares it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
length squared </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="131" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="51" bodyend="54"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
        <referencedby refid="classmath_1_1_quaternion_1af7629a79faf9a9c1e72352241be40348" compoundref="_quaternion_8cpp" startline="92" endline="102">math::Quaternion::operator/</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a22316bd59f4e09b751813dbaa65f446c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector4F::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Zero Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function zeroes out all values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="143" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="57" bodyend="63"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1adbd4ae7cacde82e997e7ac5f4431618b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref></type>
        <definition>const Vector4F Vector4F::operator+</definition>
        <argsstring>(const Vector4F &amp;vecIn) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector4_f_1a25ce2bce73fe479a7d196bd12ffb24c9" kindref="member">Vector4F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="161" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="67" bodyend="75"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1aa806f49c4d804130902ea9492dba1de6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref></type>
        <definition>const Vector4F Vector4F::operator-</definition>
        <argsstring>(const Vector4F &amp;vecIn) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector4_f_1a25ce2bce73fe479a7d196bd12ffb24c9" kindref="member">Vector4F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="179" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="79" bodyend="87"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a0628cf699d4982f4e4220f1a99001022" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref></type>
        <definition>const Vector4F Vector4F::operator*</definition>
        <argsstring>(const float scalar) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="197" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="91" bodyend="99"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a0707ffd6de259613547fccc60b7c963b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref></type>
        <definition>const Vector4F Vector4F::operator/</definition>
        <argsstring>(const float scalar) const </argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Division Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar division behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="215" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="103" bodyend="111"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1ac8a2149a014f31b6be649a017d7cead2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector4F::operator*</definition>
        <argsstring>(const Vector4F &amp;vecIn) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the vector multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector4_f_1a25ce2bce73fe479a7d196bd12ffb24c9" kindref="member">Vector4F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="233" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="115" bodyend="124"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a561a8c6efddcc165d36b7b79c31b1e5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref></type>
        <definition>const Vector4F Vector4F::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Negative Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the negative behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="249" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="128" bodyend="138"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a7e7b66d9bdb7eff1bc1d35db9cb87aaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref> &amp;</type>
        <definition>const Vector4F &amp; Vector4F::operator=</definition>
        <argsstring>(const Vector4F &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Equal Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the set equals behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="265" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="141" bodyend="150"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a0c6c4022144477dc893ada6a556f9b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector4F::Normalize</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalize Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="277" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="153" bodyend="161"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
        <references refid="classmath_1_1_vector4_f_1af2f36d8d4a94ed8c5afb60ab7c4a1568" compoundref="_vector4_f_8cpp" startline="45" endline="48">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector4_f_1a8d6a068cf746ecc3c2ce83fba6ff7d2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector4_f" kindref="compound">Vector4F</ref></type>
        <definition>Vector4F Vector4F::Normalized</definition>
        <argsstring>(void) const </argsstring>
        <name>Normalized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalized Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this vector and returns it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector normalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="293" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector4F.cpp" bodystart="164" bodyend="175"/>
        <references refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" compoundref="_vector4_f_8hpp" startline="297">data</references>
        <references refid="classmath_1_1_vector4_f_1af2f36d8d4a94ed8c5afb60ab7c4a1568" compoundref="_vector4_f_8cpp" startline="45" endline="48">Length</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="119">
        <label>math::Quaternion</label>
        <link refid="classmath_1_1_quaternion"/>
        <childnode refid="118" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>math::Vector4F</label>
        <link refid="classmath_1_1_vector4_f"/>
      </node>
    </inheritancegraph>
    <location file="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" line="10" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector4F.hpp" bodystart="9" bodyend="299"/>
    <listofallmembers>
      <member refid="classmath_1_1_vector4_f_1a0a08d04fc19defa8395566a4552260cb" prot="protected" virt="non-virtual"><scope>math::Vector4F</scope><name>data</name></member>
      <member refid="classmath_1_1_vector4_f_1af2f36d8d4a94ed8c5afb60ab7c4a1568" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector4_f_1a05f2a1f07a542364e76f598d43af2b6e" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>LengthSquared</name></member>
      <member refid="classmath_1_1_vector4_f_1a5f03c8a0d30156e49c708a13a9f3e2fb" prot="private" virt="non-virtual"><scope>math::Vector4F</scope><name>nan</name></member>
      <member refid="classmath_1_1_vector4_f_1a0c6c4022144477dc893ada6a556f9b7d" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>Normalize</name></member>
      <member refid="classmath_1_1_vector4_f_1a8d6a068cf746ecc3c2ce83fba6ff7d2d" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_vector4_f_1a0628cf699d4982f4e4220f1a99001022" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector4_f_1ac8a2149a014f31b6be649a017d7cead2" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector4_f_1adbd4ae7cacde82e997e7ac5f4431618b" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector4_f_1aa806f49c4d804130902ea9492dba1de6" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector4_f_1a561a8c6efddcc165d36b7b79c31b1e5f" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector4_f_1a0707ffd6de259613547fccc60b7c963b" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector4_f_1a7e7b66d9bdb7eff1bc1d35db9cb87aaa" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator=</name></member>
      <member refid="classmath_1_1_vector4_f_1a21ddd2a80dcf903b2320a240d92a03f0" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector4_f_1abddc286ffbf7931565f36e062660cba9" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector4_f_1a6a2bad786764e060a3f64e5b00844e70" prot="private" virt="non-virtual"><scope>math::Vector4F</scope><name>SIZE</name></member>
      <member refid="classmath_1_1_vector4_f_1a25ce2bce73fe479a7d196bd12ffb24c9" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>Vector4F</name></member>
      <member refid="classmath_1_1_vector4_f_1afcea5f7164877d2477f3e3d65c8db931" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>Vector4F</name></member>
      <member refid="classmath_1_1_vector4_f_1a22316bd59f4e09b751813dbaa65f446c" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>Zero</name></member>
      <member refid="classmath_1_1_vector4_f_1a1ca64a1994a1e7216c1dd76d3d89d24d" prot="public" virt="non-virtual"><scope>math::Vector4F</scope><name>~Vector4F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
