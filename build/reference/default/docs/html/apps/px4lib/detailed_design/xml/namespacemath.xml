<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="namespacemath" kind="namespace" language="C++">
    <compoundname>math</compoundname>
    <innerclass refid="classmath_1_1_dcm" prot="public">math::Dcm</innerclass>
    <innerclass refid="classmath_1_1_euler" prot="public">math::Euler</innerclass>
    <innerclass refid="classmath_1_1_low_pass_filter2p" prot="public">math::LowPassFilter2p</innerclass>
    <innerclass refid="classmath_1_1_matrix10_f1" prot="public">math::Matrix10F1</innerclass>
    <innerclass refid="classmath_1_1_matrix10_f10" prot="public">math::Matrix10F10</innerclass>
    <innerclass refid="classmath_1_1_matrix10_f2" prot="public">math::Matrix10F2</innerclass>
    <innerclass refid="classmath_1_1_matrix10_f3" prot="public">math::Matrix10F3</innerclass>
    <innerclass refid="classmath_1_1_matrix10_f6" prot="public">math::Matrix10F6</innerclass>
    <innerclass refid="classmath_1_1_matrix1_f1" prot="public">math::Matrix1F1</innerclass>
    <innerclass refid="classmath_1_1_matrix1_f10" prot="public">math::Matrix1F10</innerclass>
    <innerclass refid="classmath_1_1_matrix1_f2" prot="public">math::Matrix1F2</innerclass>
    <innerclass refid="classmath_1_1_matrix1_f3" prot="public">math::Matrix1F3</innerclass>
    <innerclass refid="classmath_1_1_matrix1_f6" prot="public">math::Matrix1F6</innerclass>
    <innerclass refid="classmath_1_1_matrix2_f10" prot="public">math::Matrix2F10</innerclass>
    <innerclass refid="classmath_1_1_matrix2_f2" prot="public">math::Matrix2F2</innerclass>
    <innerclass refid="classmath_1_1_matrix3_f10" prot="public">math::Matrix3F10</innerclass>
    <innerclass refid="classmath_1_1_matrix3_f3" prot="public">math::Matrix3F3</innerclass>
    <innerclass refid="classmath_1_1_matrix4_f4" prot="public">math::Matrix4F4</innerclass>
    <innerclass refid="classmath_1_1_matrix6_f1" prot="public">math::Matrix6F1</innerclass>
    <innerclass refid="classmath_1_1_matrix6_f10" prot="public">math::Matrix6F10</innerclass>
    <innerclass refid="classmath_1_1_matrix6_f6" prot="public">math::Matrix6F6</innerclass>
    <innerclass refid="classmath_1_1_quaternion" prot="public">math::Quaternion</innerclass>
    <innerclass refid="classmath_1_1_vector10_f" prot="public">math::Vector10F</innerclass>
    <innerclass refid="classmath_1_1_vector1_f" prot="public">math::Vector1F</innerclass>
    <innerclass refid="classmath_1_1_vector2_f" prot="public">math::Vector2F</innerclass>
    <innerclass refid="classmath_1_1_vector3_f" prot="public">math::Vector3F</innerclass>
    <innerclass refid="classmath_1_1_vector4_f" prot="public">math::Vector4F</innerclass>
    <innerclass refid="classmath_1_1_vector6_f" prot="public">math::Vector6F</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacemath_1ab712184f49d2f94c0b5e6122cda72ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float &amp; math::min</definition>
        <argsstring>(const float &amp;a, const float &amp;b)</argsstring>
        <name>min</name>
        <param>
          <type>const float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Float Min. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function return the smaller of two passed floats</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to compare</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of two arguments </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="51" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="51" bodyend="54"/>
        <referencedby refid="classmath_1_1_vector1_f_1a2bfb0e38770f33350b08d6daaeb39ad0" compoundref="_vector1_f_8cpp" startline="153" endline="163">math::Vector1F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector6_f_1a76e2ef41a15a1f979a3ad31ee020c1b5" compoundref="_vector6_f_8cpp" startline="224" endline="234">math::Vector6F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a8c62c5e0b8bdda20de50047dfff44ebb" compoundref="_vector10_f_8cpp" startline="265" endline="275">math::Vector10F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1ad1cc48175067ed3483dc72e6de292c0f" compoundref="_vector2_f_8cpp" startline="163" endline="173">math::Vector2F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1ac7453c791aceeb7fdc04015edd1452d2" compoundref="_vector3_f_8cpp" startline="201" endline="211">math::Vector3F::Constrain</referencedby>
        <referencedby refid="geo__mag__declination_8c_1a8bb6f4bfbb74343276607f649c1a8157" compoundref="geo__mag__declination_8c" startline="79" endline="95">get_lookup_table_index</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1ac016610696dca7e9f93b7f3686c26d22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float &amp; math::max</definition>
        <argsstring>(const float &amp;a, const float &amp;b)</argsstring>
        <name>max</name>
        <param>
          <type>const float &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Float Max. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function return the larger of two passed floats</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">b</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to compare</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of two arguments </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="56" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="56" bodyend="59"/>
        <referencedby refid="classmath_1_1_vector1_f_1a2bfb0e38770f33350b08d6daaeb39ad0" compoundref="_vector1_f_8cpp" startline="153" endline="163">math::Vector1F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector6_f_1a76e2ef41a15a1f979a3ad31ee020c1b5" compoundref="_vector6_f_8cpp" startline="224" endline="234">math::Vector6F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector10_f_1a8c62c5e0b8bdda20de50047dfff44ebb" compoundref="_vector10_f_8cpp" startline="265" endline="275">math::Vector10F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector2_f_1ad1cc48175067ed3483dc72e6de292c0f" compoundref="_vector2_f_8cpp" startline="163" endline="173">math::Vector2F::Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector3_f_1ac7453c791aceeb7fdc04015edd1452d2" compoundref="_vector3_f_8cpp" startline="201" endline="211">math::Vector3F::Constrain</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1ac640deca98506dd70061399b33389b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float &amp;</type>
        <definition>const float &amp; math::constrain</definition>
        <argsstring>(const float &amp;val, const float &amp;min_val, const float &amp;max_val)</argsstring>
        <name>constrain</name>
        <param>
          <type>const float &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>min_val</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>max_val</declname>
        </param>
        <briefdescription>
<para>Constrain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function constrains a value between a passed range.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float index of value to constrain</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="61" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="61" bodyend="64"/>
        <referencedby refid="namespacemath_1afe8637f5d6aac6f4abe9c34ea91a7657" compoundref="_expo_8cpp" startline="48" endline="62">deadzonef</referencedby>
        <referencedby refid="namespacemath_1a7d3c974bc44eeda91588c8e8b86d411c" compoundref="_expo_8cpp" startline="36" endline="44">expof</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1a94a0942312117f6b8bb4b2bbde838fc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float math::radians</definition>
        <argsstring>(float degrees)</argsstring>
        <name>radians</name>
        <param>
          <type>float</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
<para>Float Degrees To Radians. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function converts degrees to radians</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float value in degrees</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in radians </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="66" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="66" bodyend="69"/>
        <references refid="_limits_8cpp_1ab9c3c609e1d02430671de0a109410ac8" compoundref="_limits_8cpp" startline="49">M_PI_F</references>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1a0d099da0b83c835eedae5aed0b3c30d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double math::radians</definition>
        <argsstring>(double degrees)</argsstring>
        <name>radians</name>
        <param>
          <type>double</type>
          <declname>degrees</declname>
        </param>
        <briefdescription>
<para>Double Degrees To Radians. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function converts degrees to radians</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>A #double value in degrees</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in radians </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="71" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1aa3c3cedf87cb1b7d665ade0f8edfd790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float math::degrees</definition>
        <argsstring>(float radians)</argsstring>
        <name>degrees</name>
        <param>
          <type>float</type>
          <declname>radians</declname>
        </param>
        <briefdescription>
<para>Float Radians To Degrees. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function converts radians to degrees</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float value in radians</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in degrees </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="76" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="76" bodyend="79"/>
        <references refid="_limits_8cpp_1ab9c3c609e1d02430671de0a109410ac8" compoundref="_limits_8cpp" startline="49">M_PI_F</references>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1a0ff2597f514f20f73fb69abab5e59c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double math::degrees</definition>
        <argsstring>(double radians)</argsstring>
        <name>degrees</name>
        <param>
          <type>double</type>
          <declname>radians</declname>
        </param>
        <briefdescription>
<para>Double Radians To Degrees. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function converts radians to degrees</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">degrees</parametername>
</parameternamelist>
<parameterdescription>
<para>A #double value in radians</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
in degrees </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Limits.cpp" line="81" column="1" bodyfile="apps/px4lib/fsw/src/math/Limits.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1af6472d65e05a99aad1719a6a2524f17e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int math::signf</definition>
        <argsstring>(float val)</argsstring>
        <name>signf</name>
        <param>
          <type>float</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sign Function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the sign of a number</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
#int of the correct sign </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Expo.cpp" line="20" column="1" bodyfile="apps/px4lib/fsw/src/math/Expo.cpp" bodystart="20" bodyend="34"/>
        <referencedby refid="namespacemath_1afe8637f5d6aac6f4abe9c34ea91a7657" compoundref="_expo_8cpp" startline="48" endline="62">deadzonef</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1a7d3c974bc44eeda91588c8e8b86d411c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float math::expof</definition>
        <argsstring>(const float &amp;value, const float &amp;e)</argsstring>
        <name>expof</name>
        <param>
          <type>const float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Exponential TODO. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of #float to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">e</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponential?</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Expo.cpp" line="36" column="1" bodyfile="apps/px4lib/fsw/src/math/Expo.cpp" bodystart="36" bodyend="44"/>
        <references refid="namespacemath_1ac640deca98506dd70061399b33389b4b" compoundref="_limits_8cpp" startline="61" endline="64">constrain</references>
        <referencedby refid="namespacemath_1ad6b3ce89c9f3b8e96d80a98e950ce3a8" compoundref="_expo_8cpp" startline="66" endline="73">expof_deadzone</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1afe8637f5d6aac6f4abe9c34ea91a7657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float math::deadzonef</definition>
        <argsstring>(const float &amp;value, const float &amp;dz)</argsstring>
        <name>deadzonef</name>
        <param>
          <type>const float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
<para>Deadzone. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function gets the deadzone of a float value.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of #float to get deadzone of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dz</parametername>
</parameternamelist>
<parameterdescription>
<para>Desired deadzone for this value.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
deadzone for this value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Expo.cpp" line="48" column="1" bodyfile="apps/px4lib/fsw/src/math/Expo.cpp" bodystart="48" bodyend="62"/>
        <references refid="namespacemath_1ac640deca98506dd70061399b33389b4b" compoundref="_limits_8cpp" startline="61" endline="64">constrain</references>
        <references refid="namespacemath_1af6472d65e05a99aad1719a6a2524f17e" compoundref="_expo_8cpp" startline="20" endline="34">signf</references>
        <referencedby refid="namespacemath_1ad6b3ce89c9f3b8e96d80a98e950ce3a8" compoundref="_expo_8cpp" startline="66" endline="73">expof_deadzone</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1ad6b3ce89c9f3b8e96d80a98e950ce3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const float</type>
        <definition>const float math::expof_deadzone</definition>
        <argsstring>(const float &amp;value, const float &amp;e, const float &amp;dz)</argsstring>
        <name>expof_deadzone</name>
        <param>
          <type>const float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>dz</declname>
        </param>
        <briefdescription>
<para>Exponential TODO. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of #float to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">e</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponential?</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/src/math/Expo.cpp" line="66" column="1" bodyfile="apps/px4lib/fsw/src/math/Expo.cpp" bodystart="66" bodyend="73"/>
        <references refid="namespacemath_1afe8637f5d6aac6f4abe9c34ea91a7657" compoundref="_expo_8cpp" startline="48" endline="62">deadzonef</references>
        <references refid="namespacemath_1a7d3c974bc44eeda91588c8e8b86d411c" compoundref="_expo_8cpp" startline="36" endline="44">expof</references>
      </memberdef>
      <memberdef kind="function" id="namespacemath_1ac6dc26ccfdac43913161589bf3413ba9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const float</type>
        <definition>const float math::gradual</definition>
        <argsstring>(const float &amp;value, const float &amp;x_low, const float &amp;x_high, const float &amp;y_low, const float &amp;y_high)</argsstring>
        <name>gradual</name>
        <param>
          <type>const float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>x_low</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>x_high</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>y_low</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>y_high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Functions.hpp" line="3" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Functions.hpp" bodystart="3" bodyend="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="apps/px4lib/fsw/src/math/filters/LowPassFilter2p.cpp" line="47" column="1"/>
  </compounddef>
</doxygen>
