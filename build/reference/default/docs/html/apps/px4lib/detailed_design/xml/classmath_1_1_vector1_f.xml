<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classmath_1_1_vector1_f" kind="class" language="C++" prot="public">
    <compoundname>math::Vector1F</compoundname>
    <includes refid="_vector1_f_8hpp" local="no">Vector1F.hpp</includes>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector1_f_1a3d7bd4fac5cda38c28912b00644c34b8" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int math::Vector1F::SIZE</definition>
        <argsstring></argsstring>
        <name>SIZE</name>
        <initializer>= 1</initializer>
        <briefdescription>
<para>Size of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="14" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" bodystart="14" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector1_f_1a4106bd002c2f7032c18a030c9ac979e0" compoundref="_vector1_f_8cpp" startline="23" endline="31">operator[]</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector1F::data[SIZE]</definition>
        <argsstring>[SIZE]</argsstring>
        <name>data</name>
        <briefdescription>
<para>Data of vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="17" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector1_f_1a2bfb0e38770f33350b08d6daaeb39ad0" compoundref="_vector1_f_8cpp" startline="153" endline="163">Constrain</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a8a74dce4f38dd09e894f3a5da25c1cbf" compoundref="_vector1_f_8cpp" startline="143" endline="150">EDivide</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a5aa5f74197f7c2517db6bb05cbd01834" compoundref="_vector1_f_8cpp" startline="133" endline="140">EMult</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1afdf942052cbe3a126eb068446f4e3e54" compoundref="_vector1_f_8cpp" startline="45" endline="48">Length</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1ab2c09c24ebbee2cb93a2c46e6bfc4cd1" compoundref="_vector1_f_8cpp" startline="177" endline="182">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a2513e788d4561e738d4d98971de7f1f5" compoundref="_vector1_f_8cpp" startline="166" endline="174">Normalized</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1aef1140a441e817c5891f9e2a6dd0699c" compoundref="_vector1_f_8cpp" startline="85" endline="90">operator*</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a6586d058db38b832a1d733ba4a56e440" compoundref="_vector1_f_8cpp" startline="58" endline="63">operator+</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a61fcbb94bd5a15b83ae666791d808e20" compoundref="_vector1_f_8cpp" startline="76" endline="81">operator-</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a3e2c10f11a1153635419393e76203774" compoundref="_vector1_f_8cpp" startline="94" endline="99">operator/</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a4106bd002c2f7032c18a030c9ac979e0" compoundref="_vector1_f_8cpp" startline="23" endline="31">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a0a05a51f9e5da7785dbf47ac1fcaf2f6" compoundref="_vector1_f_8cpp" startline="123" endline="130">pow</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a9b77cd2744ec203db85c3d03bd63c950" compoundref="_vector1_f_8cpp" startline="51" endline="54">Zero</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classmath_1_1_vector1_f_1a9805118457b2f4745e1f45ddc690bc11" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float math::Vector1F::nan</definition>
        <argsstring></argsstring>
        <name>nan</name>
        <briefdescription>
<para>NaN data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="20" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" bodystart="20" bodyend="-1"/>
        <referencedby refid="classmath_1_1_vector1_f_1a4106bd002c2f7032c18a030c9ac979e0" compoundref="_vector1_f_8cpp" startline="23" endline="31">operator[]</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a8d80ff17c9982e520ab376e239470cfe" compoundref="_vector1_f_8cpp" startline="6" endline="10">Vector1F</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector1F::Vector1F</definition>
        <argsstring>()</argsstring>
        <name>Vector1F</name>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="33" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a8d80ff17c9982e520ab376e239470cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector1F::Vector1F</definition>
        <argsstring>(float A)</argsstring>
        <name>Vector1F</name>
        <param>
          <type>float</type>
          <declname>A</declname>
        </param>
        <briefdescription>
<para>Vector Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes the object with passed values.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">A</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float specifying a value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="47" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="6" bodyend="10"/>
        <references refid="classmath_1_1_vector1_f_1a9805118457b2f4745e1f45ddc690bc11" compoundref="_vector1_f_8hpp" startline="20">nan</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a63ead4ddc65f531973256056f0371712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector1F::~Vector1F</definition>
        <argsstring>()</argsstring>
        <name>~Vector1F</name>
        <briefdescription>
<para>Vector Destructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function destructs the object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="59" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a4106bd002c2f7032c18a030c9ac979e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float &amp; Vector1F::operator[]</definition>
        <argsstring>(uint32 i)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="77" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="23" bodyend="31"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <references refid="classmath_1_1_vector1_f_1a9805118457b2f4745e1f45ddc690bc11" compoundref="_vector1_f_8hpp" startline="20">nan</references>
        <references refid="classmath_1_1_vector1_f_1a3d7bd4fac5cda38c28912b00644c34b8" compoundref="_vector1_f_8hpp" startline="14">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a54a11979cfd3b39a32a7f4d1e6b6b15f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector1F::operator[]</definition>
        <argsstring>(uint32 i) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Index Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the [] behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
at passed index of the vector or NaN if out of bounds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="95" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="34" bodyend="42"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <references refid="classmath_1_1_vector1_f_1a3d7bd4fac5cda38c28912b00644c34b8" compoundref="_vector1_f_8hpp" startline="14">SIZE</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1afdf942052cbe3a126eb068446f4e3e54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector1F::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Vector Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function calculates the length of all the values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> specifying an index</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
length </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="113" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="45" bodyend="48"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <referencedby refid="classmath_1_1_vector1_f_1ab2c09c24ebbee2cb93a2c46e6bfc4cd1" compoundref="_vector1_f_8cpp" startline="177" endline="182">Normalize</referencedby>
        <referencedby refid="classmath_1_1_vector1_f_1a2513e788d4561e738d4d98971de7f1f5" compoundref="_vector1_f_8cpp" startline="166" endline="174">Normalized</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a9b77cd2744ec203db85c3d03bd63c950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector1F::Zero</definition>
        <argsstring>(void)</argsstring>
        <name>Zero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Zero Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function zeroes out all values of the vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="125" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="51" bodyend="54"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <referencedby refid="class_stats1_f_1a5f44bed8ef81004f56fc87757dd24f81" compoundref="_stats1_f_8hpp" startline="58" endline="63">Stats1F::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a6586d058db38b832a1d733ba4a56e440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::operator+</definition>
        <argsstring>(const Vector1F &amp;vecIn)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Addition Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the addition behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" kindref="member">Vector1F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="143" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="58" bodyend="63"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a61fcbb94bd5a15b83ae666791d808e20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::operator-</definition>
        <argsstring>(const Vector1F &amp;vecIn)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" kindref="member">Vector1F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="161" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="76" bodyend="81"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1aa10285c40b0b8bdcdb993d5b637db46e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F math::Vector1F::operator-</definition>
        <argsstring>(const Vector1F &amp;vecIn) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Subtraction Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the subtraction behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" kindref="member">Vector1F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the subtraction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1aef1140a441e817c5891f9e2a6dd0699c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::operator*</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator*</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="197" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="85" bodyend="90"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a3e2c10f11a1153635419393e76203774" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::operator/</definition>
        <argsstring>(const float scalar)</argsstring>
        <name>operator/</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Scalar Division Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the scalar division behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="215" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="94" bodyend="99"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a0a05a51f9e5da7785dbf47ac1fcaf2f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::pow</definition>
        <argsstring>(const float scalar) const </argsstring>
        <name>pow</name>
        <param>
          <type>const float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>Vector Power. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function raises the vector to the passed power.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the power  </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="233" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="123" bodyend="130"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <referencedby refid="class_stats1_f_1ae77c4b791f0986a80d3677ec1cb46861" compoundref="_stats1_f_8hpp" startline="130" endline="133">Stats1F::getStdDev</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a9ea4315d11161d60aac6aff3c7985899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector1F::operator*</definition>
        <argsstring>(const Vector1F &amp;vecIn)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the vector multiplication behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" kindref="member">Vector1F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="251" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="103" bodyend="110"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a2ef2b31ecef8b2bf0aeb1af5cd4b8291" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::operator-</definition>
        <argsstring>() const </argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Negative Operator Override. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function overrides the negative behavior when used on this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="267" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="113" bodyend="120"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a5aa5f74197f7c2517db6bb05cbd01834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::EMult</definition>
        <argsstring>(const Vector1F &amp;vecIn)</argsstring>
        <name>EMult</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref> &amp;</type>
          <declname>vecIn</declname>
        </param>
        <briefdescription>
<para>Vector Multiplication. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function multiplies this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vecIn</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" kindref="member">Vector1F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the multiplication </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="285" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="133" bodyend="140"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <referencedby refid="class_stats1_f_1aff92f97bd73817dcaae2d0eb880b16bc" compoundref="_stats1_f_8hpp" startline="111" endline="114">Stats1F::getVar</referencedby>
        <referencedby refid="class_stats1_f_1aaec077bfefae6211c617cf8811ba6907" compoundref="_stats1_f_8cpp" startline="15" endline="20">Stats1F::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a2bfb0e38770f33350b08d6daaeb39ad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector1F::Constrain</definition>
        <argsstring>(uint32 i, float min, float max)</argsstring>
        <name>Constrain</name>
        <param>
          <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Vector Constrain. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function constrains a vector value between a passed range.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">i</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref> index of value to constrain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">min</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float of min value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">max</parametername>
</parameternamelist>
<parameterdescription>
<para>A #float of max value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="301" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="153" bodyend="163"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <references refid="namespacemath_1ac016610696dca7e9f93b7f3686c26d22" compoundref="_limits_8cpp" startline="56" endline="59">math::max</references>
        <references refid="namespacemath_1ab712184f49d2f94c0b5e6122cda72ac4" compoundref="_limits_8cpp" startline="51" endline="54">math::min</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a2513e788d4561e738d4d98971de7f1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>Vector1F Vector1F::Normalized</definition>
        <argsstring>(void)</argsstring>
        <name>Normalized</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalized Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this vector and returns it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
vector normalized </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="317" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="166" bodyend="174"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <references refid="classmath_1_1_vector1_f_1afdf942052cbe3a126eb068446f4e3e54" compoundref="_vector1_f_8cpp" startline="45" endline="48">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1ab2c09c24ebbee2cb93a2c46e6bfc4cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector1F::Normalize</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Normalize Vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function normalizes this object.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="329" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="177" bodyend="182"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
        <references refid="classmath_1_1_vector1_f_1afdf942052cbe3a126eb068446f4e3e54" compoundref="_vector1_f_8cpp" startline="45" endline="48">Length</references>
      </memberdef>
      <memberdef kind="function" id="classmath_1_1_vector1_f_1a8a74dce4f38dd09e894f3a5da25c1cbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref></type>
        <definition>const Vector1F Vector1F::EDivide</definition>
        <argsstring>(const Vector1F &amp;v) const </argsstring>
        <name>EDivide</name>
        <param>
          <type>const <ref refid="classmath_1_1_vector1_f" kindref="compound">Vector1F</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Vector Division. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function divides this object with the passed vector.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">v</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" kindref="member">Vector1F</ref> to perform this operation on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
of the division </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="347" column="1" bodyfile="apps/px4lib/fsw/src/math/Vector1F.cpp" bodystart="143" bodyend="150"/>
        <references refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" compoundref="_vector1_f_8hpp" startline="17">data</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" line="10" column="1" bodyfile="apps/px4lib/fsw/public_inc/math/Vector1F.hpp" bodystart="9" bodyend="351"/>
    <listofallmembers>
      <member refid="classmath_1_1_vector1_f_1a2bfb0e38770f33350b08d6daaeb39ad0" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Constrain</name></member>
      <member refid="classmath_1_1_vector1_f_1a15e8dace74d123bcea12363bbabe653e" prot="private" virt="non-virtual"><scope>math::Vector1F</scope><name>data</name></member>
      <member refid="classmath_1_1_vector1_f_1a8a74dce4f38dd09e894f3a5da25c1cbf" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>EDivide</name></member>
      <member refid="classmath_1_1_vector1_f_1a5aa5f74197f7c2517db6bb05cbd01834" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>EMult</name></member>
      <member refid="classmath_1_1_vector1_f_1afdf942052cbe3a126eb068446f4e3e54" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Length</name></member>
      <member refid="classmath_1_1_vector1_f_1a9805118457b2f4745e1f45ddc690bc11" prot="private" virt="non-virtual"><scope>math::Vector1F</scope><name>nan</name></member>
      <member refid="classmath_1_1_vector1_f_1ab2c09c24ebbee2cb93a2c46e6bfc4cd1" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Normalize</name></member>
      <member refid="classmath_1_1_vector1_f_1a2513e788d4561e738d4d98971de7f1f5" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Normalized</name></member>
      <member refid="classmath_1_1_vector1_f_1aef1140a441e817c5891f9e2a6dd0699c" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector1_f_1a9ea4315d11161d60aac6aff3c7985899" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator*</name></member>
      <member refid="classmath_1_1_vector1_f_1a6586d058db38b832a1d733ba4a56e440" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator+</name></member>
      <member refid="classmath_1_1_vector1_f_1a61fcbb94bd5a15b83ae666791d808e20" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector1_f_1aa10285c40b0b8bdcdb993d5b637db46e" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector1_f_1a2ef2b31ecef8b2bf0aeb1af5cd4b8291" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator-</name></member>
      <member refid="classmath_1_1_vector1_f_1a3e2c10f11a1153635419393e76203774" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator/</name></member>
      <member refid="classmath_1_1_vector1_f_1a4106bd002c2f7032c18a030c9ac979e0" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector1_f_1a54a11979cfd3b39a32a7f4d1e6b6b15f" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>operator[]</name></member>
      <member refid="classmath_1_1_vector1_f_1a0a05a51f9e5da7785dbf47ac1fcaf2f6" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>pow</name></member>
      <member refid="classmath_1_1_vector1_f_1a3d7bd4fac5cda38c28912b00644c34b8" prot="private" virt="non-virtual"><scope>math::Vector1F</scope><name>SIZE</name></member>
      <member refid="classmath_1_1_vector1_f_1a562e8d74c69863a491e4fcf68233e18a" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Vector1F</name></member>
      <member refid="classmath_1_1_vector1_f_1a8d80ff17c9982e520ab376e239470cfe" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Vector1F</name></member>
      <member refid="classmath_1_1_vector1_f_1a9b77cd2744ec203db85c3d03bd63c950" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>Zero</name></member>
      <member refid="classmath_1_1_vector1_f_1a63ead4ddc65f531973256056f0371712" prot="public" virt="non-virtual"><scope>math::Vector1F</scope><name>~Vector1F</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
