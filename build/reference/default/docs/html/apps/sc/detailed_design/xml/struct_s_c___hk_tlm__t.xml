<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_s_c___hk_tlm__t" kind="struct" language="C++" prot="public">
    <compoundname>SC_HkTlm_t</compoundname>
    <includes refid="sc__msg_8h" local="no">sc_msg.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a0da5cc93bececa281a5a187732d5a6ca" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::TlmHeader[CFE_SB_TLM_HDR_SIZE]</definition>
        <argsstring>[CFE_SB_TLM_HDR_SIZE]</argsstring>
        <name>TlmHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="83" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a4dbfbce3d32917f71f1ea3dd0bac3ff3" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::AtsNumber</definition>
        <argsstring></argsstring>
        <name>AtsNumber</name>
        <briefdescription>
<para>current ATS number 1 = ATS A, 2 = ATS B </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000001"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AtsNumber</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="84" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a231c09d7cfedb0ec22720454846d8379" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::AtpState</definition>
        <argsstring></argsstring>
        <name>AtpState</name>
        <briefdescription>
<para>current ATP state valid values are: 2 = IDLE, 5 = EXECUTING </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000002"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AtpState</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="86" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1af3e38cc3dae65212d784bb17637f228c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::ContinueAtsOnFailureFlag</definition>
        <argsstring></argsstring>
        <name>ContinueAtsOnFailureFlag</name>
        <briefdescription>
<para>In the event of ATS execution failure (ats command fails checksum) , the ATS execution will continue if this flag is set to TRUE and will stop if this flag is set to FALSE. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000003"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_ContOnFail</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="88" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a7be4d8260e92274e0a8c83e56ba20a81" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::CmdErrCtr</definition>
        <argsstring></argsstring>
        <name>CmdErrCtr</name>
        <briefdescription>
<para>Counts Request Errors. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000004"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_CMDEC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="93" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1ae4cee98cab5ce7502850b7d5117fe5b7" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::CmdCtr</definition>
        <argsstring></argsstring>
        <name>CmdCtr</name>
        <briefdescription>
<para>Counts Ground Requests. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000005"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_CMDPC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="95" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="95" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1acd53c51229bf40cb9abe267386fba3c6" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1adde6aaee8457bee49c2a92621fe22b79" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint8</ref></type>
        <definition>uint8 SC_HkTlm_t::Padding8</definition>
        <argsstring></argsstring>
        <name>Padding8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000006"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_Pad8</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="97" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a2afea1de8626cb8968c66408c10fb1d3" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::SwitchPendFlag</definition>
        <argsstring></argsstring>
        <name>SwitchPendFlag</name>
        <briefdescription>
<para>is an ats switch pending? 0 = NO, 1 = YES This means that the ATS switch is waiting until a safe time </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000007"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_SwitchPendFlag</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="99" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1aa04019c2e4965fede2c4e8fab73be4d1" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::NumRtsActive</definition>
        <argsstring></argsstring>
        <name>NumRtsActive</name>
        <briefdescription>
<para>number of RTSs currently active </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000008"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_NumRtsActive</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="102" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1ae8b248954067ee2dd9d33d326b12d14f" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsNumber</definition>
        <argsstring></argsstring>
        <name>RtsNumber</name>
        <briefdescription>
<para>next RTS number </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000009"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_NextRtsNum</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="104" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="104" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a2a7dce79469b49c7dc37a22e48ce0a2b" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsActiveCtr</definition>
        <argsstring></argsstring>
        <name>RtsActiveCtr</name>
        <briefdescription>
<para>Increments when an RTS is started without error. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000010"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RTSACTPC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="106" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="106" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a594c2b12b2500b9c19043a3428ec6257" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsActiveErrCtr</definition>
        <argsstring></argsstring>
        <name>RtsActiveErrCtr</name>
        <briefdescription>
<para>Increments when an attempt to start an RTS fails. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000011"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RTSACTEC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="108" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="108" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1ae0ddf46bc3d248e846ff0fe1bee37c49" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::AtsCmdCtr</definition>
        <argsstring></argsstring>
        <name>AtsCmdCtr</name>
        <briefdescription>
<para>Total ATS cmd cnter counts commands sent by the ATS. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000012"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_ATSCMDPC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="110" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="110" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1ad328c0e620f8e26718c7c36e816832c1" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::AtsCmdErrCtr</definition>
        <argsstring></argsstring>
        <name>AtsCmdErrCtr</name>
        <briefdescription>
<para>Total ATS cmd Error ctr command errors in the ATS. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000013"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_ATSCMDEC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="112" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="112" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1ae0648dbdffe626274138d8998b8979de" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsCmdCtr</definition>
        <argsstring></argsstring>
        <name>RtsCmdCtr</name>
        <briefdescription>
<para>Counts TOTAL rts cmds that were sent out from ALL active RTSs. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000014"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RTSCMDPC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="114" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="114" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a584a9e4be062858d4e3f27eaafac15cb" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsCmdErrCtr</definition>
        <argsstring></argsstring>
        <name>RtsCmdErrCtr</name>
        <briefdescription>
<para>Counts TOTAL number of errs from ALL RTSs that are active. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000015"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RTSCMDEC</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="116" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="116" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a45f55989dc33f0957454fd0f2aa5029c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::LastAtsErrSeq</definition>
        <argsstring></argsstring>
        <name>LastAtsErrSeq</name>
        <briefdescription>
<para>Last ATS Errant Sequence Num Values: 1 or 2. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000016"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AtsLastErrSeq</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="118" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="118" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a6cb0cd6396faba588ec646fc0831348f" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::LastAtsErrCmd</definition>
        <argsstring></argsstring>
        <name>LastAtsErrCmd</name>
        <briefdescription>
<para>Last ATS Errant Command Num. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000017"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AtsLastErrCmd</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="120" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="120" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a316ea7d815cd66c1a5dbc01c6e7f5186" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::LastRtsErrSeq</definition>
        <argsstring></argsstring>
        <name>LastRtsErrSeq</name>
        <briefdescription>
<para>Last RTS Errant Sequence Num. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000018"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RtsLastErrSeq</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="122" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="122" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1acdc4cfe8695fce34aebcb75c1246d8c4" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::LastRtsErrCmd</definition>
        <argsstring></argsstring>
        <name>LastRtsErrCmd</name>
        <briefdescription>
<para>The OFFSET in the RTS buffer of the command that had an error It will be a WORD value i.e. 1st command had an error, this value would be 0, if the 2nd command started at int8 10 in the buffer, this value would be 5. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000019"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RtsLastErrCmd</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="124" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a264cc0d82b1843d5c552f1fb66e05d5d" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::AppendCmdArg</definition>
        <argsstring></argsstring>
        <name>AppendCmdArg</name>
        <briefdescription>
<para>ATS selection argument from most recent Append ATS command. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000020"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AppendCmdArg</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="129" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="129" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a22ca2f892d162a5616bda2c877e3ec2d" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::AppendEntryCount</definition>
        <argsstring></argsstring>
        <name>AppendEntryCount</name>
        <briefdescription>
<para>Number of cmd entries in current Append ATS table. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000021"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AppendEntryCount</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="131" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="131" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1abfae9256e2fe7422e0b9659b1e8709c1" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::AppendByteCount</definition>
        <argsstring></argsstring>
        <name>AppendByteCount</name>
        <briefdescription>
<para>Size of cmd entries in current Append ATS table. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000022"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AppendByteCount</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="133" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="133" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a367c05d54974bb21161c4fff4f8842a6" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::AppendLoadCount</definition>
        <argsstring></argsstring>
        <name>AppendLoadCount</name>
        <briefdescription>
<para>Total number of Append ATS table loads. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000023"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AppendLoadCount</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="135" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="135" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a419d1a00962808bbbdf92a6b341e7a2c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 SC_HkTlm_t::AtpCmdNumber</definition>
        <argsstring></argsstring>
        <name>AtpCmdNumber</name>
        <briefdescription>
<para>current command number </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000024"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AtpCmdNum</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="137" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="137" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1aa999c6b77a4067fc177f3ee8bdfb0ac9" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 SC_HkTlm_t::AtpFreeBytes[SC_NUMBER_OF_ATS]</definition>
        <argsstring>[SC_NUMBER_OF_ATS]</argsstring>
        <name>AtpFreeBytes</name>
        <briefdescription>
<para>Free Bytes in each ATS. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000025"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_AtpFreeBytes</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="139" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="139" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a8348e82c31df1eea113955a2a72ed84d" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 SC_HkTlm_t::NextRtsTime</definition>
        <argsstring></argsstring>
        <name>NextRtsTime</name>
        <briefdescription>
<para>next RTS cmd Absolute Time </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000026"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_NextRtsTime</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="141" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="141" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a030380bc4efd441b56082c71eda8dea2" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 SC_HkTlm_t::NextAtsTime</definition>
        <argsstring></argsstring>
        <name>NextAtsTime</name>
        <briefdescription>
<para>Next ATS Command Time (seconds) </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000027"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_NextAtsTime</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="143" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="143" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1a6d8535e40d5782ae4a40da2cb49e8b3b" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsExecutingStatus[(SC_NUMBER_OF_RTS+15)/16]</definition>
        <argsstring>[(SC_NUMBER_OF_RTS+15)/16]</argsstring>
        <name>RtsExecutingStatus</name>
        <briefdescription>
<para>RTS executing status bit map where each uint16 represents 16 RTS numbers. Note: array index numbers and bit numbers use base zero indexing, but RTS numbers use base one indexing. Thus, the LSB (bit zero) of uint16 array index zero represents RTS number 1, and bit one of uint16 array index zero represents RTS number 2, etc. If an RTS is IDLE, then the corresponding bit is zero. If an RTS is EXECUTING, then the corresponding bit is one. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000028"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RtsExecuting</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="146" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="146" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="struct_s_c___hk_tlm__t_1ad620143fc6f6bd0648523ebc506b8e0d" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
        <definition>uint16 SC_HkTlm_t::RtsDisabledStatus[(SC_NUMBER_OF_RTS+15)/16]</definition>
        <argsstring>[(SC_NUMBER_OF_RTS+15)/16]</argsstring>
        <name>RtsDisabledStatus</name>
        <briefdescription>
<para>RTS disabled status bit map where each uint16 represents 16 RTS numbers. Note: array index numbers and bit numbers use base zero indexing, but RTS numbers use base one indexing. Thus, the LSB (bit zero) of uint16 array index zero represents RTS number 1, and bit one of uint16 array index zero represents RTS number 2, etc. If an RTS is ENABLED, then the corresponding bit is zero. If an RTS is DISABLED, then the corresponding bit is one. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="cfssctlmmnems_1_cfssctlmmnems000029"><xreftitle>Telemetry Mnemonic(s)</xreftitle><xrefdescription><para><bold><computeroutput>$sc_$cpu_SC_RtsDisabled</computeroutput> </bold> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/sc/fsw/src/sc_msg.h" line="153" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="153" bodyend="-1"/>
        <referencedby refid="sc__cmds_8h_1a4554418b6a6846e29de6ec3b1519b213" compoundref="sc__cmds_8c" startline="476" endline="560">SC_SendHkPacket</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="cfssctlm_1_cfssctlm000001"><xreftitle>Name</xreftitle><xrefdescription><para>Housekeeping Packet Structure </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="apps/sc/fsw/src/sc_msg.h" line="82" column="1" bodyfile="apps/sc/fsw/src/sc_msg.h" bodystart="82" bodyend="160"/>
    <listofallmembers>
      <member refid="struct_s_c___hk_tlm__t_1abfae9256e2fe7422e0b9659b1e8709c1" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AppendByteCount</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a264cc0d82b1843d5c552f1fb66e05d5d" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AppendCmdArg</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a22ca2f892d162a5616bda2c877e3ec2d" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AppendEntryCount</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a367c05d54974bb21161c4fff4f8842a6" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AppendLoadCount</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a419d1a00962808bbbdf92a6b341e7a2c" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AtpCmdNumber</name></member>
      <member refid="struct_s_c___hk_tlm__t_1aa999c6b77a4067fc177f3ee8bdfb0ac9" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AtpFreeBytes</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a231c09d7cfedb0ec22720454846d8379" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AtpState</name></member>
      <member refid="struct_s_c___hk_tlm__t_1ae0ddf46bc3d248e846ff0fe1bee37c49" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AtsCmdCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1ad328c0e620f8e26718c7c36e816832c1" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AtsCmdErrCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a4dbfbce3d32917f71f1ea3dd0bac3ff3" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>AtsNumber</name></member>
      <member refid="struct_s_c___hk_tlm__t_1ae4cee98cab5ce7502850b7d5117fe5b7" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>CmdCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a7be4d8260e92274e0a8c83e56ba20a81" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>CmdErrCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1af3e38cc3dae65212d784bb17637f228c" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>ContinueAtsOnFailureFlag</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a6cb0cd6396faba588ec646fc0831348f" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>LastAtsErrCmd</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a45f55989dc33f0957454fd0f2aa5029c" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>LastAtsErrSeq</name></member>
      <member refid="struct_s_c___hk_tlm__t_1acdc4cfe8695fce34aebcb75c1246d8c4" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>LastRtsErrCmd</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a316ea7d815cd66c1a5dbc01c6e7f5186" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>LastRtsErrSeq</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a030380bc4efd441b56082c71eda8dea2" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>NextAtsTime</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a8348e82c31df1eea113955a2a72ed84d" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>NextRtsTime</name></member>
      <member refid="struct_s_c___hk_tlm__t_1aa04019c2e4965fede2c4e8fab73be4d1" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>NumRtsActive</name></member>
      <member refid="struct_s_c___hk_tlm__t_1acd53c51229bf40cb9abe267386fba3c6" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>Padding8</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a2a7dce79469b49c7dc37a22e48ce0a2b" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsActiveCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a594c2b12b2500b9c19043a3428ec6257" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsActiveErrCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1ae0648dbdffe626274138d8998b8979de" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsCmdCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a584a9e4be062858d4e3f27eaafac15cb" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsCmdErrCtr</name></member>
      <member refid="struct_s_c___hk_tlm__t_1ad620143fc6f6bd0648523ebc506b8e0d" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsDisabledStatus</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a6d8535e40d5782ae4a40da2cb49e8b3b" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsExecutingStatus</name></member>
      <member refid="struct_s_c___hk_tlm__t_1ae8b248954067ee2dd9d33d326b12d14f" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>RtsNumber</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a2afea1de8626cb8968c66408c10fb1d3" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>SwitchPendFlag</name></member>
      <member refid="struct_s_c___hk_tlm__t_1a0da5cc93bececa281a5a187732d5a6ca" prot="public" virt="non-virtual"><scope>SC_HkTlm_t</scope><name>TlmHeader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
