<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_l_d" kind="class" language="C++" prot="public">
    <compoundname>LD</compoundname>
    <includes refid="ld__app_8h" local="no">ld_app.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_l_d_1ac88af03e4176addaa0bfe62edf595fd1" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t LD::SchPipeId</definition>
        <argsstring></argsstring>
        <name>SchPipeId</name>
        <briefdescription>
<para>Scheduling Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="136" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="136" bodyend="-1"/>
        <referencedby refid="class_l_d_1aec2cd018382ed81a0912a559e4be9061" compoundref="ld__app_8cpp" startline="124" endline="306">InitPipe</referencedby>
        <referencedby refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" compoundref="ld__app_8cpp" startline="396" endline="504">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1ac480948c008f5acee8a23e8d981658e0" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__sb_8h_1a9e7147bf0798bb7a3ebd165bdbdf320f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PipeId_t</ref></type>
        <definition>CFE_SB_PipeId_t LD::CmdPipeId</definition>
        <argsstring></argsstring>
        <name>CmdPipeId</name>
        <briefdescription>
<para>Command Pipe ID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="139" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="139" bodyend="-1"/>
        <referencedby refid="class_l_d_1aec2cd018382ed81a0912a559e4be9061" compoundref="ld__app_8cpp" startline="124" endline="306">InitPipe</referencedby>
        <referencedby refid="class_l_d_1aebe78ee2184bb47e1d3de036c7dda3be" compoundref="ld__app_8cpp" startline="512" endline="556">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1aed47b65bed2f59a27db112b737aee54c" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>uint32 LD::uiRunStatus</definition>
        <argsstring></argsstring>
        <name>uiRunStatus</name>
        <briefdescription>
<para>Task Run Status. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="143" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="143" bodyend="-1"/>
        <referencedby refid="class_l_d_1a0b7f4c4f83557ddf04c44d4cec2d5908" compoundref="ld__app_8cpp" startline="681" endline="732">AppMain</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a2631a6ee8285196d8e6ff1728c40bacb" prot="public" static="no" mutable="no">
        <type><ref refid="cfe__tbl_8h_1ac0bed00263988e1afca2f147c03bfd03" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Handle_t</ref></type>
        <definition>CFE_TBL_Handle_t LD::ConfigTblHdl</definition>
        <argsstring></argsstring>
        <name>ConfigTblHdl</name>
        <briefdescription>
<para>Config Table Handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="147" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="147" bodyend="-1"/>
        <referencedby refid="class_l_d_1abb8587e7a31c18d0898dab195a6f648d" compoundref="ld__config__utils_8cpp" startline="190" endline="229">AcquireConfigPointers</referencedby>
        <referencedby refid="class_l_d_1ab7368e55785576eebc6716566f9885a1" compoundref="ld__config__utils_8cpp" startline="50" endline="88">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_d___config_tbl__t" kindref="compound">LD_ConfigTbl_t</ref> *</type>
        <definition>LD_ConfigTbl_t* LD::ConfigTblPtr</definition>
        <argsstring></argsstring>
        <name>ConfigTblPtr</name>
        <briefdescription>
<para>Config Table Pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="150" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="150" bodyend="-1"/>
        <referencedby refid="class_l_d_1abb8587e7a31c18d0898dab195a6f648d" compoundref="ld__config__utils_8cpp" startline="190" endline="229">AcquireConfigPointers</referencedby>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
        <referencedby refid="class_l_d_1a79431d69e4347dc2fbb1ec8b98de51b8" compoundref="ld__app_8cpp" startline="984" endline="1012">MaxAltitude</referencedby>
        <referencedby refid="class_l_d_1ae1782c53f92f2e0cc303c83313be3302" compoundref="ld__app_8cpp" startline="1057" endline="1069">MinimalThrust</referencedby>
        <referencedby refid="class_l_d_1ac95f64d5be84b7db68e485b972e7caf2" compoundref="ld__app_8cpp" startline="957" endline="977">TakeoffThrottle</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a21fcbd078fabaf6b4074d7ca4f9e9197" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLandDetectedMsg_t</type>
        <definition>PX4_VehicleLandDetectedMsg_t LD::VehicleLandDetectedMsg</definition>
        <argsstring></argsstring>
        <name>VehicleLandDetectedMsg</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Output Data published at the end of cycle. </para>        </briefdescription>
        <detaileddescription>
<para>The vehicle land detected message </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="154" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="class_l_d_1a4556d94e5dd6c6566ee98f8615d63574" compoundref="ld__app_8cpp" startline="1150" endline="1193">DetectStateChange</referencedby>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
        <referencedby refid="class_l_d_1a20e5b7739763448d35f2977362d66e9d" compoundref="ld__app_8cpp" startline="618" endline="622">SendVehicleLandDetectedMsg</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_d___hk_tlm__t" kindref="compound">LD_HkTlm_t</ref></type>
        <definition>LD_HkTlm_t LD::HkTlm</definition>
        <argsstring></argsstring>
        <name>HkTlm</name>
        <briefdescription>
<para>Housekeeping Telemetry for downlink. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="158" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="158" bodyend="-1"/>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
        <referencedby refid="class_l_d_1a83ca6afc974b7caf6b6b772467d03554" compoundref="ld__app_8cpp" startline="563" endline="600">ProcessAppCmds</referencedby>
        <referencedby refid="class_l_d_1aebe78ee2184bb47e1d3de036c7dda3be" compoundref="ld__app_8cpp" startline="512" endline="556">ProcessCmdPipe</referencedby>
        <referencedby refid="class_l_d_1ac6fa038ebd5a87c21bc904c24ceae77f" compoundref="ld__app_8cpp" startline="607" endline="611">ReportHousekeeping</referencedby>
        <referencedby refid="class_l_d_1ab0df45aceef2d8aaf39ffcf07342f6a7" compoundref="ld__app_8cpp" startline="640" endline="664">VerifyCmdLength</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_d___current_value_table__t" kindref="compound">LD_CurrentValueTable_t</ref></type>
        <definition>LD_CurrentValueTable_t LD::CVT</definition>
        <argsstring></argsstring>
        <name>CVT</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>Current Value Table. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="161" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="161" bodyend="-1"/>
        <referencedby refid="class_l_d_1a80b73b173256602c4189aa7a04611271" compoundref="ld__app_8cpp" startline="1019" endline="1029">AltitudeLock</referencedby>
        <referencedby refid="class_l_d_1ab919b42911526c52f10fe08d205db9bc" compoundref="ld__app_8cpp" startline="739" endline="758">DetectFreeFall</referencedby>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
        <referencedby refid="class_l_d_1a563765598acd3f4070c645e647274318" compoundref="ld__app_8cpp" startline="1046" endline="1050">ManualControlPresent</referencedby>
        <referencedby refid="class_l_d_1a79431d69e4347dc2fbb1ec8b98de51b8" compoundref="ld__app_8cpp" startline="984" endline="1012">MaxAltitude</referencedby>
        <referencedby refid="class_l_d_1ae1782c53f92f2e0cc303c83313be3302" compoundref="ld__app_8cpp" startline="1057" endline="1069">MinimalThrust</referencedby>
        <referencedby refid="class_l_d_1af74b89ef413c8518e33950593ae02bc3" compoundref="ld__app_8cpp" startline="1036" endline="1039">PositionLock</referencedby>
        <referencedby refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" compoundref="ld__app_8cpp" startline="396" endline="504">RcvSchPipeMsg</referencedby>
        <referencedby refid="class_l_d_1ac95f64d5be84b7db68e485b972e7caf2" compoundref="ld__app_8cpp" startline="957" endline="977">TakeoffThrottle</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a58d5ae5c2e0bd8d258d3fdabc97881fd" prot="public" static="no" mutable="no">
        <type><ref refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059" kindref="member">LandDetectionState</ref></type>
        <definition>LandDetectionState LD::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <initializer>= {}</initializer>
        <briefdescription>
<para>The land detection state variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="164" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="164" bodyend="-1"/>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a18c0778ce247894df368c5e96701c74d" prot="public" static="no" mutable="no">
        <type>PX4_VehicleLandDetectedMsg_t</type>
        <definition>PX4_VehicleLandDetectedMsg_t LD::PreviousLandDetectedMsg</definition>
        <argsstring></argsstring>
        <name>PreviousLandDetectedMsg</name>
        <briefdescription>
<para>The previous land detection message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="167" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="167" bodyend="-1"/>
        <referencedby refid="class_l_d_1a4556d94e5dd6c6566ee98f8615d63574" compoundref="ld__app_8cpp" startline="1150" endline="1193">DetectStateChange</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a5affd6cd8aa4a83005ccf4b6ed4de2e7" prot="public" static="no" mutable="no">
        <type><ref refid="class_state_history" kindref="compound">StateHistory</ref></type>
        <definition>StateHistory LD::freefall_history</definition>
        <argsstring></argsstring>
        <name>freefall_history</name>
        <initializer>= {<ref refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">FALSE</ref>}</initializer>
        <briefdescription>
<para>The free fall state history variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="170" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="170" bodyend="-1"/>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1ad1cdcff88aec9d33bcc84fd8d5b4fe1b" prot="public" static="no" mutable="no">
        <type><ref refid="class_state_history" kindref="compound">StateHistory</ref></type>
        <definition>StateHistory LD::landed_history</definition>
        <argsstring></argsstring>
        <name>landed_history</name>
        <initializer>= {<ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref>}</initializer>
        <briefdescription>
<para>The landed state history variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="173" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="173" bodyend="-1"/>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a3642fa24a47fddaf0186cb4ee8465c7d" prot="public" static="no" mutable="no">
        <type><ref refid="class_state_history" kindref="compound">StateHistory</ref></type>
        <definition>StateHistory LD::ground_contact_history</definition>
        <argsstring></argsstring>
        <name>ground_contact_history</name>
        <initializer>= {<ref refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">TRUE</ref>}</initializer>
        <briefdescription>
<para>The ground contact state history variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="176" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="176" bodyend="-1"/>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1aeef086a0e35cee303d27098af2c96a53" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 LD::arming_time</definition>
        <argsstring></argsstring>
        <name>arming_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The arming time variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="179" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="179" bodyend="-1"/>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a39cb4b8ceb51c62dfb967ae49b18b632" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 LD::min_thrust_start</definition>
        <argsstring></argsstring>
        <name>min_thrust_start</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The minimum thrust on start variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="182" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="182" bodyend="-1"/>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a63490fc7ccfbfa0e7247732909a87cde" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int LD::publish_counter</definition>
        <argsstring></argsstring>
        <name>publish_counter</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The message publish counter variable (acts like a flag for one time event) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="185" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="185" bodyend="-1"/>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a4b862b40b1e9a83596864e7755aa3d2e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float LD::altitude_max</definition>
        <argsstring></argsstring>
        <name>altitude_max</name>
        <briefdescription>
<para>The maximum altitude value variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="188" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="188" bodyend="-1"/>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a059bf3b0083cdff15e863f86d55aeaf6" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 LD::total_flight_time</definition>
        <argsstring></argsstring>
        <name>total_flight_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The total flight time variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="191" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a6bd75d01ff1780cb9f4b3b4fbe1c3b48" prot="public" static="no" mutable="no">
        <type><ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>uint64 LD::takeoff_time</definition>
        <argsstring></argsstring>
        <name>takeoff_time</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The take off time variable. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="194" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a05fbd1e5c0973dfbecac93d16b358ae0" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_d___diag__t" kindref="compound">LD_Diag_t</ref></type>
        <definition>LD_Diag_t LD::DiagTlm</definition>
        <argsstring></argsstring>
        <name>DiagTlm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="208" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="208" bodyend="-1"/>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
        <referencedby refid="class_l_d_1acd7d7d417f0a1d316a9595b22cb68b99" compoundref="ld__app_8cpp" startline="629" endline="633">SendDiag</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_l_d_1a34b4544ef212b11af64e5f34506a3f7b" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="common__types_8h_1a9560e25c315bae45d1ed4e2ce49ce55a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint32</ref></type>
        <definition>constexpr uint32 LD::LAND_DETECTOR_UPDATE_RATE_HZ</definition>
        <argsstring></argsstring>
        <name>LAND_DETECTOR_UPDATE_RATE_HZ</name>
        <initializer>= 50</initializer>
        <briefdescription>
<para>Run main land detector loop at this rate in Hz. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="197" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a8392212a9be7686547c439ef3015eed6" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>constexpr uint64 LD::LAND_DETECTOR_TRIGGER_TIME_US</definition>
        <argsstring></argsstring>
        <name>LAND_DETECTOR_TRIGGER_TIME_US</name>
        <initializer>= 300000</initializer>
        <briefdescription>
<para>Time in us that landing conditions have to hold before triggering a land. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="200" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="200" bodyend="-1"/>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1ae492dcbfab89a15bf63e6ba3d0f196bb" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>constexpr uint64 LD::GROUND_CONTACT_TRIGGER_TIME_US</definition>
        <argsstring></argsstring>
        <name>GROUND_CONTACT_TRIGGER_TIME_US</name>
        <initializer>= 350000</initializer>
        <briefdescription>
<para>Time in us that ground contact condition have to hold before triggering contact ground. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="203" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="203" bodyend="-1"/>
        <referencedby refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_l_d_1a8e69944037430fc0c165cc1d9fb0a217" prot="public" static="yes" mutable="no">
        <type>constexpr <ref refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint64</ref></type>
        <definition>constexpr uint64 LD::LAND_DETECTOR_ARM_PHASE_TIME_US</definition>
        <argsstring></argsstring>
        <name>LAND_DETECTOR_ARM_PHASE_TIME_US</name>
        <initializer>= 2000000</initializer>
        <briefdescription>
<para>Time interval in us in which wider acceptance thresholds are used after arming. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="206" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="206" bodyend="-1"/>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_l_d_1a4177ef8e447bfc2bbdbf3566d8261908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LD::LD</definition>
        <argsstring>()</argsstring>
        <name>LD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="132" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1aefe1fd083b5ee587d99641cb8c97149f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LD::~LD</definition>
        <argsstring>()</argsstring>
        <name>~LD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="133" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a0b7f4c4f83557ddf04c44d4cec2d5908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::AppMain</definition>
        <argsstring>(void)</argsstring>
        <name>AppMain</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Landing Detector (<ref refid="class_l_d" kindref="compound">LD</ref>) application entry point. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Landing Detector Task application entry point. This function performs app initialization, then waits for the cFE ES Startup Sync, then executes the main processing loop.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>If there is an unrecoverable failure during initialization the main loop is never executed and the application will exit. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="223" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="681" bodyend="732"/>
        <references refid="class_l_d_1abb8587e7a31c18d0898dab195a6f648d" compoundref="ld__config__utils_8cpp" startline="190" endline="229">AcquireConfigPointers</references>
        <references refid="cfe__es_8h_1abeabe0f94cccfa5bfcfc2f43796da8d1">CFE_ES_APP_ERROR</references>
        <references refid="cfe__es_8h_1a033dfcc82849cfb9a474a2cece5c9803">CFE_ES_APP_RUN</references>
        <references refid="cfe__es__api_8c_1ad5d888f9bca5038624a04d04efce8325">CFE_ES_ExitApp</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__es__api_8c_1a426ef8e1796ccebba16c63c8e86fb842">CFE_ES_RegisterApp</references>
        <references refid="cfe__es__api_8c_1ae8598bcba38a594d1c868924999da953">CFE_ES_RunLoop</references>
        <references refid="cfe__es__api_8c_1a7dc343ea775a0e5773ecdf700581d548">CFE_ES_WaitForStartupSync</references>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" compoundref="ld__app_8cpp" startline="337" endline="389">InitApp</references>
        <references refid="ld__perfids_8h_1a8a5f131de5e361d9e757b2967d09dfbd" compoundref="ld__perfids_8h" startline="8">LD_MAIN_TASK_PERF_ID</references>
        <references refid="ld__platform__cfg_8h_1a39578af741d1b32a81fc088220aa9cf1" compoundref="ld__platform__cfg_8h" startline="49">LD_SCH_PIPE_PEND_TIME</references>
        <references refid="ld__platform__cfg_8h_1aeee9bc93e64260c0e5d31aa2816b7246" compoundref="ld__platform__cfg_8h" startline="110">LD_STARTUP_TIMEOUT_MSEC</references>
        <references refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" compoundref="ld__app_8cpp" startline="396" endline="504">RcvSchPipeMsg</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_l_d_1aed47b65bed2f59a27db112b737aee54c" compoundref="ld__app_8h" startline="143">uiRunStatus</references>
        <referencedby refid="ld__app_8cpp_1a717df73b175c41709526d96bb9efdd5e" compoundref="ld__app_8cpp" startline="671" endline="674">LD_AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::InitApp</definition>
        <argsstring>(void)</argsstring>
        <name>InitApp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the Landing Detector (<ref refid="class_l_d" kindref="compound">LD</ref>) application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Landing Detector application initialization routine. This function performs all the required startup steps to initialize (or restore from CDS) <ref refid="class_l_d" kindref="compound">LD</ref> data structures and get the application registered with the cFE services so it can begin to receive command messages and send events.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="7" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__es_8h_1a426ef8e1796ccebba16c63c8e86fb842" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_ES_RegisterApp</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LD_InitEvent  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LD_InitPipe  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LD_InitData  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LD_InitConfigTbl  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="osapi_8c_1a0de425c8dba312f44cf8803a69e7ca5e" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">OS_TaskInstallDeleteHandler</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="249" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="337" bodyend="389"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_d_1ab7368e55785576eebc6716566f9885a1" compoundref="ld__config__utils_8cpp" startline="50" endline="88">InitConfigTbl</references>
        <references refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" compoundref="ld__app_8cpp" startline="313" endline="330">InitData</references>
        <references refid="class_l_d_1ac1fead82922711aadbf71bb0e3762d43" compoundref="ld__app_8cpp" startline="46" endline="117">InitEvent</references>
        <references refid="class_l_d_1aec2cd018382ed81a0912a559e4be9061" compoundref="ld__app_8cpp" startline="124" endline="306">InitPipe</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0eab1c6676e928e177cc6274380df250" compoundref="ld__events_8h" startline="74">LD_INIT_INF_EID</references>
        <references refid="ld__version_8h_1ab6aaac1fd3a17655d4b000801ed3b851" compoundref="ld__version_8h" startline="53">LD_MAJOR_VERSION</references>
        <references refid="ld__version_8h_1a291f4a6c7e524770993f9ea9c3677128" compoundref="ld__version_8h" startline="67">LD_MINOR_VERSION</references>
        <references refid="ld__platform__cfg_8h_1afea49883f3410a4c691b8d5af256a6f8" compoundref="ld__platform__cfg_8h" startline="25">LD_MISSION_REV</references>
        <references refid="ld__version_8h_1aea26b6d37dc2c0f7b7e60617312e28bb" compoundref="ld__version_8h" startline="81">LD_REVISION</references>
        <referencedby refid="class_l_d_1a0b7f4c4f83557ddf04c44d4cec2d5908" compoundref="ld__app_8cpp" startline="681" endline="732">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ac1fead82922711aadbf71bb0e3762d43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::InitEvent</definition>
        <argsstring>(void)</argsstring>
        <name>InitEvent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize Event Services and Event tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup cFE Event Services for use by the <ref refid="class_l_d" kindref="compound">LD</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__evs_8h_1aff6913e2ab9a37ae699382c482fdb786" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_EVS_Register</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="267" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="46" bodyend="117"/>
        <references refid="cfe__es__api_8c_1a23ab8bea54cfcb05fba77f4d866df646">CFE_ES_WriteToSysLog</references>
        <references refid="cfe__evs_8h_1a9c74cb368c56aff83d050a4807132460">CFE_EVS_BINARY_FILTER</references>
        <references refid="cfe__evs_8h_1aca8f65c4df0a469b0f3bb7bdd68ebbf7">CFE_EVS_FIRST_ONE_STOP</references>
        <references refid="cfe__evs_8h_1a26a77de85eafef643d4dcbfdf7b77422">CFE_EVS_NO_FILTER</references>
        <references refid="cfe__evs_8c_1a991c19d964b501bf0908bb60812fda28">CFE_EVS_Register</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="struct_c_f_e___e_v_s___bin_filter__t_1a41a96a173a28d042e012dce9bebf793e">CFE_EVS_BinFilter_t::EventID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a11bea0415a681c8c65925444398893f5" compoundref="ld__events_8h" startline="201">LD_CC_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43abed715da503bbad32bfb9014ed039c80" compoundref="ld__events_8h" startline="156">LD_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a7c0f952280b5b7eff12da07dc394447c" compoundref="ld__events_8h" startline="250">LD_CFGTBL_LOAD_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a2a589d2cce15cf9a3c72a68b960a8eb1" compoundref="ld__events_8h" startline="143">LD_CFGTBL_MANAGE_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a44e1f653182ec1dc8647b2466ca999a3" compoundref="ld__events_8h" startline="234">LD_CFGTBL_REG_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ab47741860ab8d88b87a0e4fea422a107" compoundref="ld__events_8h" startline="97">LD_CMD_NOOP_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43aa81cc63a9a2580e94bfb1757bda2e3cc" compoundref="ld__events_8h" startline="298">LD_FLIGHT_DETECTED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ac9e32d32f4e9efe3ff114d5bbbfc6fb8" compoundref="ld__events_8h" startline="262">LD_FREEFALL_DETECTED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ac141663dd697fe00baf00bbcd2b435ec" compoundref="ld__events_8h" startline="274">LD_GROUNDCONTACT_DETECTED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0eab1c6676e928e177cc6274380df250" compoundref="ld__events_8h" startline="74">LD_INIT_INF_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a49473e49cce8fb920ff2607ac3d97bfe" compoundref="ld__events_8h" startline="286">LD_LAND_DETECTED_EID</references>
        <references refid="ld__app_8h_1a0461efbccc03b25d075ffb8cdda661da" compoundref="ld__app_8h" startline="63">LD_MAX_EVENT_FILTERS</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0646e31ba3c42c96a154b8806a492e20" compoundref="ld__events_8h" startline="187">LD_MSGID_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43acafdfba482fc0d0c01a9379a9b620bfd" compoundref="ld__events_8h" startline="218">LD_MSGLEN_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0d0aa466e3b0e20ace2b06bf8ad813d9" compoundref="ld__events_8h" startline="130">LD_PIPE_INIT_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43adc7e882ff425e266740d8158a4f7a5e3" compoundref="ld__events_8h" startline="172">LD_RCVMSG_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a991304067f5550ed6cabcfe533d492fd" compoundref="ld__events_8h" startline="53">LD_RESERVED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ad1aa10622ec9332bcc3cc185835d183a" compoundref="ld__events_8h" startline="114">LD_SUBSCRIBE_ERR_EID</references>
        <references refid="struct_c_f_e___e_v_s___bin_filter__t_1ab9881e02d2317fe2205379a25bc679b2">CFE_EVS_BinFilter_t::Mask</references>
        <referencedby refid="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" compoundref="ld__app_8cpp" startline="337" endline="389">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::InitData</definition>
        <argsstring>(void)</argsstring>
        <name>InitData</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize global variables used by <ref refid="class_l_d" kindref="compound">LD</ref> application. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to initialize the <ref refid="class_l_d" kindref="compound">LD</ref> application data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="280" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="313" bodyend="330"/>
        <references refid="cfe__sb_8h_1a67765875dfff1d3d6d7cbc4a7ae2f8f0">CFE_SB_InitMsg</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="class_l_d_1a05fbd1e5c0973dfbecac93d16b358ae0" compoundref="ld__app_8h" startline="208">DiagTlm</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_l_d_1a3642fa24a47fddaf0186cb4ee8465c7d" compoundref="ld__app_8h" startline="176">ground_contact_history</references>
        <references refid="class_l_d_1ae492dcbfab89a15bf63e6ba3d0f196bb" compoundref="ld__app_8h" startline="203">GROUND_CONTACT_TRIGGER_TIME_US</references>
        <references refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" compoundref="ld__app_8h" startline="158">HkTlm</references>
        <references refid="class_l_d_1a8392212a9be7686547c439ef3015eed6" compoundref="ld__app_8h" startline="200">LAND_DETECTOR_TRIGGER_TIME_US</references>
        <references refid="class_l_d_1ad1cdcff88aec9d33bcc84fd8d5b4fe1b" compoundref="ld__app_8h" startline="173">landed_history</references>
        <references refid="ld__msgids_8h_1a6e37207e601eff548dae50faef2d7601" compoundref="ld__msgids_8h" startline="12">LD_DIAG_TLM_MID</references>
        <references refid="ld__msgids_8h_1a59b3be3af3927bd5de64af06bab72be4" compoundref="ld__msgids_8h" startline="8">LD_HK_TLM_MID</references>
        <references refid="class_state_history_1a7820320b9bab05bc09c15f98bdecba45" compoundref="ld__state__history_8cpp" startline="73" endline="84">StateHistory::setTimeSince</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="class_l_d_1a21fcbd078fabaf6b4074d7ca4f9e9197" compoundref="ld__app_8h" startline="154">VehicleLandDetectedMsg</references>
        <referencedby refid="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" compoundref="ld__app_8cpp" startline="337" endline="389">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1aec2cd018382ed81a0912a559e4be9061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::InitPipe</definition>
        <argsstring>(void)</argsstring>
        <name>InitPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize message pipes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function performs the steps required to setup initialize the cFE Software Bus message pipes and subscribe to messages for the <ref refid="class_l_d" kindref="compound">LD</ref> application.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1ac169b781c59074e6cbab49325726c4e2" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_CreatePipe</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a5939c3681044a3d953d0fe72dd577889" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_SubscribeEx</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1afc2c2db1a504f544b430f33f28be769b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Subscribe</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="301" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="124" bodyend="306"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1ac169b781c59074e6cbab49325726c4e2">CFE_SB_CreatePipe</references>
        <references refid="cfe__sb_8h_1aa20e8d7fe06a65514dd39e65a7be5ca5">CFE_SB_Default_Qos</references>
        <references refid="cfe__sb_8h_1afc2c2db1a504f544b430f33f28be769b">CFE_SB_Subscribe</references>
        <references refid="cfe__sb_8h_1a5939c3681044a3d953d0fe72dd577889">CFE_SB_SubscribeEx</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_d_1ac480948c008f5acee8a23e8d981658e0" compoundref="ld__app_8h" startline="139">CmdPipeId</references>
        <references refid="ld__msgids_8h_1a74aa5fc0c58051f15800910cc1b55d26" compoundref="ld__msgids_8h" startline="11">LD_CMD_MID</references>
        <references refid="ld__platform__cfg_8h_1a8c38465532ed351af8c6b50ae25e835e" compoundref="ld__platform__cfg_8h" startline="74">LD_CMD_PIPE_DEPTH</references>
        <references refid="ld__platform__cfg_8h_1ae39834d31d6a63bbb8a7126e2982e1d8" compoundref="ld__platform__cfg_8h" startline="81">LD_CMD_PIPE_NAME</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0d0aa466e3b0e20ace2b06bf8ad813d9" compoundref="ld__events_8h" startline="130">LD_PIPE_INIT_ERR_EID</references>
        <references refid="ld__platform__cfg_8h_1a78ee347beec396a7c0d49247804c209e" compoundref="ld__platform__cfg_8h" startline="32">LD_SCH_PIPE_DEPTH</references>
        <references refid="ld__platform__cfg_8h_1ae4b8ec3c1eb1fc10f55172c7c73c5a7d" compoundref="ld__platform__cfg_8h" startline="39">LD_SCH_PIPE_NAME</references>
        <references refid="ld__msgids_8h_1a11a4403928b52be4233ba67da27178be" compoundref="ld__msgids_8h" startline="9">LD_SEND_HK_MID</references>
        <references refid="ld__platform__cfg_8h_1a62220483ac80351f74ce5c92970a99f1" compoundref="ld__platform__cfg_8h" startline="67">LD_SEND_HK_MID_MAX_MSG_COUNT</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ad1aa10622ec9332bcc3cc185835d183a" compoundref="ld__events_8h" startline="114">LD_SUBSCRIBE_ERR_EID</references>
        <references refid="ld__msgids_8h_1ab268b7e3f9689400423ba4ef2bb54f53" compoundref="ld__msgids_8h" startline="10">LD_WAKEUP_MID</references>
        <references refid="ld__platform__cfg_8h_1a657e34477098b225bd8d339949caf621" compoundref="ld__platform__cfg_8h" startline="58">LD_WAKEUP_MID_MAX_MSG_COUNT</references>
        <references refid="class_l_d_1ac88af03e4176addaa0bfe62edf595fd1" compoundref="ld__app_8h" startline="136">SchPipeId</references>
        <referencedby refid="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" compoundref="ld__app_8cpp" startline="337" endline="389">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::RcvSchPipeMsg</definition>
        <argsstring>(int32 iBlocking)</argsstring>
        <name>RcvSchPipeMsg</name>
        <param>
          <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
          <declname>iBlocking</declname>
        </param>
        <briefdescription>
<para>Receive and process messages from the scheduler pipe. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function receives and processes messages for the <ref refid="class_l_d" kindref="compound">LD</ref> application from the SCH pipe. This function will pend for the type defined by iBlocking, allowing it to wait for messages, i.e. wakeup messages from scheduler.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">iBlocking</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="cfe__sb_8h_1acc9e6f66cd026d1c987c4c3de827366f" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_PEND_FOREVER</ref>, <ref refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_POLL</ref> or millisecond timeout</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="2" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__sb__api_8c_1a54840fe06aeb08b1e2c8df420474780d" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_RcvMsg</ref>  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="324" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="396" bodyend="504"/>
        <references refid="struct_l_d___current_value_table__t_1a360ceabe1487f7db57d7670124e00d2f" compoundref="ld__app_8h" startline="80">LD_CurrentValueTable_t::ActuatorArmedMsg</references>
        <references refid="struct_l_d___current_value_table__t_1a09aa88c4aa67e335586587684f98b495" compoundref="ld__app_8h" startline="86">LD_CurrentValueTable_t::ActuatorControls0Msg</references>
        <references refid="struct_l_d___current_value_table__t_1a5c24a01b0bbe150329e67ad188b87d92" compoundref="ld__app_8h" startline="83">LD_CurrentValueTable_t::AirspeedMsg</references>
        <references refid="struct_l_d___current_value_table__t_1ada433ccb784befdf3b16823564751848" compoundref="ld__app_8h" startline="92">LD_CurrentValueTable_t::BatteryStatusMsg</references>
        <references refid="cfe__es_8h_1a9ef217a6193ed3db2235b850d5219625">CFE_ES_PerfLogEntry</references>
        <references refid="cfe__es_8h_1a19d8dd9bb016a1bec9fdae7cfeb3fbd4">CFE_ES_PerfLogExit</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1a68b8b8ed93cecb670c945388a797e970">CFE_SB_TIME_OUT</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="struct_l_d___current_value_table__t_1a8a4dbc395dea38b9f7071a406fb1d280" compoundref="ld__app_8h" startline="89">LD_CurrentValueTable_t::ControlStateMsg</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</references>
        <references refid="ld__perfids_8h_1a8a5f131de5e361d9e757b2967d09dfbd" compoundref="ld__perfids_8h" startline="8">LD_MAIN_TASK_PERF_ID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0646e31ba3c42c96a154b8806a492e20" compoundref="ld__events_8h" startline="187">LD_MSGID_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43adc7e882ff425e266740d8158a4f7a5e3" compoundref="ld__events_8h" startline="172">LD_RCVMSG_ERR_EID</references>
        <references refid="ld__msgids_8h_1a11a4403928b52be4233ba67da27178be" compoundref="ld__msgids_8h" startline="9">LD_SEND_HK_MID</references>
        <references refid="ld__msgids_8h_1ab268b7e3f9689400423ba4ef2bb54f53" compoundref="ld__msgids_8h" startline="10">LD_WAKEUP_MID</references>
        <references refid="struct_l_d___current_value_table__t_1a79ff248f3e8e4e6b202af74cd23560a1" compoundref="ld__app_8h" startline="98">LD_CurrentValueTable_t::ManualControlSetpointMsg</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_l_d_1aebe78ee2184bb47e1d3de036c7dda3be" compoundref="ld__app_8cpp" startline="512" endline="556">ProcessCmdPipe</references>
        <references refid="class_l_d_1ac6fa038ebd5a87c21bc904c24ceae77f" compoundref="ld__app_8cpp" startline="607" endline="611">ReportHousekeeping</references>
        <references refid="class_l_d_1ac88af03e4176addaa0bfe62edf595fd1" compoundref="ld__app_8h" startline="136">SchPipeId</references>
        <references refid="struct_l_d___current_value_table__t_1ac9c12fced4321416ffc791702552dffa" compoundref="ld__app_8h" startline="95">LD_CurrentValueTable_t::VehicleAttitudeMsg</references>
        <references refid="struct_l_d___current_value_table__t_1ab2ab634c1b3e8a439a0d912b91245c27" compoundref="ld__app_8h" startline="104">LD_CurrentValueTable_t::VehicleControlModeMsg</references>
        <references refid="struct_l_d___current_value_table__t_1a0f260c38a1ad37b2ef45c6262d9547e8" compoundref="ld__app_8h" startline="101">LD_CurrentValueTable_t::VehicleLocalPositionMsg</references>
        <referencedby refid="class_l_d_1a0b7f4c4f83557ddf04c44d4cec2d5908" compoundref="ld__app_8cpp" startline="681" endline="732">AppMain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1aebe78ee2184bb47e1d3de036c7dda3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::ProcessCmdPipe</definition>
        <argsstring>(void)</argsstring>
        <name>ProcessCmdPipe</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Landing Detector Task incoming command processing. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes incoming commands subscribed by <ref refid="class_l_d" kindref="compound">LD</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="337" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="512" bodyend="556"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__error_8h_1aa9ebdcf79be28ce49c79c12f20ce53b7">CFE_SB_NO_MESSAGE</references>
        <references refid="cfe__sb_8h_1a0c0ca8cca37a759bd5e68e81e73ce67a">CFE_SB_POLL</references>
        <references refid="cfe__sb_8h_1a54840fe06aeb08b1e2c8df420474780d">CFE_SB_RcvMsg</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="class_l_d_1ac480948c008f5acee8a23e8d981658e0" compoundref="ld__app_8h" startline="139">CmdPipeId</references>
        <references refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" compoundref="ld__app_8h" startline="158">HkTlm</references>
        <references refid="ld__msgids_8h_1a74aa5fc0c58051f15800910cc1b55d26" compoundref="ld__msgids_8h" startline="11">LD_CMD_MID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a0646e31ba3c42c96a154b8806a492e20" compoundref="ld__events_8h" startline="187">LD_MSGID_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43adc7e882ff425e266740d8158a4f7a5e3" compoundref="ld__events_8h" startline="172">LD_RCVMSG_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="class_l_d_1a83ca6afc974b7caf6b6b772467d03554" compoundref="ld__app_8cpp" startline="563" endline="600">ProcessAppCmds</references>
        <references refid="struct_l_d___hk_tlm__t_1ab3d6702f88f0a331215dd04b15fa6d00" compoundref="ld__msg_8h" startline="156">LD_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" compoundref="ld__app_8cpp" startline="396" endline="504">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a83ca6afc974b7caf6b6b772467d03554" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::ProcessAppCmds</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr)</argsstring>
        <name>ProcessAppCmds</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <briefdescription>
<para>Landing Detector Task application commands. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function processes command messages specific to the <ref refid="class_l_d" kindref="compound">LD</ref> application</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="353" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="563" bodyend="600"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" compoundref="ld__app_8h" startline="158">HkTlm</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a11bea0415a681c8c65925444398893f5" compoundref="ld__events_8h" startline="201">LD_CC_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ab47741860ab8d88b87a0e4fea422a107" compoundref="ld__events_8h" startline="97">LD_CMD_NOOP_EID</references>
        <references refid="ld__version_8h_1ab6aaac1fd3a17655d4b000801ed3b851" compoundref="ld__version_8h" startline="53">LD_MAJOR_VERSION</references>
        <references refid="ld__version_8h_1a291f4a6c7e524770993f9ea9c3677128" compoundref="ld__version_8h" startline="67">LD_MINOR_VERSION</references>
        <references refid="ld__platform__cfg_8h_1afea49883f3410a4c691b8d5af256a6f8" compoundref="ld__platform__cfg_8h" startline="25">LD_MISSION_REV</references>
        <references refid="ld__msg_8h_1afc5b86fdce7e5325e298add0c16837d5" compoundref="ld__msg_8h" startline="88">LD_NOOP_CC</references>
        <references refid="ld__msg_8h_1aaf8d766ea32ab67ee6945bbeed8cc994" compoundref="ld__msg_8h" startline="121">LD_RESET_CC</references>
        <references refid="ld__version_8h_1aea26b6d37dc2c0f7b7e60617312e28bb" compoundref="ld__version_8h" startline="81">LD_REVISION</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="struct_l_d___hk_tlm__t_1ac994b0d9952c927473ffed33d33f81c5" compoundref="ld__msg_8h" startline="152">LD_HkTlm_t::usCmdCnt</references>
        <references refid="struct_l_d___hk_tlm__t_1ab3d6702f88f0a331215dd04b15fa6d00" compoundref="ld__msg_8h" startline="156">LD_HkTlm_t::usCmdErrCnt</references>
        <referencedby refid="class_l_d_1aebe78ee2184bb47e1d3de036c7dda3be" compoundref="ld__app_8cpp" startline="512" endline="556">ProcessCmdPipe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ac6fa038ebd5a87c21bc904c24ceae77f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::ReportHousekeeping</definition>
        <argsstring>(void)</argsstring>
        <name>ReportHousekeeping</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends <ref refid="class_l_d" kindref="compound">LD</ref> housekeeping message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function sends the housekeeping message</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="365" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="607" bodyend="611"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" compoundref="ld__app_8h" startline="158">HkTlm</references>
        <referencedby refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" compoundref="ld__app_8cpp" startline="396" endline="504">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a20e5b7739763448d35f2977362d66e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::SendVehicleLandDetectedMsg</definition>
        <argsstring>(void)</argsstring>
        <name>SendVehicleLandDetectedMsg</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the VehicleLandDetectedMsg message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the VehicleLandDetectedMsg message containing &lt;TODO&gt;</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="377" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="618" bodyend="622"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_l_d_1a21fcbd078fabaf6b4074d7ca4f9e9197" compoundref="ld__app_8h" startline="154">VehicleLandDetectedMsg</references>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1acd7d7d417f0a1d316a9595b22cb68b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::SendDiag</definition>
        <argsstring>(void)</argsstring>
        <name>SendDiag</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Sends the Diagnotic message. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function publishes the diag message to the SB</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="389" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="629" bodyend="633"/>
        <references refid="cfe__sb_8h_1a91b4b63f7d168bd78dc92d894ad7f77d">CFE_SB_SendMsg</references>
        <references refid="cfe__sb_8h_1aaab4db240d18fa4017741f0f7680e4e1">CFE_SB_TimeStampMsg</references>
        <references refid="class_l_d_1a05fbd1e5c0973dfbecac93d16b358ae0" compoundref="ld__app_8h" startline="208">DiagTlm</references>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ab0df45aceef2d8aaf39ffcf07342f6a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::VerifyCmdLength</definition>
        <argsstring>(CFE_SB_Msg_t *MsgPtr, uint16 usExpectedLen)</argsstring>
        <name>VerifyCmdLength</name>
        <param>
          <type><ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> *</type>
          <declname>MsgPtr</declname>
        </param>
        <param>
          <type><ref refid="common__types_8h_1a2e00abb078d312d1d8c4fbcd6be343d8" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">uint16</ref></type>
          <declname>usExpectedLen</declname>
        </param>
        <briefdescription>
<para>Verify Command Length. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function verifies the command message length.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">MsgPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="union_c_f_e___s_b___msg__t" kindref="compound" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SB_Msg_t</ref> pointer that references the software bus message </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">usExpectedLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The expected length of the message</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
if the message length matches expectations, FALSE if it does not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="409" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="640" bodyend="664"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__sb_8h_1a7b1204be89237bd230fc79ecc88718b5">CFE_SB_GetCmdCode</references>
        <references refid="cfe__sb_8h_1afd43694dea8b3cb74af4c2969493256d">CFE_SB_GetMsgId</references>
        <references refid="cfe__sb_8h_1ac32b86cf9e1d12a547792853c35f6aa1">CFE_SB_GetTotalMsgLength</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" compoundref="ld__app_8h" startline="158">HkTlm</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43acafdfba482fc0d0c01a9379a9b620bfd" compoundref="ld__events_8h" startline="218">LD_MSGLEN_ERR_EID</references>
        <references refid="common__types_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="struct_l_d___hk_tlm__t_1ab3d6702f88f0a331215dd04b15fa6d00" compoundref="ld__msg_8h" startline="156">LD_HkTlm_t::usCmdErrCnt</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_l_d_1ab7368e55785576eebc6716566f9885a1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::InitConfigTbl</definition>
        <argsstring>(void)</argsstring>
        <name>InitConfigTbl</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the <ref refid="class_l_d" kindref="compound">LD</ref> configuration tables. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function initializes <ref refid="class_l_d" kindref="compound">LD</ref>&apos;s configuration tables. This includes &lt;TODO&gt;.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="4" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a02649cb295b154981365de11e0bb6683" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Register</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from <ref refid="cfe__tbl__api_8c_1a5f631dc4d2527e27968f0838a93a8d50" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_TBL_Load</ref>  </para></entry></row>
<row>
<entry thead="no"><para>Return codes from #LD_AcquireConfigPointers  </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="430" column="1" bodyfile="apps/ld/fsw/src/ld_config_utils.cpp" bodystart="50" bodyend="88"/>
        <references refid="class_l_d_1abb8587e7a31c18d0898dab195a6f648d" compoundref="ld__config__utils_8cpp" startline="190" endline="229">AcquireConfigPointers</references>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1a5f631dc4d2527e27968f0838a93a8d50">CFE_TBL_Load</references>
        <references refid="cfe__tbl_8h_1a1cdd818488b284d4ec7be6cab93d2462">CFE_TBL_OPT_DEFAULT</references>
        <references refid="cfe__tbl_8h_1a02649cb295b154981365de11e0bb6683">CFE_TBL_Register</references>
        <references refid="cfe__tbl_8h_1a0b3eb338d875c3c700856e88947bc927ae367f0dfc5bef4a6200af4fffb8333be">CFE_TBL_SRC_FILE</references>
        <references refid="class_l_d_1a2631a6ee8285196d8e6ff1728c40bacb" compoundref="ld__app_8h" startline="147">ConfigTblHdl</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a7c0f952280b5b7eff12da07dc394447c" compoundref="ld__events_8h" startline="250">LD_CFGTBL_LOAD_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a44e1f653182ec1dc8647b2466ca999a3" compoundref="ld__events_8h" startline="234">LD_CFGTBL_REG_ERR_EID</references>
        <references refid="ld__platform__cfg_8h_1a4d14c935610e8ae61e0e1e27bf193504" compoundref="ld__platform__cfg_8h" startline="103">LD_CONFIG_TABLE_FILENAME</references>
        <references refid="ld__tbldefs_8h_1aed2376cdcf638f16885e126896e01b87" compoundref="ld__tbldefs_8h" startline="80">LD_CONFIG_TABLENAME</references>
        <references refid="class_l_d_1acc92c70ccb29495d847ba92d4caded13" compoundref="ld__config__utils_8cpp" startline="95" endline="183">ValidateConfigTbl</references>
        <referencedby refid="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" compoundref="ld__app_8cpp" startline="337" endline="389">InitApp</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1abb8587e7a31c18d0898dab195a6f648d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::AcquireConfigPointers</definition>
        <argsstring>(void)</argsstring>
        <name>AcquireConfigPointers</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Obtain <ref refid="class_l_d" kindref="compound">LD</ref> configuration tables data pointers. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function manages the configuration tables and obtains a pointer to their data.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="447" column="1" bodyfile="apps/ld/fsw/src/ld_config_utils.cpp" bodystart="190" bodyend="229"/>
        <references refid="cfe__evs_8h_1ad98a59324d59e7f8a2f6162887197832">CFE_EVS_ERROR</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b">CFE_SUCCESS</references>
        <references refid="cfe__tbl_8h_1ab76032b8a226594789df60e8449cface">CFE_TBL_GetAddress</references>
        <references refid="cfe__error_8h_1a16d909d1b698830edc62f26fdb8c85c5">CFE_TBL_INFO_UPDATED</references>
        <references refid="cfe__tbl_8h_1a55f9e6ac951e3e2b1ff42787e5f8c57c">CFE_TBL_Manage</references>
        <references refid="cfe__tbl_8h_1a9707adcc7701671aaa4aa39f1608159a">CFE_TBL_ReleaseAddress</references>
        <references refid="class_l_d_1a2631a6ee8285196d8e6ff1728c40bacb" compoundref="ld__app_8h" startline="147">ConfigTblHdl</references>
        <references refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" compoundref="ld__app_8h" startline="150">ConfigTblPtr</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43abed715da503bbad32bfb9014ed039c80" compoundref="ld__events_8h" startline="156">LD_CFGTBL_GETADDR_ERR_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a2a589d2cce15cf9a3c72a68b960a8eb1" compoundref="ld__events_8h" startline="143">LD_CFGTBL_MANAGE_ERR_EID</references>
        <referencedby refid="class_l_d_1a0b7f4c4f83557ddf04c44d4cec2d5908" compoundref="ld__app_8cpp" startline="681" endline="732">AppMain</referencedby>
        <referencedby refid="class_l_d_1ab7368e55785576eebc6716566f9885a1" compoundref="ld__config__utils_8cpp" startline="50" endline="88">InitConfigTbl</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ab919b42911526c52f10fe08d205db9bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::DetectFreeFall</definition>
        <argsstring>(void)</argsstring>
        <name>DetectFreeFall</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="465" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="739" bodyend="758"/>
        <references refid="struct_l_d___current_value_table__t_1a8a4dbc395dea38b9f7071a406fb1d280" compoundref="ld__app_8h" startline="89">LD_CurrentValueTable_t::ControlStateMsg</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a761162cad379cd216b62c9c3f09d9415" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::DetectGroundContactState</definition>
        <argsstring>(void)</argsstring>
        <name>DetectGroundContactState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="483" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="765" bodyend="855"/>
        <references refid="struct_l_d___current_value_table__t_1a360ceabe1487f7db57d7670124e00d2f" compoundref="ld__app_8h" startline="80">LD_CurrentValueTable_t::ActuatorArmedMsg</references>
        <references refid="class_l_d_1a80b73b173256602c4189aa7a04611271" compoundref="ld__app_8cpp" startline="1019" endline="1029">AltitudeLock</references>
        <references refid="class_l_d_1aeef086a0e35cee303d27098af2c96a53" compoundref="ld__app_8h" startline="179">arming_time</references>
        <references refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" compoundref="ld__app_8h" startline="150">ConfigTblPtr</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="class_l_d_1a05fbd1e5c0973dfbecac93d16b358ae0" compoundref="ld__app_8h" startline="208">DiagTlm</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_l_d___diag__t_1a573de159722611b817eb44c45ea468c1" compoundref="ld__msg_8h" startline="175">LD_Diag_t::GC_AltitudeLock</references>
        <references refid="struct_l_d___diag__t_1a682056cbceb6dcf28c2a43fe54ace1c6" compoundref="ld__msg_8h" startline="184">LD_Diag_t::GC_HitGround</references>
        <references refid="struct_l_d___diag__t_1ad6dbff5a80223c5e4afa96409b1e455f" compoundref="ld__msg_8h" startline="187">LD_Diag_t::GC_HorMovement</references>
        <references refid="struct_l_d___diag__t_1a0853fcbd985af4c3352821e47759fd96" compoundref="ld__msg_8h" startline="181">LD_Diag_t::GC_InDescent</references>
        <references refid="struct_l_d___diag__t_1abe40b8cf980b5cda15eee5e27ee0fd8d" compoundref="ld__msg_8h" startline="193">LD_Diag_t::GC_ManualControlIdlingOrAutomatic</references>
        <references refid="struct_l_d___diag__t_1aec5539898dc8cc281190631eea95659c" compoundref="ld__msg_8h" startline="172">LD_Diag_t::GC_MinThrust</references>
        <references refid="struct_l_d___diag__t_1a396b2f8ead0fb79d278d989d3e041831" compoundref="ld__msg_8h" startline="178">LD_Diag_t::GC_PositionLock</references>
        <references refid="struct_l_d___diag__t_1a51552a3ef29368fdd2e6a852647db434" compoundref="ld__msg_8h" startline="190">LD_Diag_t::GC_VertMovement</references>
        <references refid="struct_l_d___diag__t_1ae628d0fc915b9c016ff47f2db199b870" compoundref="ld__msg_8h" startline="196">LD_Diag_t::GroundContact</references>
        <references refid="class_l_d_1a8e69944037430fc0c165cc1d9fb0a217" compoundref="ld__app_8h" startline="206">LAND_DETECTOR_ARM_PHASE_TIME_US</references>
        <references refid="ld__app_8h_1ac66f0bbbbd9a4b494522a2673909c8a8" compoundref="ld__app_8h" startline="64">LD_ARMING_THRESH_FACTOR</references>
        <references refid="struct_l_d___config_tbl__t_1ae3c516f79aaf0da1f4a3704362035c3f" compoundref="ld__tbldefs_8h" startline="191">LD_ConfigTbl_t::LD_LANDSPEED</references>
        <references refid="struct_l_d___config_tbl__t_1a2819e27b41eb5feb7d28843d192e6214" compoundref="ld__tbldefs_8h" startline="182">LD_ConfigTbl_t::LD_POS_STK_DW_THRES</references>
        <references refid="struct_l_d___config_tbl__t_1a38c1e9de06a3641ea93edd7a1be64c5e" compoundref="ld__tbldefs_8h" startline="101">LD_ConfigTbl_t::LD_XY_VEL_MAX</references>
        <references refid="struct_l_d___config_tbl__t_1ae9af82515ef8822afa564a7815203bc5" compoundref="ld__tbldefs_8h" startline="92">LD_ConfigTbl_t::LD_Z_VEL_MAX</references>
        <references refid="class_l_d_1a563765598acd3f4070c645e647274318" compoundref="ld__app_8cpp" startline="1046" endline="1050">ManualControlPresent</references>
        <references refid="struct_l_d___current_value_table__t_1a79ff248f3e8e4e6b202af74cd23560a1" compoundref="ld__app_8h" startline="98">LD_CurrentValueTable_t::ManualControlSetpointMsg</references>
        <references refid="class_l_d_1ae1782c53f92f2e0cc303c83313be3302" compoundref="ld__app_8cpp" startline="1057" endline="1069">MinimalThrust</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="struct_l_d___current_value_table__t_1ab2ab634c1b3e8a439a0d912b91245c27" compoundref="ld__app_8h" startline="104">LD_CurrentValueTable_t::VehicleControlModeMsg</references>
        <references refid="struct_l_d___current_value_table__t_1a0f260c38a1ad37b2ef45c6262d9547e8" compoundref="ld__app_8h" startline="101">LD_CurrentValueTable_t::VehicleLocalPositionMsg</references>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::DetectLandedState</definition>
        <argsstring>(void)</argsstring>
        <name>DetectLandedState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="501" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="862" bodyend="950"/>
        <references refid="struct_l_d___current_value_table__t_1a360ceabe1487f7db57d7670124e00d2f" compoundref="ld__app_8h" startline="80">LD_CurrentValueTable_t::ActuatorArmedMsg</references>
        <references refid="class_l_d_1a80b73b173256602c4189aa7a04611271" compoundref="ld__app_8cpp" startline="1019" endline="1029">AltitudeLock</references>
        <references refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" compoundref="ld__app_8h" startline="150">ConfigTblPtr</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="class_l_d_1a05fbd1e5c0973dfbecac93d16b358ae0" compoundref="ld__app_8h" startline="208">DiagTlm</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="class_state_history_1a31c0f73aba3ae8279c6f46db817284a6" compoundref="ld__state__history_8cpp" startline="86" endline="89">StateHistory::getState</references>
        <references refid="class_l_d_1a3642fa24a47fddaf0186cb4ee8465c7d" compoundref="ld__app_8h" startline="176">ground_contact_history</references>
        <references refid="class_l_d_1a8e69944037430fc0c165cc1d9fb0a217" compoundref="ld__app_8h" startline="206">LAND_DETECTOR_ARM_PHASE_TIME_US</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059a2de9677f181de22ef76264daec0c8449" compoundref="ld__app_8h" startline="117">LANDED</references>
        <references refid="struct_l_d___diag__t_1a260b61d521e92083ddea6a8a7a8cfa74" compoundref="ld__msg_8h" startline="214">LD_Diag_t::Landed</references>
        <references refid="ld__app_8h_1ac66f0bbbbd9a4b494522a2673909c8a8" compoundref="ld__app_8h" startline="64">LD_ARMING_THRESH_FACTOR</references>
        <references refid="struct_l_d___diag__t_1acef28411d68e3d39fea77506e2deef1e" compoundref="ld__msg_8h" startline="199">LD_Diag_t::LD_GC_history_state</references>
        <references refid="struct_l_d___diag__t_1a964598875f6a193280c49592f75260b8" compoundref="ld__msg_8h" startline="208">LD_Diag_t::LD_HorMovement</references>
        <references refid="struct_l_d___config_tbl__t_1a6ff523cdc334ea544061b33e0b32c030" compoundref="ld__tbldefs_8h" startline="200">LD_ConfigTbl_t::LD_MIN_THR_NO_ALT_TIMEOUT</references>
        <references refid="struct_l_d___diag__t_1ac56ad8ed412f842d26e41bf65cee2d7b" compoundref="ld__msg_8h" startline="202">LD_Diag_t::LD_MinThrust</references>
        <references refid="struct_l_d___diag__t_1ab4249fd543b53214215b2ea71b0c430e" compoundref="ld__msg_8h" startline="211">LD_Diag_t::LD_PositionLock</references>
        <references refid="struct_l_d___config_tbl__t_1a5f540d8d50ddaa5e75fcedec0b15ff24" compoundref="ld__tbldefs_8h" startline="110">LD_ConfigTbl_t::LD_ROT_MAX</references>
        <references refid="struct_l_d___diag__t_1ad7063aeb84195055e0535d16df68d70b" compoundref="ld__msg_8h" startline="205">LD_Diag_t::LD_Rotation</references>
        <references refid="struct_l_d___config_tbl__t_1a38c1e9de06a3641ea93edd7a1be64c5e" compoundref="ld__tbldefs_8h" startline="101">LD_ConfigTbl_t::LD_XY_VEL_MAX</references>
        <references refid="class_l_d_1a563765598acd3f4070c645e647274318" compoundref="ld__app_8cpp" startline="1046" endline="1050">ManualControlPresent</references>
        <references refid="struct_l_d___current_value_table__t_1a79ff248f3e8e4e6b202af74cd23560a1" compoundref="ld__app_8h" startline="98">LD_CurrentValueTable_t::ManualControlSetpointMsg</references>
        <references refid="class_l_d_1a39cb4b8ceb51c62dfb967ae49b18b632" compoundref="ld__app_8h" startline="182">min_thrust_start</references>
        <references refid="class_l_d_1ae1782c53f92f2e0cc303c83313be3302" compoundref="ld__app_8cpp" startline="1057" endline="1069">MinimalThrust</references>
        <references refid="class_l_d_1af74b89ef413c8518e33950593ae02bc3" compoundref="ld__app_8cpp" startline="1036" endline="1039">PositionLock</references>
        <references refid="class_state_history_1a2aa84c37fcaf5238e516919bb2329058" compoundref="ld__state__history_8cpp" startline="56" endline="71">StateHistory::setState</references>
        <references refid="class_l_d_1a58d5ae5c2e0bd8d258d3fdabc97881fd" compoundref="ld__app_8h" startline="164">state</references>
        <references refid="class_l_d_1ac95f64d5be84b7db68e485b972e7caf2" compoundref="ld__app_8cpp" startline="957" endline="977">TakeoffThrottle</references>
        <references refid="common__types_8h_1aa8cecfc5c5c054d2875c03e77b7be15d">TRUE</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="struct_l_d___current_value_table__t_1ac9c12fced4321416ffc791702552dffa" compoundref="ld__app_8h" startline="95">LD_CurrentValueTable_t::VehicleAttitudeMsg</references>
        <references refid="struct_l_d___current_value_table__t_1a0f260c38a1ad37b2ef45c6262d9547e8" compoundref="ld__app_8h" startline="101">LD_CurrentValueTable_t::VehicleLocalPositionMsg</references>
        <referencedby refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ac95f64d5be84b7db68e485b972e7caf2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float LD::TakeoffThrottle</definition>
        <argsstring>(void)</argsstring>
        <name>TakeoffThrottle</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="519" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="957" bodyend="977"/>
        <references refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" compoundref="ld__app_8h" startline="150">ConfigTblPtr</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="struct_l_d___config_tbl__t_1a08296c78ebc7d49ecfa86812b56f1ab4" compoundref="ld__tbldefs_8h" startline="155">LD_ConfigTbl_t::LD_LOW_T_THR</references>
        <references refid="struct_l_d___config_tbl__t_1a7f40752e881cd126318cf8da97802ae2" compoundref="ld__tbldefs_8h" startline="173">LD_ConfigTbl_t::LD_POS_STK_UP_THRES</references>
        <references refid="struct_l_d___current_value_table__t_1ab2ab634c1b3e8a439a0d912b91245c27" compoundref="ld__app_8h" startline="104">LD_CurrentValueTable_t::VehicleControlModeMsg</references>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a79431d69e4347dc2fbb1ec8b98de51b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float LD::MaxAltitude</definition>
        <argsstring>(void)</argsstring>
        <name>MaxAltitude</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="537" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="984" bodyend="1012"/>
        <references refid="struct_l_d___current_value_table__t_1ada433ccb784befdf3b16823564751848" compoundref="ld__app_8h" startline="92">LD_CurrentValueTable_t::BatteryStatusMsg</references>
        <references refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" compoundref="ld__app_8h" startline="150">ConfigTblPtr</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="ld__app_8h_1a471bba37561793f0beb9fa42c69101b6" compoundref="ld__app_8h" startline="65">LD_25_PERCENT</references>
        <references refid="ld__app_8h_1a45fba61618877b7986124026298e054f" compoundref="ld__app_8h" startline="66">LD_50_PERCENT</references>
        <references refid="ld__app_8h_1a75b500ab1d4a131b1e1f837cd1199a8c" compoundref="ld__app_8h" startline="67">LD_75_PERCENT</references>
        <references refid="struct_l_d___config_tbl__t_1afc8d31b865538e33a4a0c9f1df5ab657" compoundref="ld__tbldefs_8h" startline="146">LD_ConfigTbl_t::LD_ALT_MAX</references>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a80b73b173256602c4189aa7a04611271" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::AltitudeLock</definition>
        <argsstring>(void)</argsstring>
        <name>AltitudeLock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="555" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1019" bodyend="1029"/>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="ld__app_8h_1a9a4f3c7a24fc6aff5c9a1c84edd1a986" compoundref="ld__app_8h" startline="68">LD_LOCAL_POSITION_TIMEOUT</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="struct_l_d___current_value_table__t_1a0f260c38a1ad37b2ef45c6262d9547e8" compoundref="ld__app_8h" startline="101">LD_CurrentValueTable_t::VehicleLocalPositionMsg</references>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
        <referencedby refid="class_l_d_1af74b89ef413c8518e33950593ae02bc3" compoundref="ld__app_8cpp" startline="1036" endline="1039">PositionLock</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1af74b89ef413c8518e33950593ae02bc3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::PositionLock</definition>
        <argsstring>(void)</argsstring>
        <name>PositionLock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="573" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1036" bodyend="1039"/>
        <references refid="class_l_d_1a80b73b173256602c4189aa7a04611271" compoundref="ld__app_8cpp" startline="1019" endline="1029">AltitudeLock</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="struct_l_d___current_value_table__t_1a0f260c38a1ad37b2ef45c6262d9547e8" compoundref="ld__app_8h" startline="101">LD_CurrentValueTable_t::VehicleLocalPositionMsg</references>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a563765598acd3f4070c645e647274318" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::ManualControlPresent</definition>
        <argsstring>(void)</argsstring>
        <name>ManualControlPresent</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="591" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1046" bodyend="1050"/>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="struct_l_d___current_value_table__t_1a79ff248f3e8e4e6b202af74cd23560a1" compoundref="ld__app_8h" startline="98">LD_CurrentValueTable_t::ManualControlSetpointMsg</references>
        <references refid="struct_l_d___current_value_table__t_1ab2ab634c1b3e8a439a0d912b91245c27" compoundref="ld__app_8h" startline="104">LD_CurrentValueTable_t::VehicleControlModeMsg</references>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1ae1782c53f92f2e0cc303c83313be3302" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a1a0d7c4c11a131b0d46ebcb64832e293" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">osalbool</ref></type>
        <definition>osalbool LD::MinimalThrust</definition>
        <argsstring>(void)</argsstring>
        <name>MinimalThrust</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="609" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1057" bodyend="1069"/>
        <references refid="struct_l_d___current_value_table__t_1a09aa88c4aa67e335586587684f98b495" compoundref="ld__app_8h" startline="86">LD_CurrentValueTable_t::ActuatorControls0Msg</references>
        <references refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" compoundref="ld__app_8h" startline="150">ConfigTblPtr</references>
        <references refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" compoundref="ld__app_8h" startline="161">CVT</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="struct_l_d___config_tbl__t_1a08296c78ebc7d49ecfa86812b56f1ab4" compoundref="ld__tbldefs_8h" startline="155">LD_ConfigTbl_t::LD_LOW_T_THR</references>
        <references refid="struct_l_d___config_tbl__t_1a8eae2179b2542e7483dfec0605968a36" compoundref="ld__tbldefs_8h" startline="164">LD_ConfigTbl_t::LD_MAN_MIN_THR</references>
        <references refid="ld__app_8h_1adc62dfd9eff0a8c0a2ae3667b8693dad" compoundref="ld__app_8h" startline="69">ONE_PERCENT_THRUST</references>
        <references refid="struct_l_d___current_value_table__t_1ab2ab634c1b3e8a439a0d912b91245c27" compoundref="ld__app_8h" startline="104">LD_CurrentValueTable_t::VehicleControlModeMsg</references>
        <referencedby refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</referencedby>
        <referencedby refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a685893386840122dc4ba039f77582a6a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::UpdateState</definition>
        <argsstring>(void)</argsstring>
        <name>UpdateState</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect if vehicle is in free fall state. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Computes net acceleration acting on the vehicle. if the value is close to the free fall threshold then true is returned</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<simplesect kind="return"><para><table rows="0" cols="0"></table>
id net acceleration acting on the vehicle&apos;s body is less than free fall threshold value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="627" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1076" bodyend="1099"/>
        <references refid="class_l_d_1ab919b42911526c52f10fe08d205db9bc" compoundref="ld__app_8cpp" startline="739" endline="758">DetectFreeFall</references>
        <references refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" compoundref="ld__app_8cpp" startline="765" endline="855">DetectGroundContactState</references>
        <references refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" compoundref="ld__app_8cpp" startline="862" endline="950">DetectLandedState</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059a9f6b27964ad25a0ed9cea7abb2f158c1" compoundref="ld__app_8h" startline="114">FLYING</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059a2890deec4c472dc866a515c633bdd2e2" compoundref="ld__app_8h" startline="120">FREEFALL</references>
        <references refid="class_l_d_1a5affd6cd8aa4a83005ccf4b6ed4de2e7" compoundref="ld__app_8h" startline="170">freefall_history</references>
        <references refid="class_state_history_1a31c0f73aba3ae8279c6f46db817284a6" compoundref="ld__state__history_8cpp" startline="86" endline="89">StateHistory::getState</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059ab522e2e5aeb4240e3a3deff019367498" compoundref="ld__app_8h" startline="123">GROUND_CONTACT</references>
        <references refid="class_l_d_1a3642fa24a47fddaf0186cb4ee8465c7d" compoundref="ld__app_8h" startline="176">ground_contact_history</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059a2de9677f181de22ef76264daec0c8449" compoundref="ld__app_8h" startline="117">LANDED</references>
        <references refid="class_l_d_1ad1cdcff88aec9d33bcc84fd8d5b4fe1b" compoundref="ld__app_8h" startline="173">landed_history</references>
        <references refid="class_state_history_1a2aa84c37fcaf5238e516919bb2329058" compoundref="ld__state__history_8cpp" startline="56" endline="71">StateHistory::setState</references>
        <references refid="class_l_d_1a58d5ae5c2e0bd8d258d3fdabc97881fd" compoundref="ld__app_8h" startline="164">state</references>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a047e64be008d09ba1ad470505cbe02be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::Execute</definition>
        <argsstring>(void)</argsstring>
        <name>Execute</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Land Detector Task. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Executes every time a new message is available, determines if vehicle is in one of three states, writes this information to VehicleLandDetectedMsg and publishes it.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="641" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1106" bodyend="1143"/>
        <references refid="class_l_d_1a4b862b40b1e9a83596864e7755aa3d2e" compoundref="ld__app_8h" startline="188">altitude_max</references>
        <references refid="class_l_d_1a4556d94e5dd6c6566ee98f8615d63574" compoundref="ld__app_8cpp" startline="1150" endline="1193">DetectStateChange</references>
        <references refid="common__types_8h_1aa93f0eb578d23995850d61f7d61c55c1">FALSE</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059a2890deec4c472dc866a515c633bdd2e2" compoundref="ld__app_8h" startline="120">FREEFALL</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059ab522e2e5aeb4240e3a3deff019367498" compoundref="ld__app_8h" startline="123">GROUND_CONTACT</references>
        <references refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" compoundref="ld__app_8h" startline="158">HkTlm</references>
        <references refid="ld__app_8h_1af70e39ca71dd98143e8be4ce8c165059a2de9677f181de22ef76264daec0c8449" compoundref="ld__app_8h" startline="117">LANDED</references>
        <references refid="class_l_d_1a79431d69e4347dc2fbb1ec8b98de51b8" compoundref="ld__app_8cpp" startline="984" endline="1012">MaxAltitude</references>
        <references refid="class_l_d_1a63490fc7ccfbfa0e7247732909a87cde" compoundref="ld__app_8h" startline="185">publish_counter</references>
        <references refid="class_l_d_1acd7d7d417f0a1d316a9595b22cb68b99" compoundref="ld__app_8cpp" startline="629" endline="633">SendDiag</references>
        <references refid="class_l_d_1a20e5b7739763448d35f2977362d66e9d" compoundref="ld__app_8cpp" startline="618" endline="622">SendVehicleLandDetectedMsg</references>
        <references refid="struct_l_d___hk_tlm__t_1a6c22f0b50c0ba70bd7c14497f72c387b" compoundref="ld__msg_8h" startline="158">LD_HkTlm_t::state</references>
        <references refid="class_l_d_1a58d5ae5c2e0bd8d258d3fdabc97881fd" compoundref="ld__app_8h" startline="164">state</references>
        <references refid="common__types_8h_1af8b7e3953afcaed80d23a662c9c4574a">uint64</references>
        <references refid="class_l_d_1a685893386840122dc4ba039f77582a6a" compoundref="ld__app_8cpp" startline="1076" endline="1099">UpdateState</references>
        <references refid="class_l_d_1a21fcbd078fabaf6b4074d7ca4f9e9197" compoundref="ld__app_8h" startline="154">VehicleLandDetectedMsg</references>
        <referencedby refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" compoundref="ld__app_8cpp" startline="396" endline="504">RcvSchPipeMsg</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_l_d_1a4556d94e5dd6c6566ee98f8615d63574" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LD::DetectStateChange</definition>
        <argsstring>(void)</argsstring>
        <name>DetectStateChange</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Detect Change In State. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>Reads VehicleLandDetectedMsg and determines if state of the vehicle has changed.</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="654" column="1" bodyfile="apps/ld/fsw/src/ld_app.cpp" bodystart="1150" bodyend="1193"/>
        <references refid="cfe__evs_8h_1a9bc5a36744c852941ce1aa5e07932ff4">CFE_EVS_INFORMATION</references>
        <references refid="cfe__evs_8c_1aab8630735c7be46fb4162323a112d298">CFE_EVS_SendEvent</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43aa81cc63a9a2580e94bfb1757bda2e3cc" compoundref="ld__events_8h" startline="298">LD_FLIGHT_DETECTED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ac9e32d32f4e9efe3ff114d5bbbfc6fb8" compoundref="ld__events_8h" startline="262">LD_FREEFALL_DETECTED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43ac141663dd697fe00baf00bbcd2b435ec" compoundref="ld__events_8h" startline="274">LD_GROUNDCONTACT_DETECTED_EID</references>
        <references refid="ld__events_8h_1a3273fec17864070c2e54132105808c43a49473e49cce8fb920ff2607ac3d97bfe" compoundref="ld__events_8h" startline="286">LD_LAND_DETECTED_EID</references>
        <references refid="class_l_d_1a18c0778ce247894df368c5e96701c74d" compoundref="ld__app_8h" startline="167">PreviousLandDetectedMsg</references>
        <references refid="class_l_d_1a21fcbd078fabaf6b4074d7ca4f9e9197" compoundref="ld__app_8h" startline="154">VehicleLandDetectedMsg</references>
        <referencedby refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" compoundref="ld__app_8cpp" startline="1106" endline="1143">Execute</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_l_d_1acc92c70ccb29495d847ba92d4caded13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="common__types_8h_1a5eb512da689eec1a7472ab97e2ab6be3" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">int32</ref></type>
        <definition>int32 LD::ValidateConfigTbl</definition>
        <argsstring>(void *)</argsstring>
        <name>ValidateConfigTbl</name>
        <param>
          <type>void *</type>
          <defname>ConfigTblPtr</defname>
        </param>
        <briefdescription>
<para>Validate <ref refid="class_l_d" kindref="compound">LD</ref> configuration table. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Description</title><para>This function validates <ref refid="class_l_d" kindref="compound">LD</ref>&apos;s configuration table</para></simplesect>
<simplesect kind="par"><title>Assumptions, External Events, and Notes:</title><para>None</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ConfigTblPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the table to validate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><table rows="1" cols="2"><row>
<entry thead="no"><para><ref refid="cfe__error_8h_1ab2b6b188c32c70b8ca0578b7a7bc091b" kindref="member" external="/home/vagrant/airliner/build/reference/default/docs/html/cfe/detailed_design/cfe.tag">CFE_SUCCESS</ref> </para></entry><entry thead="no"><para></para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="apps/ld/fsw/src/ld_app.h" line="673" column="1" bodyfile="apps/ld/fsw/src/ld_config_utils.cpp" bodystart="95" bodyend="183"/>
        <references refid="struct_l_d___config_tbl__t_1afc8d31b865538e33a4a0c9f1df5ab657" compoundref="ld__tbldefs_8h" startline="146">LD_ConfigTbl_t::LD_ALT_MAX</references>
        <references refid="ld__tbldefs_8h_1aadbd02a28a0f3250323de4a31cee8498" compoundref="ld__tbldefs_8h" startline="62">LD_ALT_MAX_MAX</references>
        <references refid="ld__tbldefs_8h_1a8fb5de3b97ceac78c073263e582d06af" compoundref="ld__tbldefs_8h" startline="61">LD_ALT_MAX_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a358a7c5b380cd458d7c82aecbb9e9697" compoundref="ld__tbldefs_8h" startline="119">LD_ConfigTbl_t::LD_FFALL_THR</references>
        <references refid="ld__tbldefs_8h_1ace6d8517d788e2ebb62f7d45f6afc8c0" compoundref="ld__tbldefs_8h" startline="56">LD_FFALL_THR_MAX</references>
        <references refid="ld__tbldefs_8h_1a8ee826e11559993f0404097983e4a022" compoundref="ld__tbldefs_8h" startline="55">LD_FFALL_THR_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a8ec3f0c6274f98005cb621eef86f95d8" compoundref="ld__tbldefs_8h" startline="128">LD_ConfigTbl_t::LD_FFALL_TTRI</references>
        <references refid="ld__tbldefs_8h_1a2791e0e8c7f6e826b1e1a16156c017e9" compoundref="ld__tbldefs_8h" startline="58">LD_FFALL_TTRI_MAX</references>
        <references refid="ld__tbldefs_8h_1afcc2b398956f87c2c2eb56b76e29cf58" compoundref="ld__tbldefs_8h" startline="57">LD_FFALL_TTRI_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1ae3c516f79aaf0da1f4a3704362035c3f" compoundref="ld__tbldefs_8h" startline="191">LD_ConfigTbl_t::LD_LANDSPEED</references>
        <references refid="ld__tbldefs_8h_1a1a235bc7772053d43a46f90f1804fbf9" compoundref="ld__tbldefs_8h" startline="72">LD_LANDSPEED_MAX</references>
        <references refid="ld__tbldefs_8h_1a4691851e17cd3073c67edc284fde8511" compoundref="ld__tbldefs_8h" startline="71">LD_LANDSPEED_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a08296c78ebc7d49ecfa86812b56f1ab4" compoundref="ld__tbldefs_8h" startline="155">LD_ConfigTbl_t::LD_LOW_T_THR</references>
        <references refid="ld__tbldefs_8h_1aee772c51c585882c98ed82bef84c4a18" compoundref="ld__tbldefs_8h" startline="64">LD_LOW_T_THR_MAX</references>
        <references refid="ld__tbldefs_8h_1a3c167614b0154a89ed6cede458d768c4" compoundref="ld__tbldefs_8h" startline="63">LD_LOW_T_THR_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a45eb3106ecea081056bb1b340384e595" compoundref="ld__tbldefs_8h" startline="137">LD_ConfigTbl_t::LD_MAN_DWNTHR</references>
        <references refid="ld__tbldefs_8h_1a52e260a6a91e484af347a0d5ab9829b7" compoundref="ld__tbldefs_8h" startline="60">LD_MAN_DWNTHR_MAX</references>
        <references refid="ld__tbldefs_8h_1abced579f874bea37b181c9d4f7a996e0" compoundref="ld__tbldefs_8h" startline="59">LD_MAN_DWNTHR_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a8eae2179b2542e7483dfec0605968a36" compoundref="ld__tbldefs_8h" startline="164">LD_ConfigTbl_t::LD_MAN_MIN_THR</references>
        <references refid="ld__tbldefs_8h_1a41aa6566b72a5e75352e05ad4cc7eafb" compoundref="ld__tbldefs_8h" startline="66">LD_MAN_MIN_THR_MAX</references>
        <references refid="ld__tbldefs_8h_1aa759c769a90a740023f6e98c31ad2f16" compoundref="ld__tbldefs_8h" startline="65">LD_MAN_MIN_THR_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a6ff523cdc334ea544061b33e0b32c030" compoundref="ld__tbldefs_8h" startline="200">LD_ConfigTbl_t::LD_MIN_THR_NO_ALT_TIMEOUT</references>
        <references refid="ld__tbldefs_8h_1ae7096d1e7b2053ae9ac7971eb0c3e8b9" compoundref="ld__tbldefs_8h" startline="74">LD_MIN_THR_NO_ALT_TIMEOUT_MAX</references>
        <references refid="ld__tbldefs_8h_1af131ba2753c01cdebae721b48ff737fc" compoundref="ld__tbldefs_8h" startline="73">LD_MIN_THR_NO_ALT_TIMEOUT_MIN</references>
        <references refid="ld__tbldefs_8h_1aa379dbd3ac49631e1f772139b4db03c4" compoundref="ld__tbldefs_8h" startline="54">LD_PARAM_NAME_MAX_LEN</references>
        <references refid="struct_l_d___config_tbl__t_1a2819e27b41eb5feb7d28843d192e6214" compoundref="ld__tbldefs_8h" startline="182">LD_ConfigTbl_t::LD_POS_STK_DW_THRES</references>
        <references refid="ld__tbldefs_8h_1a40bf1770ab2836b85391f1374ce31b0b" compoundref="ld__tbldefs_8h" startline="70">LD_POS_STK_DW_THRES_MAX</references>
        <references refid="ld__tbldefs_8h_1a6543348168a8ba77b59b0f1bfc0ec847" compoundref="ld__tbldefs_8h" startline="69">LD_POS_STK_DW_THRES_MIN</references>
        <references refid="struct_l_d___config_tbl__t_1a7f40752e881cd126318cf8da97802ae2" compoundref="ld__tbldefs_8h" startline="173">LD_ConfigTbl_t::LD_POS_STK_UP_THRES</references>
        <references refid="ld__tbldefs_8h_1ac2665f3a3f96e8dd5b883b56ca375c0b" compoundref="ld__tbldefs_8h" startline="68">LD_POS_STK_UP_THRES_MAX</references>
        <references refid="ld__tbldefs_8h_1ab2abdb5eef47ba7c9328c6f6d38f4483" compoundref="ld__tbldefs_8h" startline="67">LD_POS_STK_UP_THRES_MIN</references>
        <referencedby refid="class_l_d_1ab7368e55785576eebc6716566f9885a1" compoundref="ld__config__utils_8cpp" startline="50" endline="88">InitConfigTbl</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_l_d" kindref="compound">LD</ref> Application Class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="6">
        <label>LD_CurrentValueTable_t</label>
        <link refid="struct_l_d___current_value_table__t"/>
      </node>
      <node id="1">
        <label>LD</label>
        <link refid="class_l_d"/>
        <childnode refid="2" relation="usage">
          <edgelabel>HkTlm</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>landed_history</edgelabel>
          <edgelabel>freefall_history</edgelabel>
          <edgelabel>ground_contact_history</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>ConfigTblPtr</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>DiagTlm</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>CVT</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>StateHistory</label>
        <link refid="class_state_history"/>
      </node>
      <node id="2">
        <label>LD_HkTlm_t</label>
        <link refid="struct_l_d___hk_tlm__t"/>
      </node>
      <node id="4">
        <label>LD_ConfigTbl_t</label>
        <link refid="struct_l_d___config_tbl__t"/>
      </node>
      <node id="5">
        <label>LD_Diag_t</label>
        <link refid="struct_l_d___diag__t"/>
      </node>
    </collaborationgraph>
    <location file="apps/ld/fsw/src/ld_app.h" line="130" column="1" bodyfile="apps/ld/fsw/src/ld_app.h" bodystart="129" bodyend="674"/>
    <listofallmembers>
      <member refid="class_l_d_1abb8587e7a31c18d0898dab195a6f648d" prot="private" virt="non-virtual"><scope>LD</scope><name>AcquireConfigPointers</name></member>
      <member refid="class_l_d_1a4b862b40b1e9a83596864e7755aa3d2e" prot="public" virt="non-virtual"><scope>LD</scope><name>altitude_max</name></member>
      <member refid="class_l_d_1a80b73b173256602c4189aa7a04611271" prot="private" virt="non-virtual"><scope>LD</scope><name>AltitudeLock</name></member>
      <member refid="class_l_d_1a0b7f4c4f83557ddf04c44d4cec2d5908" prot="public" virt="non-virtual"><scope>LD</scope><name>AppMain</name></member>
      <member refid="class_l_d_1aeef086a0e35cee303d27098af2c96a53" prot="public" virt="non-virtual"><scope>LD</scope><name>arming_time</name></member>
      <member refid="class_l_d_1ac480948c008f5acee8a23e8d981658e0" prot="public" virt="non-virtual"><scope>LD</scope><name>CmdPipeId</name></member>
      <member refid="class_l_d_1a2631a6ee8285196d8e6ff1728c40bacb" prot="public" virt="non-virtual"><scope>LD</scope><name>ConfigTblHdl</name></member>
      <member refid="class_l_d_1a53e4732b2782e7ca2948089b0d9469cd" prot="public" virt="non-virtual"><scope>LD</scope><name>ConfigTblPtr</name></member>
      <member refid="class_l_d_1ac8485c0bd0557eb26030c168b2b6db39" prot="public" virt="non-virtual"><scope>LD</scope><name>CVT</name></member>
      <member refid="class_l_d_1ab919b42911526c52f10fe08d205db9bc" prot="private" virt="non-virtual"><scope>LD</scope><name>DetectFreeFall</name></member>
      <member refid="class_l_d_1a761162cad379cd216b62c9c3f09d9415" prot="private" virt="non-virtual"><scope>LD</scope><name>DetectGroundContactState</name></member>
      <member refid="class_l_d_1aea458aae16fc3be3a0bafbedd02ab14a" prot="private" virt="non-virtual"><scope>LD</scope><name>DetectLandedState</name></member>
      <member refid="class_l_d_1a4556d94e5dd6c6566ee98f8615d63574" prot="private" virt="non-virtual"><scope>LD</scope><name>DetectStateChange</name></member>
      <member refid="class_l_d_1a05fbd1e5c0973dfbecac93d16b358ae0" prot="public" virt="non-virtual"><scope>LD</scope><name>DiagTlm</name></member>
      <member refid="class_l_d_1a047e64be008d09ba1ad470505cbe02be" prot="private" virt="non-virtual"><scope>LD</scope><name>Execute</name></member>
      <member refid="class_l_d_1a5affd6cd8aa4a83005ccf4b6ed4de2e7" prot="public" virt="non-virtual"><scope>LD</scope><name>freefall_history</name></member>
      <member refid="class_l_d_1a3642fa24a47fddaf0186cb4ee8465c7d" prot="public" virt="non-virtual"><scope>LD</scope><name>ground_contact_history</name></member>
      <member refid="class_l_d_1ae492dcbfab89a15bf63e6ba3d0f196bb" prot="public" virt="non-virtual"><scope>LD</scope><name>GROUND_CONTACT_TRIGGER_TIME_US</name></member>
      <member refid="class_l_d_1a207ae3a136ba3ae63361d3671d8ed034" prot="public" virt="non-virtual"><scope>LD</scope><name>HkTlm</name></member>
      <member refid="class_l_d_1a6c294d7db7769c8c7ae8db3ba474b33c" prot="public" virt="non-virtual"><scope>LD</scope><name>InitApp</name></member>
      <member refid="class_l_d_1ab7368e55785576eebc6716566f9885a1" prot="private" virt="non-virtual"><scope>LD</scope><name>InitConfigTbl</name></member>
      <member refid="class_l_d_1ab2bf530ec594320f03831ad66c1224a1" prot="public" virt="non-virtual"><scope>LD</scope><name>InitData</name></member>
      <member refid="class_l_d_1ac1fead82922711aadbf71bb0e3762d43" prot="public" virt="non-virtual"><scope>LD</scope><name>InitEvent</name></member>
      <member refid="class_l_d_1aec2cd018382ed81a0912a559e4be9061" prot="public" virt="non-virtual"><scope>LD</scope><name>InitPipe</name></member>
      <member refid="class_l_d_1a8e69944037430fc0c165cc1d9fb0a217" prot="public" virt="non-virtual"><scope>LD</scope><name>LAND_DETECTOR_ARM_PHASE_TIME_US</name></member>
      <member refid="class_l_d_1a8392212a9be7686547c439ef3015eed6" prot="public" virt="non-virtual"><scope>LD</scope><name>LAND_DETECTOR_TRIGGER_TIME_US</name></member>
      <member refid="class_l_d_1a34b4544ef212b11af64e5f34506a3f7b" prot="public" virt="non-virtual"><scope>LD</scope><name>LAND_DETECTOR_UPDATE_RATE_HZ</name></member>
      <member refid="class_l_d_1ad1cdcff88aec9d33bcc84fd8d5b4fe1b" prot="public" virt="non-virtual"><scope>LD</scope><name>landed_history</name></member>
      <member refid="class_l_d_1a4177ef8e447bfc2bbdbf3566d8261908" prot="public" virt="non-virtual"><scope>LD</scope><name>LD</name></member>
      <member refid="class_l_d_1a563765598acd3f4070c645e647274318" prot="private" virt="non-virtual"><scope>LD</scope><name>ManualControlPresent</name></member>
      <member refid="class_l_d_1a79431d69e4347dc2fbb1ec8b98de51b8" prot="private" virt="non-virtual"><scope>LD</scope><name>MaxAltitude</name></member>
      <member refid="class_l_d_1a39cb4b8ceb51c62dfb967ae49b18b632" prot="public" virt="non-virtual"><scope>LD</scope><name>min_thrust_start</name></member>
      <member refid="class_l_d_1ae1782c53f92f2e0cc303c83313be3302" prot="private" virt="non-virtual"><scope>LD</scope><name>MinimalThrust</name></member>
      <member refid="class_l_d_1af74b89ef413c8518e33950593ae02bc3" prot="private" virt="non-virtual"><scope>LD</scope><name>PositionLock</name></member>
      <member refid="class_l_d_1a18c0778ce247894df368c5e96701c74d" prot="public" virt="non-virtual"><scope>LD</scope><name>PreviousLandDetectedMsg</name></member>
      <member refid="class_l_d_1a83ca6afc974b7caf6b6b772467d03554" prot="public" virt="non-virtual"><scope>LD</scope><name>ProcessAppCmds</name></member>
      <member refid="class_l_d_1aebe78ee2184bb47e1d3de036c7dda3be" prot="public" virt="non-virtual"><scope>LD</scope><name>ProcessCmdPipe</name></member>
      <member refid="class_l_d_1a63490fc7ccfbfa0e7247732909a87cde" prot="public" virt="non-virtual"><scope>LD</scope><name>publish_counter</name></member>
      <member refid="class_l_d_1ac5ba1d0769547e5b99d9e87cd484fb92" prot="public" virt="non-virtual"><scope>LD</scope><name>RcvSchPipeMsg</name></member>
      <member refid="class_l_d_1ac6fa038ebd5a87c21bc904c24ceae77f" prot="public" virt="non-virtual"><scope>LD</scope><name>ReportHousekeeping</name></member>
      <member refid="class_l_d_1ac88af03e4176addaa0bfe62edf595fd1" prot="public" virt="non-virtual"><scope>LD</scope><name>SchPipeId</name></member>
      <member refid="class_l_d_1acd7d7d417f0a1d316a9595b22cb68b99" prot="public" virt="non-virtual"><scope>LD</scope><name>SendDiag</name></member>
      <member refid="class_l_d_1a20e5b7739763448d35f2977362d66e9d" prot="public" virt="non-virtual"><scope>LD</scope><name>SendVehicleLandDetectedMsg</name></member>
      <member refid="class_l_d_1a58d5ae5c2e0bd8d258d3fdabc97881fd" prot="public" virt="non-virtual"><scope>LD</scope><name>state</name></member>
      <member refid="class_l_d_1a6bd75d01ff1780cb9f4b3b4fbe1c3b48" prot="public" virt="non-virtual"><scope>LD</scope><name>takeoff_time</name></member>
      <member refid="class_l_d_1ac95f64d5be84b7db68e485b972e7caf2" prot="private" virt="non-virtual"><scope>LD</scope><name>TakeoffThrottle</name></member>
      <member refid="class_l_d_1a059bf3b0083cdff15e863f86d55aeaf6" prot="public" virt="non-virtual"><scope>LD</scope><name>total_flight_time</name></member>
      <member refid="class_l_d_1aed47b65bed2f59a27db112b737aee54c" prot="public" virt="non-virtual"><scope>LD</scope><name>uiRunStatus</name></member>
      <member refid="class_l_d_1a685893386840122dc4ba039f77582a6a" prot="private" virt="non-virtual"><scope>LD</scope><name>UpdateState</name></member>
      <member refid="class_l_d_1acc92c70ccb29495d847ba92d4caded13" prot="public" virt="non-virtual"><scope>LD</scope><name>ValidateConfigTbl</name></member>
      <member refid="class_l_d_1a21fcbd078fabaf6b4074d7ca4f9e9197" prot="public" virt="non-virtual"><scope>LD</scope><name>VehicleLandDetectedMsg</name></member>
      <member refid="class_l_d_1ab0df45aceef2d8aaf39ffcf07342f6a7" prot="public" virt="non-virtual"><scope>LD</scope><name>VerifyCmdLength</name></member>
      <member refid="class_l_d_1aefe1fd083b5ee587d99641cb8c97149f" prot="public" virt="non-virtual"><scope>LD</scope><name>~LD</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
